{"version":3,"file":"static/js/7850.171f78c3.chunk.js","mappings":"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","sources":["layout/BreadCrumb.jsx","pages/static/News/DynamicNews.jsx","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["import { Button } from \"@mui/material\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst BreadCrumb = ({ heading, image, link }) => {\r\n  const route = useLocation().pathname;\r\n  const { token } = useGlobalContext();\r\n  const routeArr = route.split(\"/\");\r\n  let Image = image ? image : `/images/backgrounds/g20.jpg`;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{heading}</title>\r\n        <link rel=\"canonical\" href={\"https://www.yuvamanthan.org\" + route} />\r\n      </Helmet>\r\n      <section\r\n        className=\"section breadcrumb\"\r\n        style={{\r\n          // background: `url(${process.env.REACT_APP_MAIN_URL}images/backgrounds/g20.jpg) no-repeat center`,\r\n          background: `url(${Image}) no-repeat center`,\r\n          backgroundSize: \"cover\",\r\n          boxShadow: \"inset 0 0 0 2000px rgba(8, 8, 8, 0.618)\",\r\n        }}\r\n      >\r\n        <div className=\"container pt-2 pt-sm-3 pt-md-4 pt-lg-5 mb-0\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8\">\r\n              <h2 className=\"text-white mb-3 text-initial\">{heading}</h2>\r\n              {/* <!-- breadcrumb --> */}\r\n              <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb bg-transparent p-0\">\r\n                  {routeArr.map((rout, index) => {\r\n                    return index === 0 ? (\r\n                      <li key={index} className=\"breadcrumb-item font-weight-semebold\">\r\n                        <Link className=\"text-white\" to=\"/\">\r\n                          Home\r\n                        </Link>\r\n                      </li>\r\n                    ) : (\r\n                      <li key={index} className=\"breadcrumb-item font-weight-semebold\">\r\n                        <Link className=\"text-white text-uppercase\" to={\"/\" + rout}>\r\n                          {rout}\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ol>\r\n              </nav>\r\n              {link && !token ? (\r\n                <Link to={link}>\r\n                  <Button size=\"large\" variant=\"contained\" color=\"warning\"  className=\"text-capitalize rounded-3 py-3 px-4\">\r\n                    Register Now\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import { Person } from \"@mui/icons-material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { apiJson } from \"api\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { useLocation } from \"react-router-dom\";\r\nimport BreadCrumb from \"../../../layout/BreadCrumb\";\r\n\r\nconst DynamicNews = () => {\r\n  // const route = useLocation().pathname;\r\n  // const routeArr = route.split(\"/\");\r\n  // const blogName = routeArr[2];\r\n  let [newsData, setNewsData] = useState([]);\r\n\r\n\r\n  const getAllNews = async () => {\r\n    console.log(\"Fetching Quites Data \");\r\n    try {\r\n      const res = await apiJson.get(\"admin/news\");\r\n      if (res.status == 200) {\r\n        console.log(\"All blogs Data: \", res.data.result);\r\n        setNewsData(res?.data?.result);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"All Quotes Error: \", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getAllNews();\r\n    console.log(\"newssss\" + newsData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumb heading={\"News\"} />\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"row\">\r\n                {newsData.map((blog, index) => {\r\n                  return (\r\n                    <div key={index} className=\"col-sm-6 mb-4\">\r\n                      <article className=\"card border-0 rounded-0 position-relative box-shadow zindex-1\">\r\n                        <div className=\"card-type\">News</div>\r\n                        <img className=\"card-img-top rounded-top-0\" src={blog?.img} alt=\"blog-thumb\" />\r\n                        <div className=\"card-body\">\r\n                          <div className=\"title-border-left\">\r\n                            <div className=\"card-meta mb-2 d-flex align-items-center justify-content-between\">\r\n                              <span className=\"text-secondary d-flex align-items-center\">\r\n                                {\" \"}\r\n                                by{\" \"}\r\n                                <Avatar\r\n                                  className=\"ms-2 me-1\"\r\n                                  sx={{\r\n                                    height: 30,\r\n                                    width: 30,\r\n                                  }}\r\n                                  src=\"/favicon.ico\"\r\n                                >\r\n                                  <Person />\r\n                                </Avatar>\r\n                                {blog.author}\r\n                              </span>{\" \"}\r\n                              <span className=\"text-secondary\">{moment(blog.createdAt).calendar()}</span>\r\n                            </div>\r\n                            <h6 className=\"card-title\">\r\n                              <a href={`/news/${blog.slug}`} className=\"text-dark fs-6\">\r\n                                {blog.title}\r\n                              </a>\r\n                            </h6>\r\n                          </div>\r\n                          {/* <p className=\"card-text\">\r\n                           {blog.heading}...\r\n                          </p> */}\r\n                          <div className=\"line-clamp-blog text-secondary\">{blog?.heading}</div>\r\n                          <a href={\"/news/\" + blog?.slug} className=\"btn btn-secondary btn-arrow\">\r\n                            read more\r\n                          </a>\r\n                        </div>\r\n                      </article>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {/* sidebar */}\r\n            <aside className=\"col-lg-4\">\r\n              {/* latest post */}\r\n              <div className=\"bg-white px-4 py-5 box-shadow mb-5\">\r\n                <h4 className=\"mb-4\">Latest Article</h4>\r\n                {/* post-item */}\r\n                {newsData.map((blog, index) => {\r\n                  return (\r\n                    <div className=\"media d-flex border-bottom border-color pb-3 mb-3\">\r\n                      <img className=\"me-3 mini-blog-image\" src={blog?.img} alt=\"post-thumb\" />\r\n                      <div className=\"media-body\">\r\n                        <h5 className=\"mt-0\">\r\n                          <a href={`/news/${blog?.slug}`} className=\"text-dark\">\r\n                            {blog.title}\r\n                          </a>\r\n                        </h5>\r\n                        {/* Aug 02, 2018 */}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicNews;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["_ref","heading","image","link","route","useLocation","pathname","token","useGlobalContext","routeArr","split","Image","_jsxs","_Fragment","children","Helmet","_jsx","rel","href","className","style","background","concat","backgroundSize","boxShadow","map","rout","index","Link","to","Button","size","variant","color","DynamicNews","newsData","setNewsData","useState","useEffect","window","scrollTo","async","console","log","res","apiJson","get","_res$data","status","data","result","error","getAllNews","BreadCrumb","blog","src","img","alt","Avatar","sx","height","width","Person","author","moment","createdAt","calendar","slug","title","createSvgIcon","d"],"sourceRoot":""}