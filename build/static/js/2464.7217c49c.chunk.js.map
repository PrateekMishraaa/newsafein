{"version":3,"file":"static/js/2464.7217c49c.chunk.js","mappings":"qPAQA,MA+GA,EA/GiBA,IACf,IAAKC,EAAaC,IAAkBC,EAAAA,EAAAA,YACpC,MAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLC,MAAO,GACPC,OAAQ,IAEVC,SAAUC,MAAOC,EAAQC,KAEvB,IADAC,EAAAA,EAAAA,GAAM,WACFhB,EAAYiB,OAAQ,CACtB,MAAMC,GAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQL,GAAM,IAAEN,QAASR,IACnC,IACE,MAAMoB,QAAYC,EAAAA,GAAQC,KAAK,cAAeJ,GACD,IAADK,EAA5C,GAAkB,KAAdH,EAAII,QAAiC,IAAb,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SAC5BC,OAAOC,QAAQC,QACfZ,EAAAA,EAAAA,GAAM,UAAc,OAAHI,QAAG,IAAHA,GAAS,QAANG,EAAHH,EAAKF,YAAI,IAAAK,OAAN,EAAHA,EAAWM,aAASC,EAAW,KAEpD,CAAE,MAAOC,GAAM,IAADC,EAAAC,GACZjB,EAAAA,EAAAA,GAAM,QAAY,OAAHe,QAAG,IAAHA,GAAa,QAAVC,EAAHD,EAAKG,gBAAQ,IAAAF,GAAM,QAANC,EAAbD,EAAed,YAAI,IAAAe,OAAhB,EAAHA,EAAqBJ,QACtC,CACF,MACEM,EAAAA,GAAMC,MAAM,gCAmBlB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,QAAM5B,SAAUT,EAAOsC,aAAaF,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOM,IAAI,QAAQD,UAAU,aAAYH,SAAC,WAG1CF,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLF,UAAU,eACVG,GAAG,QACHC,MAAO3C,EAAOW,OAAOR,MACrByC,KAAK,QACL,mBAAiB,QACjBC,SAAU7C,EAAO8C,mBAGrBT,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOM,IAAI,UAAUD,UAAU,aAAYH,SAAC,iBAG5CF,EAAAA,EAAAA,KAAA,SAAOO,KAAK,OAAOF,UAAU,eAAeK,KAAK,UAAUD,MAAO3C,EAAOW,OAAOP,QAASsC,GAAG,UAAUG,SAAU7C,EAAO8C,mBAEzHT,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOM,IAAI,MAAMD,UAAU,aAAYH,SAAC,WAGxCF,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLF,UAAU,oBACVK,KAAK,UACLF,GAAG,MACHK,OAAO,oBACPF,SAAWG,IACLA,EAAEC,OAAOC,MAAMpC,QACjBd,EAAOmD,cAAc,MAAOH,EAAEC,OAAOC,MAAM,WASnDb,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOM,IAAI,SAASD,UAAU,aAAYH,SAAC,YAG3CF,EAAAA,EAAAA,KAAA,SAAOO,KAAK,OAAOF,UAAU,eAAeK,KAAK,SAASD,MAAO3C,EAAOW,OAAOH,OAAQkC,GAAG,SAASG,SAAU7C,EAAO8C,mBAEtHT,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOM,IAAI,UAAUD,UAAU,aAAYH,SAAC,aAG5CF,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAC/C,QAASR,EAAawD,WAAYvD,EAAgBwD,YAAY,6BAG5EpB,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASF,UAAU,kBAAiBH,SAAC,kB,0FC3G5D,MAgBA,EAhBmBmB,IAA8B,IAA7B,QAAElD,EAAO,WAAEgD,GAAYE,EAKvC,OACIrB,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CACLC,OAAQC,IACR3C,KAAMV,GAAoB,GAC1BwC,SATec,CAACC,EAAOH,KAC/B,MAAM1C,EAAO0C,EAAOI,UACpBR,EAAWtC,Q","sources":["pages/Admin/pages/websitecontent/AddBlog.jsx","utils/CKEditor.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { apiAuth } from \"api\";\r\nimport { Popup } from \"utils/Popup\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport MyCKEditor from \"utils/CKEditor\";\r\n\r\nconst AddBlog = (props) => {\r\n  let [blogContent, setBlogContent] = useState();\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      heading: \"\",\r\n      content: \"\",\r\n      img: \"\",\r\n      bgimg: \"\",\r\n      author: \"\",\r\n    },\r\n    onSubmit: async (values, action) => {\r\n      Popup(\"loading\");\r\n      if (blogContent.length) {\r\n        const data = { ...values, content: blogContent };\r\n        try {\r\n          const res = await apiAuth.post(\"admin/blogs\", data);\r\n          if (res.status == 200 || res?.success == 1) {\r\n            window.history.back();\r\n            Popup(\"success\", res?.data?.message, undefined, 1500);\r\n          }\r\n        } catch (err) {\r\n          Popup(\"error\", err?.response?.data?.message);\r\n        }\r\n      } else{\r\n        toast.error(\"All fields are Required!!\");\r\n      }\r\n\r\n    },\r\n  });\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ font: [] }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ script: \"sub\" }, { script: \"super\" }],\r\n      [\"blockquote\", \"code-block\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n      [\"clean\"],\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={Formik.handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label for=\"title\" className=\"form-label\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              value={Formik.values.title}\r\n              name=\"title\"\r\n              aria-describedby=\"title\"\r\n              onChange={Formik.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"heading\" className=\"form-label\">\r\n              Description\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" name=\"heading\" value={Formik.values.heading} id=\"heading\" onChange={Formik.handleChange} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"img\" className=\"form-label\">\r\n              Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control pt-3\"\r\n              name=\"files[]\"\r\n              id=\"img\"\r\n              accept=\".png, .jpg, .jpeg\"\r\n              onChange={(e) => {\r\n                if (e.target.files.length) {\r\n                  Formik.setFieldValue(\"img\", e.target.files[0]);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          {/* <div className=\"mb-3\">\r\n            <label for=\"bgimg\" className=\"form-label\">Background Image</label>\r\n            <input type=\"file\" className=\"form-control pt-3\" name='bgimg' value={Formik.values.bgimg} id=\"bgimg\" onChange={Formik.handleChange} />\r\n          </div> */}\r\n          <div className=\"mb-3\">\r\n            <label for=\"author\" className=\"form-label\">\r\n              Author\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" name=\"author\" value={Formik.values.author} id=\"author\" onChange={Formik.handleChange} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"Content\" className=\"form-label\">\r\n              Content\r\n            </label>\r\n            <MyCKEditor content={blogContent} setContent={setBlogContent} placeholder=\"Content goes here...\" />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBlog;\r\n","import React from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nconst MyCKEditor = ({ content, setContent }) => {\r\n    const handleEditorChange = (event, editor) => {\r\n        const data = editor.getData();\r\n        setContent(data);\r\n    };\r\n    return (\r\n        <div>\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content ? content : \"\"}\r\n                onChange={handleEditorChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCKEditor;\r\n"],"names":["props","blogContent","setBlogContent","useState","Formik","useFormik","initialValues","title","heading","content","img","bgimg","author","onSubmit","async","values","action","Popup","length","data","_objectSpread","res","apiAuth","post","_res$data","status","success","window","history","back","message","undefined","err","_err$response","_err$response$data","response","toast","error","_jsx","_Fragment","children","_jsxs","handleSubmit","className","for","type","id","value","name","onChange","handleChange","accept","e","target","files","setFieldValue","MyCKEditor","setContent","placeholder","_ref","CKEditor","editor","ClassicEditor","handleEditorChange","event","getData"],"sourceRoot":""}