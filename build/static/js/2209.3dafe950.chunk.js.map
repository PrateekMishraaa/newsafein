{"version":3,"file":"static/js/2209.3dafe950.chunk.js","mappings":"mmOAkBe,SAASA,EAAUC,GAAwD,IAAvD,OAAEC,EAAM,UAAEC,EAAS,GAAEC,EAAE,SAAEC,EAAQ,gBAAEC,GAAiBL,EAErF,MAAOM,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IAEtCG,EAAQC,GAAaC,EAAAA,UAAe,IACpCC,EAAoBC,IAAyBP,EAAAA,EAAAA,WAAS,GASvDQ,EAAaC,UACjB,IACE,MAAMC,QAAYC,EAAAA,GAASC,IAAI,qBAADC,OAA8B,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUD,KACrC,IAADmB,EAAAC,EAAAC,EAAxB,GAAmB,MAAfN,EAAIO,OACNlB,EAAc,OAAHW,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKQ,YAAI,IAAAJ,OAAN,EAAHA,EAAWK,SACtBtB,EAAmB,OAAHa,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKQ,YAAI,IAAAH,GAAS,QAATC,EAATD,EAAWI,eAAO,IAAAH,OAAf,EAAHA,EAAoBI,QACpCC,QAAQC,IAAI,gBAAiBZ,EAEjC,CAAE,MAAOa,GACPF,QAAQC,IAAIC,EAAMC,SAASN,KAAKK,MAClC,GAQF,OALAE,EAAAA,EAAAA,WAAU,KACRjB,KACC,KAIDkB,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAqBbD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACJC,OAAQpC,EACRqC,QAASA,KACPpC,OAAUqC,IACVJ,UAEFD,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAAAL,UACZM,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAC,kBAAgB,wBAAwBzC,OAAQA,EAAOkC,SAAA,EAClED,EAAAA,EAAAA,KAACS,EAAAA,EAAU,KACXF,EAAAA,EAAAA,MAACG,EAAAA,GAAU,CAACzC,GAAG,wBAAwB0C,UAAU,KAAIV,SAAA,CAAC,YACnC,OAAP7B,QAAO,IAAPA,OAAO,EAAPA,EAASsB,OAAO,OAgB3BjB,IAMC8B,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAX,SAAA,CAEa,OAAP7B,QAAO,IAAPA,OAAO,EAAPA,EAASyC,IAAKC,IACHd,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACxC,WAAYA,EAAYuC,OAAQA,MAGxDd,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CAACC,WAAoB,OAAR/C,QAAQ,IAARA,OAAQ,EAARA,EAAUD,GAAIW,mBAAoBA,EAAoBC,sBAAuBA,EAAuBqC,qBAtF5GA,KAErBrC,GADAD,IAqF6KE,WAAYA,eASrM,C,6HCrHA,MA2BA,EA3BkBhB,IAAc,IAADqD,EAAA,IAAZ,MAACC,GAAMtD,EACtB,OACIkC,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,CAAAX,UACIM,EAAAA,EAAAA,MAACG,EAAAA,GAAU,CAACW,SAAS,KAAIpB,SAAA,EACrBD,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CACDX,UAAU,SACVY,MAAM,UACNC,WAAW,KACXC,UAAU,eAAcxB,SAElB,OAALmB,QAAK,IAALA,GAAa,QAARD,EAALC,EAAOM,cAAM,IAAAP,OAAR,EAALA,EAAeQ,OACZ,IACF,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOA,YCAxB,EAZuBtD,IAAgB,IAAf,QAAC8D,GAAQ9D,EAC7B,OACIkC,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,CAAAX,SAEe,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASf,IAAIO,IACFpB,EAAAA,EAAAA,KAAC6B,EAAS,CAAgBT,MAAOA,GAAjBA,EAAMnD,QCkIjD,EAlIwBH,IAAsB,IAADgE,EAAAC,EAAA,IAApB,GAAE9D,EAAE,QAAE+D,GAASlE,EACpC,MAAOmE,EAAaC,IAAkB5D,EAAAA,EAAAA,WAAS,IACzC,SAAC6D,IAAYC,EAAAA,EAAAA,OACZR,EAASS,IAAc/D,EAAAA,EAAAA,UAAS,IACjCgE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBC,UAAWzE,EACX0E,UAAW,IAEfC,SAAU7D,MAAO8D,EAAQC,KACrBnD,QAAQC,IAAI,iBAAkBiD,GAC9B,IACI,MAAM7D,QAAYC,EAAAA,GAAS8D,KAAK,gBAAiBF,GAC9B,MAAf7D,EAAIO,SACJI,QAAQC,IAAI,cAAkB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,MAChCsD,EAAOE,YAEPC,IAER,CAAE,MAAOpD,GAAQ,IAADqD,EAAAC,EACZxD,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVqD,EAALrD,EAAOC,gBAAQ,IAAAoD,GAAM,QAANC,EAAfD,EAAiB1D,YAAI,IAAA2D,OAAhB,EAALA,EAAuBC,QACvC,KAIFH,EAAalE,UACf,IACI,MAAMC,QAAYC,EAAAA,GAASC,IAAI,oBAADC,OAA4B,OAAP6C,QAAO,IAAPA,OAAO,EAAPA,EAAS/D,KACzC,MAAfe,EAAIO,SACJ8C,EAAWrD,EAAIQ,KAAKoC,SACpBjC,QAAQC,IAAI,oBAAqBZ,EAAIQ,KAAKoC,SAElD,CAAE,MAAO/B,GAAQ,IAADwD,EAAAC,EACZ3D,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVwD,EAALxD,EAAOC,gBAAQ,IAAAuD,GAAM,QAANC,EAAfD,EAAiB7D,YAAI,IAAA8D,OAAhB,EAALA,EAAuBF,QACvC,GAiBJ,OALArD,EAAAA,EAAAA,WAAU,KACNJ,QAAQC,IAAI,qCACZyC,EAAkB,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASJ,UACrB,KAGC5B,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,CAAAX,UACIM,EAAAA,EAAAA,MAACgD,EAAAA,EAAQ,CAAAtD,SAAA,EACLD,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,CAACC,GAAI,CAAEC,UAAW,cAAezD,UAC/CD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACC,KAAK,KAAKC,IAAY,OAAP7B,QAAO,IAAPA,GAAe,QAARF,EAAPE,EAASN,cAAM,IAAAI,OAAR,EAAPA,EAAiBgC,iBAG5CvD,EAAAA,EAAAA,MAACwD,EAAAA,EAAe,CAAA9D,SAAA,EACZD,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACC,MAAM,OAAMtB,SAAS,OAAP+B,QAAO,IAAPA,GAAe,QAARD,EAAPC,EAASN,cAAM,IAAAK,OAAR,EAAPA,EAAiBJ,OAAY,KAAC3B,EAAAA,EAAAA,KAAA,QAAMgE,MAAO,CAC3D3C,SAAS,OACT4C,UAAU,UACZhE,SAAEiE,IAAc,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASmC,YAAYC,aAChCpE,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAAC2D,MAAM,QAAOpE,SACb,OAAP+B,QAAO,IAAPA,OAAO,EAAPA,EAASsC,gBAWd/D,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,UAAStE,SAAA,EACpBD,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAEDX,UAAU,SACV6D,UAAU,OACVnD,SAAS,KACToD,eAAe,IACfhB,GAAI,CAAElC,MAAO,aACbmD,QA9CEC,KAElBzC,GADAD,IA6C2ChC,SAGhB,OAAP2B,QAAO,IAAPA,GAAAA,EAASlC,QACF,OAAPkC,QAAO,IAAPA,OAAO,EAAPA,EAASlC,QAAS,WAAa,UAKnCuC,GACI1B,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAX,SAAA,EACID,EAAAA,EAAAA,KAAC4E,EAAc,CAAChD,QAASA,KACzBrB,EAAAA,EAAAA,MAACsE,EAAAA,EAAY,CAACpB,GAAI,CAAEqB,EAAG,sBAAuBC,QAAS,QAAS9E,SAAA,EAC5DD,EAAAA,EAAAA,KAACgF,EAAAA,GAAU,CAACpB,KAAK,KAAKqB,QAAQ,QAAQ1D,MAAM,UAAUkC,GAAI,CAAEyB,IAAK,GAAIjF,UAEjED,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACC,KAAK,QAAQC,IAAa,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,QAASnB,MAAO,CAACoB,OAAQ,OAAQC,MAAO,aAEhFrF,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACFL,QAAQ,QACRrB,KAAK,KACL2B,YAAY,oBACZ9B,GAAI,CAAE+B,SAAU,EAAGC,GAAI,EAAG,2BAA4B,OACtDxH,GAAG,YACH0D,KAAK,YACL+D,MAAOpD,EAAOO,OAAOF,UACrBgD,SAAUrD,EAAOsD,aACjBC,UAAYC,IACI,UAAVA,EAAEC,KACJzD,EAAO0D,mBAIfhG,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAAC2E,UAAQ,EAACzB,UAAU,OAAO0B,KAAK,SAAQjG,SAAC,eAIhD,iBCjHvB,SAASkG,EAAYrI,GAAsE,IAADsI,EAAA,IAApE,OAAErI,EAAM,UAAEC,EAAS,YAAEqI,EAAW,GAAEpI,EAAE,SAAEqI,EAAQ,iBAAEC,GAAkBzI,EACrG,MAAOW,EAAQC,GAAaC,EAAAA,UAAe,IACpC6H,EAAUC,IAAenI,EAAAA,EAAAA,UAAS,KACnC,SAAE6D,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBxB,WAAyB,aAAbqF,EAA0BrI,OAAKoC,EAC3CqG,SAAuB,WAAbJ,EAAwBrI,OAAKoC,EACvCsG,YAAa,IAEf/D,SAAU7D,MAAO8D,EAAQC,KACvBnD,QAAQC,IAAI,mBAAoBiD,GAChC,IACE,MAAM7D,QAAYC,EAAAA,GAAS8D,KAAK,kBAAmBF,GACzB,IAADzD,EAAzB,GAAoB,OAAb,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKO,QACPI,QAAQC,IAAI,oBAAqBZ,EAAIQ,MACrCG,QAAQC,IAAO,OAAHZ,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKQ,YAAI,IAAAJ,OAAN,EAAHA,EAAWgE,SAEvBN,EAAOE,YACP4D,GAGJ,CAAE,MAAO/G,GAAQ,IAADqD,EAAAC,EACdxD,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVqD,EAALrD,EAAOC,gBAAQ,IAAAoD,GAAM,QAANC,EAAfD,EAAiB1D,YAAI,IAAA2D,OAAhB,EAALA,EAAuBC,QACrC,KAIEwD,EAAc7H,UAClB,IACE,MAAMC,QAAYC,EAAAA,GAASC,IAAI,sBAADC,OAAuBlB,EAAE,UAAAkB,OAASmH,IAEtC,IAADjH,EAAAwH,EAAAC,EAAAC,EAAzB,GADApH,QAAQC,IAAI,qBAAsBZ,GACd,OAAb,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKO,QACPkH,EAAe,OAAHzH,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKQ,YAAI,IAAAH,OAAN,EAAHA,EAAWmH,UACvBD,EAAoB,OAAHvH,QAAG,IAAHA,GAAS,QAAN6H,EAAH7H,EAAKQ,YAAI,IAAAqH,GAAU,QAAVC,EAATD,EAAWL,gBAAQ,IAAAM,OAAhB,EAAHA,EAAqBpH,QACtCC,QAAQC,IAAI,qBAAyB,OAAHZ,QAAG,IAAHA,GAAS,QAAN+H,EAAH/H,EAAKQ,YAAI,IAAAuH,OAAN,EAAHA,EAAWP,SAEjD,CAAE,MAAM3G,GAAQ,IAADwD,EACb1D,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVwD,EAALxD,EAAOC,gBAAQ,IAAAuD,OAAV,EAALA,EAAiB7D,KAC/B,GAOF,OAJAO,EAAAA,EAAAA,WAAU,KACR0G,EAAYJ,IACX,KAGDrG,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAEbD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACJC,OAAQpC,EACRqC,QAASA,KACPpC,OAAUqC,IACVJ,UAGFD,EAAAA,EAAAA,KAACM,EAAAA,EAAa,CAAAL,UACZM,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAAC,kBAAgB,wBAAwBzC,OAAQA,EAC3DwG,UAAU,WAAUtE,SAAA,EAEpBD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,KACXT,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,wBAAwB0C,UAAU,KAAIV,SAGzC,OAARuG,QAAQ,IAARA,GAAAA,EAAU9G,OAAS,cAAuB,OAAR8G,QAAQ,IAARA,OAAQ,EAARA,EAAU9G,QAAS,IAAM,gBAI9DjB,IAEC8B,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAX,SAAA,EAgCED,EAAAA,EAAAA,KAACgH,EAAAA,EAAI,CACH,kBAAgB,qBAChBvD,GAAI,CAAE,2BAA4B,QAASxD,SAGzCuG,EAAS3F,IAAKmB,IAEVhC,EAAAA,EAAAA,KAACiH,EAAe,CAEdjF,QAASA,EACT/D,GAAI+D,EAAQ/D,IAFP+D,EAAQ/D,QAkBvBsC,EAAAA,EAAAA,MAACsE,EAAAA,EAAY,CAACpB,GAAI,CAAEqB,EAAG,sBAAuBC,QAAS,QAAS9E,SAAA,EAC9DD,EAAAA,EAAAA,KAACgF,EAAAA,GAAU,CAACpB,KAAK,KAAKqB,QAAQ,QAAQ1D,MAAM,UAAUkC,GAAI,CAAEyB,IAAK,GAAIjF,UAEnED,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACC,KAAK,QAAQC,IAAa,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,QAASnB,MAAO,CAAEoB,OAAQ,OAAQC,MAAO,aAE/ErF,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACJL,QAAQ,QACRrB,KAAK,KACL2B,YAAY,sBACZ9B,GAAI,CAAE+B,SAAU,EAAGC,GAAI,EAAG,2BAA4B,OACtDxH,GAAG,cACH0D,KAAK,cACL+D,MAAOpD,EAAOO,OAAO8D,YACrBhB,SAAUrD,EAAOsD,aACjBC,UAAYC,IACI,UAAVA,EAAEC,KACJzD,EAAO0D,mBAIbhG,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAAC2E,SAAgB,OAAN3D,QAAM,IAANA,GAAc,QAAR8D,EAAN9D,EAAQO,cAAM,IAAAuD,IAAdA,EAAgBO,YAC9BnC,UAAU,OAAO0B,KAAK,SACtBxB,QAASpC,EAAO0D,aAAa/F,SAC9B,uBAYnB,C,eCrIA,MAoUA,EApUkBnC,IAAsF,IAADoJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAApF,kBAAEC,EAAiB,WAAErJ,EAAU,SAAEL,EAAQ,aAAE2J,EAAY,WAAEC,EAAU,SAAEC,GAAUjK,EAC9F,MAAOkK,EAAWC,GAAgBtJ,EAAAA,SAAe,SAC1CuJ,EAAsBC,IAA2B7J,EAAAA,EAAAA,WAAS,IAC1D8J,EAAoBC,IAAyB/J,EAAAA,EAAAA,WAAS,IACtDgK,EAAQC,IAAajK,EAAAA,EAAAA,UAAS,IAC9BkK,EAAUC,IAAenK,EAAAA,EAAAA,UAAS,IACnC,SAAE6D,IAAaC,EAAAA,EAAAA,OACdsG,EAAiBC,IAAsBrK,EAAAA,EAAAA,WAAS,IAChDsK,GAAUC,IAAelK,EAAAA,UAAe,IACxCmK,GAAYC,IAAiBpK,EAAAA,UAAe,IAC5CZ,GAAQC,IAAaW,EAAAA,cAAe0B,IACpC2I,GAAeC,IAAoBtK,EAAAA,cAAe0B,IAClD6I,GAAUC,IAAexK,EAAAA,SAAe,OACxCyK,GAAe7C,KAAoBjI,EAAAA,EAAAA,UAAiB,OAARJ,QAAQ,IAARA,GAAkB,QAAVgJ,EAARhJ,EAAUsI,gBAAQ,IAAAU,OAAV,EAARA,EAAoBxH,SAChE2J,GAAclL,KAAmBG,EAAAA,EAAAA,UAASwJ,GAC3C3H,GAAOmJ,QAAQJ,IAIfK,GAAcA,KAChBJ,GAAY,OAGVK,GAAazK,UAEf,MAAM0K,EAAW,CACbhH,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBxB,WAAoB,OAAR/C,QAAQ,IAARA,OAAQ,EAARA,EAAUD,GACtByL,SAAUA,GAEd,IACI,MAAM1K,QAAYC,EAAAA,GAAS8D,KAAK,eAAgB0G,GAC7B,MAAfzK,EAAIO,SACJI,QAAQC,IAAI,aAAiB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,MAC/BmK,KAER,CAAE,MAAO9J,GAAQ,IAADqD,EAAAC,EACZxD,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVqD,EAALrD,EAAOC,gBAAQ,IAAAoD,GAAM,QAANC,EAAfD,EAAiB1D,YAAI,IAAA2D,OAAhB,EAALA,EAAuBC,SACnCwG,EAAAA,EAAK/J,MAAM,wBACf,GAGE8J,GAAW5K,UAEb,IACI,MAAMC,QAAYC,EAAAA,GAASC,IAAI,iBAADC,OAA0B,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUD,GAAE,mBACnC,IAADmB,EAAAC,EAAxB,GAAmB,MAAfL,EAAIO,OACJI,QAAQC,IAAI,cAAkB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,MAEhC+I,EAAa,OAAHvJ,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKQ,YAAI,IAAAJ,OAAN,EAAHA,EAAWyK,SACrBpB,EAAe,OAAHzJ,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKQ,YAAI,IAAAH,OAAN,EAAHA,EAAWyK,UAE/B,CAAE,MAAOjK,GAAQ,IAADwD,EAAAC,EACZ3D,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVwD,EAALxD,EAAOC,gBAAQ,IAAAuD,GAAM,QAANC,EAAfD,EAAiB7D,YAAI,IAAA8D,OAAhB,EAALA,EAAuBF,SACnCwG,EAAAA,EAAK/J,MAAM,wBACf,IAwCJE,EAAAA,EAAAA,WAAU,KAAO,IAADgK,EAAAC,EACZzB,EAAkB,OAARrK,QAAQ,IAARA,GAAe,QAAP6L,EAAR7L,EAAU+L,aAAK,IAAAF,OAAP,EAARA,EAAiBG,aAC3BzB,EAAoB,OAARvK,QAAQ,IAARA,GAAe,QAAP8L,EAAR9L,EAAU+L,aAAK,IAAAD,OAAP,EAARA,EAAiBG,eAGzBxB,IADAZ,IAKL,IAKH,OACI/H,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,UACtBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,0BAAyBtE,SAAA,EACpCM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,WAAUtE,SAAA,EACrBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,sCAAqCtE,SAAA,EAChDM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,WAAUtE,UAErBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CACHE,IAAa,OAAR3F,QAAQ,IAARA,GAAgB,QAARiJ,EAARjJ,EAAUwD,cAAM,IAAAyF,OAAR,EAARA,EAAkBrD,YACvBsG,IAAa,OAARlM,QAAQ,IAARA,GAAgB,QAARkJ,EAARlJ,EAAUwD,cAAM,IAAA0F,OAAR,EAARA,EAAkBzF,UAG/BpB,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,aAAYtE,SAAA,EACvBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,aAAYtE,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAAC,SAAY,OAAR/B,QAAQ,IAARA,GAAgB,QAARmJ,EAARnJ,EAAUwD,cAAM,IAAA2F,OAAR,EAARA,EAAkB1F,OAAS,OAAGpB,EAAAA,EAAAA,MAAA,QAAMgE,UAAU,uBAAsBtE,SAAA,CAAC,SAAOiE,IAAe,OAARhG,QAAQ,IAARA,OAAQ,EAARA,EAAUiG,YAAYC,iBACzI7D,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,eAActE,SAAA,CACf,OAAR/B,QAAQ,IAARA,GAAgB,QAARoJ,EAARpJ,EAAUwD,cAAM,IAAA4F,GAAhBA,EAAkB+C,kBACfrK,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,kDAAiDtE,UAACM,EAAAA,EAAAA,MAAA,SAAAN,SAAA,CAAgB,OAAR/B,QAAQ,IAARA,GAAgB,QAARqJ,EAARrJ,EAAUwD,cAAM,IAAA6F,OAAR,EAARA,EAAkB+C,qBAAqB,KAAW,OAARpM,QAAQ,IAARA,GAAgB,QAARsJ,EAARtJ,EAAUwD,cAAM,IAAA8F,OAAR,EAARA,EAAkB6C,iBAAiB,aACrI,IAEpB9J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,kDAAiDtE,SAAA,CAAC,KAACM,EAAAA,EAAAA,MAAA,SAAAN,SAAA,CAAO,IAAU,OAAR/B,QAAQ,IAARA,GAAgB,QAARuJ,EAARvJ,EAAUwD,cAAM,IAAA+F,OAAR,EAARA,EAAkB8C,+BAaxGhK,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,WAAUtE,SAAA,EACrBD,EAAAA,EAAAA,KAACwK,EAAAA,EAAO,CAACC,MAAM,OAAMxK,UACjBD,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACP,aAAW,OACX/G,GAAG,cACH,gBAAekC,GAAO,iBAAcE,EACpC,gBAAeF,GAAO,YAASE,EAC/B,gBAAc,OACdqE,QAvIfgG,IACjBvB,GAAYuB,EAAMC,gBAsImC1K,UAErBD,EAAAA,EAAAA,KAAC4K,EAAAA,EAAY,SAGrB5K,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CACD5M,GAAG,YACH6M,cAAe,CACX,kBAAmB,eAEvB5B,SAAUA,GACV/I,KAAMA,GACNC,QAASmJ,GACTwB,WAAY,CACR/G,MAAO,CACHqB,MAAO,SAGf2F,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAAWjL,UAG9C,OAAR/B,QAAQ,IAARA,GAAgB,QAARwJ,EAARxJ,EAAUwD,cAAM,IAAAgG,OAAR,EAARA,EAAkBjF,UAAkB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAElCzC,EAAAA,EAAAA,KAAA,OAAAC,UACIM,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfmE,IAAY,GACZU,MACFtJ,SAAA,EACED,EAAAA,EAAAA,KAACqL,EAAAA,EAAW,CAAC9J,MAAM,OAAOyC,MAAO,CAAEsH,YAAa,UAAY,cAMlE/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACjBqE,IAAc,GACdQ,MACFtJ,SAAA,EACED,EAAAA,EAAAA,KAACuL,EAAAA,EAAa,CAAChK,MAAM,UAAUyC,MAAO,CAAEsH,YAAa,UAAY,sBAmBzF/K,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,uBAAsBtE,SAAA,EACjCM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACID,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACkK,GAAKzD,EAA4B,GAAT,OAAR7J,QAAQ,IAARA,OAAQ,EAARA,EAAUuN,KAAWlH,UAAU,kCAAiCtE,SAAW,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAUuM,SAEnGzK,EAAAA,EAAAA,KAAA,OAAKuE,UAAWmE,EAAkB,GAAK,aACnCgD,wBAAyB,CACrBC,OAAgB,OAARzN,QAAQ,IAARA,OAAQ,EAARA,EAAU0N,SAExB5L,EAAAA,EAAAA,KAAA,QAAMuE,UAAU,WAAWP,MAAO,CAAE6H,OAAQ,WAC1CnH,QAhKToH,KAEfnD,GADAD,IA+JgDzI,SAGpByI,EAAkB,uBAAyB,2BAIvDnI,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,qCAAoCtE,SAAA,EAC/CD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,iBAAgBtE,UAY3BM,EAAAA,EAAAA,MAACwL,EAAAA,EAAiB,CACdrG,MAAOsC,EACPgE,WAAS,EACTpI,KAAK,QACL+B,SAxIZsG,CAACvB,EAAOwB,KAC5BjE,EAAaiE,IAwImB,aAAW,iBACX3H,UAAU,YAAWtE,SAAA,EAErBM,EAAAA,EAAAA,MAAC4L,EAAAA,EAAY,CAACzG,MAAM,OAChBhB,QAASA,IAAM8E,GAAW,UAC1B,aAAW,eAAexF,MAAO,CAAEc,EAAG,GAAI7E,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACoM,EAAAA,EAAc,CAAC7H,UAAW,OAAQhD,MAAM,eAI7CvB,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,SAAEqI,QAEhCtI,EAAAA,EAAAA,KAACmM,EAAAA,EAAY,CAACzG,MAAM,SAAS,aAAW,WACpChB,QAASA,IAAM8E,GAAW,YAAYvJ,UAEtCM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACID,EAAAA,EAAAA,KAACqM,EAAAA,EAAgB,CAAC9H,UAAW,OAAQhD,MAAM,WAC3CvB,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,SAAEuI,eAK5CjI,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,iBAAgBtE,SAAA,CAGvB8H,EAAW,IACP/H,EAAAA,EAAAA,KAACwK,EAAAA,EAAO,CAACC,MAAM,oBAAmBxK,UAC9BD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAACrH,QAAQ,WAAWrB,KAAK,QAC5BW,UAAU,sCACVG,QAASA,IAAM1G,GAAU,UAAUiC,SAEjC6H,EACEvJ,EAAa,eAAc,QAAAY,OAAWkK,GAAY,YADvC,0BAK/BrJ,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAACrH,QAAQ,WAAWrB,KAAK,QAC5BW,UAAU,sCACVG,QAASA,IAAMuE,GAAiB,UAChCjF,MAAO,CACHuI,WAAY,QACdtM,SAEQ,OAAR/B,QAAQ,IAARA,GAAkB,QAAVyJ,EAARzJ,EAAUsI,gBAAQ,IAAAmB,GAAlBA,EAAoBjI,OAClBwI,EAAuB,gBAAe,QAAA/I,OAAYiK,GAAa,aADpC,qCAOnDpJ,EAAAA,EAAAA,KAACwM,EAAAA,EAAY,CAACrM,KAAMyI,GAAU6D,QAAS5D,GAAa4B,MAAe,OAARvM,QAAQ,IAARA,OAAQ,EAARA,EAAUuM,MAAOiC,YAAqB,OAARxO,QAAQ,IAARA,OAAQ,EAARA,EAAU0N,KAAM3N,GAAY,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUD,MACvH+B,EAAAA,EAAAA,KAAC2M,EAAAA,EAAa,CACVxM,KAAM2I,GACN2D,QAAS1D,GACTzC,SAAS,WACTsG,OAAgB,OAAR1O,QAAQ,IAARA,OAAQ,EAARA,EAAUD,MAEtB+B,EAAAA,EAAAA,KAACnC,EAAU,CAACE,OAAQA,GAAQC,UAAWA,GAAWC,GAAY,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUD,GAAIC,SAAUA,EAAUC,gBAAiBA,MACzG6B,EAAAA,EAAAA,KAACmG,EAAY,CACTpI,OAAQiL,GAAehL,UAAWiL,GAClC4D,cAAc,EACdxG,YAAqB,OAARnI,QAAQ,IAARA,OAAQ,EAARA,EAAUsI,SACvBD,iBAAkBA,GAGlBtI,GAAY,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUD,GACdqI,SAAS,oB,8UCxVlB,SAASwG,EAAShP,GAAoC,IAAnC,KAAEqC,EAAI,QAAEsM,EAAO,UAAE9J,EAAS,GAAE1E,GAAIH,EAC9D,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBE,UAAWA,GAEfC,SAAU7D,MAAO8D,EAAQC,KAErB,IACI,MAAM9D,QAAYC,EAAAA,GAAS8N,IAAI,iBAAD5N,OAAkBlB,GAAM4E,GAClC,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAELkN,GAAQ,GACR3J,EAAOE,YAEf,CAAE,MAAOgK,GAELP,GAAQ,EACZ,KAGR,OACIzM,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAEXD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACF,kBAAgB,cAChB,mBAAiB,aACjBC,KAAMA,EACNC,QAASA,IAAMqM,GAAQ,GACvBhJ,GAAI,CAAEsB,QAAS,OAAQkI,eAAgB,SAAUC,WAAY,UAAWjN,UAExEM,EAAAA,EAAAA,MAAC4M,EAAAA,EAAK,CACFlI,QAAQ,WACRxB,GAAI,CACA2J,SAAU,IACVC,aAAc,KACdvI,EAAG,EACHwI,UAAW,KACXjI,MAAO,KACTpF,SAAA,EAEFD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACPwE,QAAQ,WACRxB,GAAI,CACA8J,IAAK,sCACLC,MAAO,sCACPF,UAAW,iCACXD,aAAc,MACdI,QAAS,sBAGjBzN,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CACPC,UAAU,KACV1C,GAAG,cACHoG,MAAM,KACN5C,UAAU,UACVD,WAAW,KACXkM,GAAI,EAAEzN,SACT,qBAMDD,EAAAA,EAAAA,KAAC2N,EAAAA,EAAS,CACNC,WAAS,EACTC,OAAO,QACPC,QAAS,EACTC,QAAS,EACT9P,GAAG,YACH0D,KAAK,YAELqM,KAAK,OACLzI,YAAY,sCACZ0I,WAAS,EAETvI,MAAOpD,EAAOO,OAAOF,UACrBgD,SAAUrD,EAAOsD,gBAErB5F,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACRlO,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,iCAAgCtE,UAC3CM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASpC,EAAO0D,aAAcf,QAAQ,WAAWV,UAAU,0BAAyBtE,SAAE,YAC9FD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASA,IAAM+H,GAAQ,GAAQxH,QAAQ,WAAW1D,MAAM,SAASgD,UAAU,+BAA8BtE,SAAC,sBAQ9I,CC7FA,MAsIA,EAtIcnC,IAAoC,IAADqD,EAAAgN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAlC,mBAAEC,EAAkB,MAAEtN,GAAOtD,EACxC,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,OACd0G,EAAYC,GAAiBpK,EAAAA,UAAe,IAC5CiK,EAAUC,GAAelK,EAAAA,UAAe,IACxCuK,EAAUC,GAAexK,EAAAA,SAAe,MACzCwB,EAAOmJ,QAAQJ,GAIfK,EAAcA,KAChBJ,EAAY,OAEhB,OACInJ,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,gBAAetE,SAAA,EACzBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,cAAatE,SAAA,EACxBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,kCAAiCtE,SAAA,EAC5CD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,WAAUtE,UAErBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CACHE,IAAU,OAALzC,QAAK,IAALA,GAAa,QAARD,EAALC,EAAOM,cAAM,IAAAP,OAAR,EAALA,EAAe2C,YACpBsG,IAAU,OAALhJ,QAAK,IAALA,GAAa,QAAR+M,EAAL/M,EAAOM,cAAM,IAAAyM,OAAR,EAALA,EAAexM,UAG5BpB,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,aAAYtE,SAAA,EACvBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,SAAQtE,SAAA,EACnBD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,aAAYtE,UAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,OAAMtE,SAAO,OAALmB,QAAK,IAALA,GAAa,QAARgN,EAALhN,EAAOM,cAAM,IAAA0M,OAAR,EAALA,EAAezM,UAChE3B,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,aAAYtE,UACtBM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,4BAA2BtE,SAAA,CAAC,cAAYiE,IAAY,OAAL9C,QAAK,IAALA,OAAK,EAALA,EAAO+C,YAAYC,mBAGxFpE,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,aAAYtE,UACvBM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,aAAYtE,SAAA,CAChB,OAALmB,QAAK,IAALA,GAAa,QAARiN,EAALjN,EAAOM,cAAM,IAAA2M,GAAbA,EAAehE,kBACZ9J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,eAActE,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,sBAA8B,OAALnD,QAAK,IAALA,GAAa,QAARkN,EAALlN,EAAOM,cAAM,IAAA4M,OAAR,EAALA,EAAehE,qBAAqB,KAAQ,OAALlJ,QAAK,IAALA,GAAa,QAARmN,EAALnN,EAAOM,cAAM,IAAA6M,OAAR,EAALA,EAAelE,oBAAyB,MAEtJ9J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,eAActE,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,sBAA8B,OAALnD,QAAK,IAALA,GAAa,QAARoN,EAALpN,EAAOM,cAAM,IAAA8M,OAAR,EAALA,EAAejE,8BAMlGhK,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,WAAUtE,SAAA,EACrBD,EAAAA,EAAAA,KAACwK,EAAAA,EAAO,CAACC,MAAM,OAAMxK,UACjBD,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACP,aAAW,OACX/G,GAAG,cACH,gBAAekC,EAAO,iBAAcE,EACpC,gBAAeF,EAAO,YAASE,EAC/B,gBAAc,OACdqE,QA7CXgG,IACjBvB,EAAYuB,EAAMC,gBA4C+B1K,UAErBD,EAAAA,EAAAA,KAAC4K,EAAAA,EAAY,SAGrB5K,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CACD5M,GAAG,YACH6M,cAAe,CACX,kBAAmB,eAEvB5B,SAAUA,EACV/I,KAAMA,EACNC,QAASmJ,EACTwB,WAAY,CACR/G,MAAO,CACHqB,MAAO,SAGf2F,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAAWjL,UAGjD,OAALmB,QAAK,IAALA,GAAa,QAARqN,EAALrN,EAAOM,cAAM,IAAA+M,OAAR,EAALA,EAAehM,UAAkB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAC/BlC,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfmE,GAAY,GACZU,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC2O,EAAAA,EAAe,CAACpN,MAAM,OAAOyC,MAAO,CAAEsH,YAAa,UAAY,YAEpE/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAAS6E,EAAYtJ,SAAA,EAC3BD,EAAAA,EAAAA,KAAC4O,EAAAA,EAAiB,CAACrN,MAAM,QAAQyC,MAAO,CAAEsH,YAAa,UAAY,iBAG3E/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfqE,GAAc,GACdQ,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC6O,EAAAA,EAAiB,CAACtN,MAAM,UAAUyC,MAAO,CAAEsH,YAAa,UAAY,sBAM7FtL,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,UACtBD,EAAAA,EAAAA,KAAA,KAAAC,SAAS,OAALmB,QAAK,IAALA,OAAK,EAALA,EAAOA,WAEfpB,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,cAAatE,UACxBM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,aAAYtE,SAAA,EACtBD,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,UAC5DpK,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,aAEhE7J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,aAAYtE,SAAA,EACtBM,EAAAA,EAAAA,MAAA,KAAAN,SAAA,EAAID,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,8BAAgC,aACjDhE,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,aAAYtE,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,MAAsC1E,IAAI,cACpEpK,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAAC,UAAID,EAAAA,EAAAA,KAAA,OAAK6D,IAAKiL,EAAQ,OAAsC1E,IAAI,oBAG5EpK,EAAAA,EAAAA,KAAA,MAAAC,UACIM,EAAAA,EAAAA,MAAA,KAAGmE,QAASgK,EAAmBzO,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,qBAAuB,sBAKpFvE,EAAAA,EAAAA,KAAC8M,EAAS,CAAC3M,KAAMyI,EAAU6D,QAAS5D,EAAa4B,MAAY,OAALrJ,QAAK,IAALA,OAAK,EAALA,EAAOqJ,MAAOiC,YAAkB,OAALtL,QAAK,IAALA,OAAK,EAALA,EAAOwK,KAAM3N,GAAS,OAALmD,QAAK,IAALA,OAAK,EAALA,EAAOnD,MAC3G+B,EAAAA,EAAAA,KAAC2M,EAAAA,EAAa,CACVxM,KAAM2I,EACN2D,QAAS1D,EACTzC,SAAS,QACTsG,OAAa,OAALxL,QAAK,IAALA,OAAK,EAALA,EAAOnD,WC3EnC,EAzDgBH,IAA2E,IAA1E,aAAEiR,EAAY,mBAAEL,EAAkB,QAAE9M,EAAO,UAAEc,EAAS,WAAEO,GAAYnF,EACjF,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBC,UAAWA,EACXC,UAAW,IAEfC,SAAU7D,MAAO8D,EAAQC,KAErB,IAEuB,aADD7D,EAAAA,GAAS8D,KAAK,gBAAiBF,IACzCtD,SAEJuD,EAAOE,YACPC,IAER,CAAE,MAAOpD,GACL,KAIZ,OACIG,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,WAAUtE,SAGT,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASf,IAAKO,IACHpB,EAAAA,EAAAA,KAACgP,EAAK,CAACN,mBAAoBA,EAAoBtN,MAAOA,QAIzEpB,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACR3N,EAAAA,EAAAA,MAAA,OAAKgE,UAAS,+CAAApF,OAAiD4P,EAAe,GAAK,UAAW9O,SAAA,EAC1FD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,WAAUtE,UAErBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CACHY,UAAU,WACVV,IAAa,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,QACfiF,KAAa,OAARjI,QAAQ,IAARA,OAAQ,EAARA,EAAU8M,YAAa,KAAc,OAAR9M,QAAQ,IAARA,OAAQ,EAARA,EAAU+M,gBAGpD3O,EAAAA,EAAAA,MAAA,QAAMgE,UAAU,wBAAwB3B,SAAUN,EAAO0D,aAAa/F,SAAA,EAClED,EAAAA,EAAAA,KAAA,SAAOgO,KAAK,OAAOrM,KAAK,YACpB4C,UAAU,eACVgB,YAAY,iBACZG,MAAOpD,EAAOO,OAAOF,UACrBgD,SAAUrD,EAAOsD,gBACrB5F,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAACrH,QAAQ,YAAYV,UAAU,8BAA8ByJ,KAAK,SAAQ/N,SAAC,sBC3C3F,SAASkP,EAAWrR,GAAsC,IAArC,KAAEqC,EAAI,QAAEsM,EAAO,YAAE9F,EAAW,GAAE1I,GAAIH,EAClE,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBkE,YAAaA,GAEjB/D,SAAU7D,MAAO8D,EAAQC,KAErB,IACI,MAAM9D,QAAYC,EAAAA,GAAS8N,IAAI,oBAAD5N,OAAqBlB,GAAM4E,GACrC,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAELkN,GAAQ,GACR3J,EAAOE,YAEf,CAAE,MAAOgK,GAELP,GAAQ,EACZ,KAGR,OACIzM,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAEXD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACF,kBAAgB,cAChB,mBAAiB,aACjBC,KAAMA,EACNC,QAASA,IAAMqM,GAAQ,GACvBhJ,GAAI,CAAEsB,QAAS,OAAQkI,eAAgB,SAAUC,WAAY,UAAWjN,UAExEM,EAAAA,EAAAA,MAAC4M,EAAAA,EAAK,CACFlI,QAAQ,WACRxB,GAAI,CACA2J,SAAU,IACVC,aAAc,KACdvI,EAAG,EACHwI,UAAW,KACXjI,MAAO,KACTpF,SAAA,EAEFD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACPwE,QAAQ,WACRxB,GAAI,CACA8J,IAAK,sCACLC,MAAO,sCACPF,UAAW,iCACXD,aAAc,MACdI,QAAS,sBAGjBzN,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CACPC,UAAU,KACV1C,GAAG,cACHoG,MAAM,KACN5C,UAAU,UACVD,WAAW,KACXkM,GAAI,EAAEzN,SACT,uBAMDD,EAAAA,EAAAA,KAAC2N,EAAAA,EAAS,CACNC,WAAS,EACTC,OAAO,QACPC,QAAS,EACTC,QAAS,EACT9P,GAAG,cACH0D,KAAK,cAELqM,KAAK,OACLzI,YAAY,8CACZ0I,WAAS,EAETvI,MAAOpD,EAAOO,OAAO8D,YACrBhB,SAAUrD,EAAOsD,gBAErB5F,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACRlO,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,iCAAgCtE,UAC3CM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASpC,EAAO0D,aAAcf,QAAQ,WAAWV,UAAU,0BAAyBtE,SAAE,YAC9FD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASA,IAAM+H,GAAQ,GAAQxH,QAAQ,WAAW1D,MAAM,SAASgD,UAAU,+BAA8BtE,SAAC,sBAQ9I,CCvFA,MAuKA,EAvKgBnC,IAAkB,IAADgE,EAAAC,EAAAqN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhB,QAAEzN,GAASlE,EACxB,MAAOiR,EAAcW,IAAmBpR,EAAAA,EAAAA,WAAS,IAC1CqR,EAAaC,IAAkBtR,EAAAA,EAAAA,WAAS,IACxCsD,EAASS,IAAc/D,EAAAA,EAAAA,UAAgB,OAAP0D,QAAO,IAAPA,OAAO,EAAPA,EAASJ,UACzCgH,EAAUC,GAAelK,EAAAA,UAAe,IACxCmK,EAAYC,GAAiBpK,EAAAA,UAAe,IAC7C,SAAEwD,IAAaC,EAAAA,EAAAA,OACd8G,EAAUC,GAAexK,EAAAA,SAAe,MACzCwB,EAAOmJ,QAAQJ,GAIfK,EAAcA,KAChBJ,EAAY,OAEVuF,EAAqBA,KAEnBgB,GADAX,IA2BR,OACI/O,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,gBAAetE,SAAA,EACzBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,kBAAiBtE,SAAA,EAC5BM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,kCAAiCtE,SAAA,EAC5CD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,WAAUtE,UAErBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CACHE,IAAY,OAAP7B,QAAO,IAAPA,GAAe,QAARF,EAAPE,EAASN,cAAM,IAAAI,OAAR,EAAPA,EAAiBgC,YACtBsG,IAAY,OAAPpI,QAAO,IAAPA,GAAe,QAARD,EAAPC,EAASN,cAAM,IAAAK,OAAR,EAAPA,EAAiBJ,UAG9BpB,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,aAAYtE,SAAA,EACvBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,SAAQtE,SAAA,EACnBD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,aAAYtE,UAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,OAAMtE,SAAS,OAAP+B,QAAO,IAAPA,GAAe,QAARoN,EAAPpN,EAASN,cAAM,IAAA0N,OAAR,EAAPA,EAAiBzN,UAClE3B,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,aAAYtE,UACtBM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,4BAA2BtE,SAAA,CAAC,gBAAciE,IAAc,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASmC,YAAYC,mBAG5FpE,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,aAAYtE,UACvBM,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,aAAYtE,SAAA,CACd,OAAP+B,QAAO,IAAPA,GAAe,QAARqN,EAAPrN,EAASN,cAAM,IAAA2N,GAAfA,EAAiBhF,kBACd9J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,eAActE,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,sBAAgC,OAAPvC,QAAO,IAAPA,GAAe,QAARsN,EAAPtN,EAASN,cAAM,IAAA4N,OAAR,EAAPA,EAAiBhF,qBAAqB,KAAU,OAAPtI,QAAO,IAAPA,GAAe,QAARuN,EAAPvN,EAASN,cAAM,IAAA6N,OAAR,EAAPA,EAAiBlF,oBAAyB,MAE1J9J,EAAAA,EAAAA,MAAA,MAAIgE,UAAU,eAActE,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,sBAAgC,OAAPvC,QAAO,IAAPA,GAAe,QAARwN,EAAPxN,EAASN,cAAM,IAAA8N,OAAR,EAAPA,EAAiBjF,8BAgBpGhK,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,WAAUtE,SAAA,EACrBD,EAAAA,EAAAA,KAACwK,EAAAA,EAAO,CAACC,MAAM,OAAMxK,UACjBD,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACP,aAAW,OACX/G,GAAG,cACH,gBAAekC,EAAO,iBAAcE,EACpC,gBAAeF,EAAO,YAASE,EAC/B,gBAAc,OACdqE,QAnFXgG,IACjBvB,EAAYuB,EAAMC,gBAkF+B1K,UAErBD,EAAAA,EAAAA,KAAC4K,EAAAA,EAAY,SAGrB5K,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CACD5M,GAAG,YACH6M,cAAe,CACX,kBAAmB,eAEvB5B,SAAUA,EACV/I,KAAMA,EACNC,QAASmJ,EACTwB,WAAY,CACR/G,MAAO,CACHqB,MAAO,SAGf2F,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAAWjL,UAG/C,OAAP+B,QAAO,IAAPA,GAAe,QAARyN,EAAPzN,EAASN,cAAM,IAAA+N,OAAR,EAAPA,EAAiBhN,UAAkB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QACjClC,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfmE,GAAY,GACZU,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC2O,EAAAA,EAAe,CAACpN,MAAM,OAAOyC,MAAO,CAAEsH,YAAa,UAAY,YAEpE/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAAS6E,EAAYtJ,SAAA,EAC3BD,EAAAA,EAAAA,KAAC4O,EAAAA,EAAiB,CAACrN,MAAM,QAAQyC,MAAO,CAAEsH,YAAa,UAAY,iBAG3E/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfqE,GAAc,GACdQ,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC6O,EAAAA,EAAiB,CAACtN,MAAM,UAAUyC,MAAO,CAAEsH,YAAa,UAAY,sBAO7FtL,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,gBAAetE,UAC1BD,EAAAA,EAAAA,KAAA,KAAAC,SAAW,OAAP+B,QAAO,IAAPA,OAAO,EAAPA,EAASsC,kBAEjBtE,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,kBAAiBtE,UAC5BD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,MAAAC,UAAIM,EAAAA,EAAAA,MAAA,KAAGmE,QAvHXmL,KAChBnB,IAEIkB,GADAD,IAqH4C1P,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGuE,UAAU,qBAA+B,OAAP3C,QAAO,IAAPA,GAAAA,EAASlC,OAAgB,OAAPkC,QAAO,IAAPA,OAAO,EAAPA,EAASlC,OAAS,KAAK,sBAKvHM,EAAAA,EAAAA,KAACmP,EAAW,CAAChP,KAAMyI,EAAU6D,QAAS5D,EAAalC,YAAoB,OAAP3E,QAAO,IAAPA,OAAO,EAAPA,EAASsC,aAAcrG,GAAW,OAAP+D,QAAO,IAAPA,OAAO,EAAPA,EAAS/D,MACpG+B,EAAAA,EAAAA,KAAC2M,EAAAA,EAAa,CACVxM,KAAM2I,EACN2D,QAAS1D,EACTzC,SAAS,UACTsG,OAAe,OAAP5K,QAAO,IAAPA,OAAO,EAAPA,EAAS/D,KAEpB0R,GACG3P,EAAAA,EAAAA,KAAC8P,EAAO,CACJf,aAAcA,EACdL,mBAAoBA,EACpB9M,QAASA,EACTc,UAAkB,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAAS/D,GACpBgF,WAhILlE,UACf,IACI,MAAMC,QAAYC,EAAAA,GAASC,IAAI,oBAADC,OAA4B,OAAP6C,QAAO,IAAPA,OAAO,EAAPA,EAAS/D,KAClC,IAADmB,EAAzB,GAAoB,OAAb,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKO,QACL8C,EAAc,OAAHrD,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKQ,YAAI,IAAAJ,OAAN,EAAHA,EAAWwC,QAE9B,CAAE,MAAO/B,GAAQ,IAADqD,EAAAC,EACZxD,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVqD,EAALrD,EAAOC,gBAAQ,IAAAoD,GAAM,QAANC,EAAfD,EAAiB1D,YAAI,IAAA2D,OAAhB,EAALA,EAAuBC,QACvC,KAyHqB,WC9GzB,EA/DiBtF,IAAoE,IAADsI,EAAA,IAAlE,aAAEyG,EAAY,SAAErG,EAAQ,SAAEE,EAAQ,WAAEzF,EAAU,YAAE2F,GAAa9I,EAC3E,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,MAEfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBxB,WAAYA,EACZyF,SAAUA,EACVC,YAAa,IAEjB/D,SAAU7D,MAAO8D,EAAQC,KAErB,IACI,MAAM9D,QAAYC,EAAAA,GAAS8D,KAAK,kBAAmBF,GAC/B,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAILuD,EAAOE,YACP4D,IAGR,CAAE,MAAO/G,GACL,KAOZ,OAFAE,EAAAA,EAAAA,WAAU,OACP,CAACyG,KAEAxG,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXM,EAAAA,EAAAA,MAAA,OAAKgE,UAAS,gBAAApF,OAAkB0N,EAAe,GAAK,UAAW5M,SAAA,EAC3DD,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,eAActE,SAEZ,OAARuG,QAAQ,IAARA,OAAQ,EAARA,EAAU3F,IAAKmB,IACJhC,EAAAA,EAAAA,KAAC+P,EAAO,CAAC/N,QAASA,QAOrCzB,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,gBAAetE,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,WAAUtE,UAErBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CACHE,IAAa,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,QACfiF,KAAa,OAARjI,QAAQ,IAARA,OAAQ,EAARA,EAAU8M,YAAa,KAAc,OAAR9M,QAAQ,IAARA,OAAQ,EAARA,EAAU+M,gBAGpDlP,EAAAA,EAAAA,KAAA,QAAMuE,UAAU,YAAY3B,SAAUN,EAAO0D,aAAa/F,UACtDD,EAAAA,EAAAA,KAAA,SAAOgO,KAAK,OAAOrM,KAAK,cAAc4C,UAAU,eAAegB,YAAY,mBACvEG,MAAa,OAANpD,QAAM,IAANA,GAAc,QAAR8D,EAAN9D,EAAQO,cAAM,IAAAuD,OAAR,EAANA,EAAgBO,YACvBhB,SAAUrD,EAAOsD,yB,iyEChD9B,SAASoK,EAAUlS,GAA6C,IAA5C,KAAEqC,EAAI,QAAEsM,EAAO,MAAEhC,EAAK,YAAEiC,EAAW,GAAEzO,GAAIH,EACxE,MAAO4H,EAAOuK,GAAYtR,EAAAA,SAAe+N,IACnC,SAACvK,IAAYC,EAAAA,EAAAA,MACbE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBgI,MAAOA,GAEX7H,SAAU7D,MAAO8D,EAAQC,KACrBD,GAAMqN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOrN,GAAM,IAAE+I,KAAMlG,IAE3B,IACI,MAAM1G,QAAYC,EAAAA,GAAS8N,IAAI,mBAAD5N,OAAoBlB,GAAM4E,GACpC,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAELkN,GAAQ,GACR3J,EAAOE,YAEf,CAAE,MAAMgK,GAEJP,GAAQ,EACZ,KAGR,OACIzM,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAEXD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACF,kBAAgB,cAChB,mBAAiB,aACjBC,KAAMA,EACNC,QAASA,IAAMqM,GAAQ,GACvBhJ,GAAI,CAAEsB,QAAS,OAAQkI,eAAgB,SAAUC,WAAY,UAAWjN,UAExEM,EAAAA,EAAAA,MAAC4M,EAAAA,EAAK,CACFlI,QAAQ,WACRxB,GAAI,CACA2J,SAAU,MACVC,aAAc,KACdvI,EAAG,EACHwI,UAAW,MAEbrN,SAAA,EAEFD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACPwE,QAAQ,WACRxB,GAAI,CACA8J,IAAK,sCACLC,MAAO,sCACPF,UAAW,iCACXD,aAAc,MACdI,QAAS,sBAIjBzN,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CACPC,UAAU,KACV1C,GAAG,cACHoG,MAAM,KACN5C,UAAU,UACVD,WAAW,KACXkM,GAAI,EAAEzN,SACT,sBAODD,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,aAAawD,UAAU,gBAAexB,SAAC,WAGtDD,EAAAA,EAAAA,KAAC2N,EAAAA,EAAS,CACNC,WAAS,EACTC,OAAO,QACP5P,GAAG,QACH0D,KAAK,QAELqM,KAAK,OACLzI,YAAY,8CACZ0I,WAAS,EAETvI,MAAOpD,EAAOO,OAAO4H,MACrB9E,SAAUrD,EAAOsD,gBAErB5F,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,aAAawD,UAAU,gBAAexB,SAAC,iBAGtDD,EAAAA,EAAAA,KAACmQ,EAAAA,EAAU,CAACC,QAAS1K,EAAO2K,WAAYJ,KACxCjQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACRlO,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,iCAAgCtE,UAC3CM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASpC,EAAO0D,aAAcf,QAAQ,WAAWV,UAAU,0BAAyBtE,SAAE,YAC9FD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASA,IAAM+H,GAAQ,GAAQxH,QAAQ,WAAW1D,MAAM,SAASgD,UAAU,+BAA8BtE,SAAC,sBAQ9I,C,eC/FA,MAkPA,EAlPgBnC,IAA6B,IAADwS,EAAAC,EAAAC,EAAAC,EAAA,IAA3B,WAAElS,EAAU,OAAEuC,GAAQhD,EACnC,MAAOkK,EAAWC,GAAgBtJ,EAAAA,SAAe,SAC1CyJ,EAAoBC,IAAyB/J,EAAAA,EAAAA,WAAS,IACvD,SAAE6D,IAAaC,EAAAA,EAAAA,OACdwG,EAAUC,GAAelK,EAAAA,UAAe,IACxCmK,EAAYC,GAAiBpK,EAAAA,UAAe,IAC5C2J,EAAQC,IAAajK,EAAAA,EAAAA,UAAS,IAC9BkK,EAAUC,IAAenK,EAAAA,EAAAA,UAAS,IAClC4K,EAAUC,GAAexK,EAAAA,SAAe,OACxC6H,EAAUC,IAAenI,EAAAA,EAAAA,UAAe,OAANwC,QAAM,IAANA,OAAM,EAANA,EAAQ0F,UAC3CrG,EAAOmJ,QAAQJ,GAIfK,EAAcA,KAChBJ,EAAY,OAIVK,EAAazK,UACf,MAAM0K,EAAW,CACbhH,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBiE,SAAgB,OAAN5F,QAAM,IAANA,OAAM,EAANA,EAAQ7C,GAClByL,SAAUA,GAEd,IACI,MAAM1K,QAAYC,EAAAA,GAAS8D,KAAK,eAAgB0G,GAC7B,MAAfzK,EAAIO,SACJI,QAAQC,IAAI,aAAiB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,MAC/BmK,IAER,CAAE,MAAO9J,GAAQ,IAADqD,EAAAC,EACZxD,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVqD,EAALrD,EAAOC,gBAAQ,IAAAoD,GAAM,QAANC,EAAfD,EAAiB1D,YAAI,IAAA2D,OAAhB,EAALA,EAAuBC,SACnCwG,EAAAA,EAAK/J,MAAM,wBACf,GAyBE8J,EAAW5K,UAEb,IACI,MAAMC,QAAYC,EAAAA,GAASC,IAAI,iBAADC,OAAwB,OAAN2B,QAAM,IAANA,OAAM,EAANA,EAAQ7C,GAAE,iBACjC,IAADoB,EAAAwH,EAAxB,GAAmB,MAAf7H,EAAIO,OACJI,QAAQC,IAAI,cAAkB,OAAHZ,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,MAEhC+I,EAAa,OAAHvJ,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKQ,YAAI,IAAAH,OAAN,EAAHA,EAAWwK,SACrBpB,EAAe,OAAHzJ,QAAG,IAAHA,GAAS,QAAN6H,EAAH7H,EAAKQ,YAAI,IAAAqH,OAAN,EAAHA,EAAWiD,UAE/B,CAAE,MAAOjK,GAAQ,IAADwD,EAAAC,EACZ3D,QAAQC,IAAS,OAALC,QAAK,IAALA,GAAe,QAAVwD,EAALxD,EAAOC,gBAAQ,IAAAuD,GAAM,QAANC,EAAfD,EAAiB7D,YAAI,IAAA8D,OAAhB,EAALA,EAAuBF,SACnCwG,EAAAA,EAAK/J,MAAM,wBACf,IAGJE,EAAAA,EAAAA,WAAU,KAAO,IAAD2Q,EAAAC,EACZpI,EAAgB,OAANzH,QAAM,IAANA,GAAa,QAAP4P,EAAN5P,EAAQmJ,aAAK,IAAAyG,OAAP,EAANA,EAAexG,aACzBzB,EAAkB,OAAN3H,QAAM,IAANA,GAAa,QAAP6P,EAAN7P,EAAQmJ,aAAK,IAAA0G,OAAP,EAANA,EAAexG,gBAC5B,IAMH,OACInK,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,UAAStE,UACpBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAS,oBAAApF,OAAsBZ,EAAa,GAAK,UAAW0B,SAAA,EAC7DM,EAAAA,EAAAA,MAAC2N,EAAAA,EAAO,CAAAjO,SAAA,EAEJD,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAI,CACDC,QAAQ7Q,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACyG,IAAW,OAANtJ,QAAM,IAANA,GAAc,QAARwP,EAANxP,EAAQY,cAAM,IAAA4O,OAAR,EAANA,EAAgB3O,KAAMkC,IAAW,OAAN/C,QAAM,IAANA,GAAc,QAARyP,EAANzP,EAAQY,cAAM,IAAA6O,OAAR,EAANA,EAAgBzM,cAChEgN,MAAa,OAANhQ,QAAM,IAANA,GAAc,QAAR0P,EAAN1P,EAAQY,cAAM,IAAA8O,OAAR,EAANA,EAAgB7O,KACvBsD,QAAQ,WACRV,UAAU,6BAEdhE,EAAAA,EAAAA,MAAA,QAAMgE,UAAU,aAAYtE,SAAA,CAAC,eAAaiE,IAAa,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQqD,YAAYC,UAAU,YAEnF7D,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,2BAA0BtE,SAAA,EACrCD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,SAAQtE,UACnBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,YAAWtE,SAAA,EACtBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,2BAA0BtE,SAAA,EACrCD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,oCAAoCP,MAAO,CAAEoB,OAAQ,kBAAmBC,MAAO,mBAAoBpF,SAAC,SAEtHM,EAAAA,EAAAA,MAAA,OAAKyD,MAAO,CAAE+M,YAAa,QAAS9Q,SAAA,EAChCD,EAAAA,EAAAA,KAAA,MAAIuE,UAAU,UAAStE,SAAQ,OAANa,QAAM,IAANA,OAAM,EAANA,EAAQ2J,SAEjCzK,EAAAA,EAAAA,KAAA,OACI0L,wBAAyB,CACrBC,OAAc,OAAN7K,QAAM,IAANA,OAAM,EAANA,EAAQ8K,YAI5BrL,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,mBAAkBtE,SAAA,EAC7BD,EAAAA,EAAAA,KAACwK,EAAAA,EAAO,CAACC,MAAM,OAAMxK,UACjBD,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACP,aAAW,OACX/G,GAAG,cACH,gBAAekC,EAAO,iBAAcE,EACpC,gBAAeF,EAAO,YAASE,EAC/B,gBAAc,OACdqE,QA/GvBgG,IACjBvB,EAAYuB,EAAMC,gBA8G2C1K,UAErBD,EAAAA,EAAAA,KAAC4K,EAAAA,EAAY,SAGrB5K,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CACD5M,GAAG,YACH6M,cAAe,CACX,kBAAmB,eAEvB5B,SAAUA,EACV/I,KAAMA,EACNC,QAASmJ,EACTwB,WAAY,CACR/G,MAAO,CACHqB,MAAO,SAGf2F,gBAAiB,CAAEC,WAAY,QAASC,SAAU,OAClDC,aAAc,CAAEF,WAAY,QAASC,SAAU,UAAWjL,UAGhD,OAANa,QAAM,IAANA,GAAc,QAAR2P,EAAN3P,EAAQY,cAAM,IAAA+O,OAAR,EAANA,EAAgBhO,UAAkB,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,QAChClC,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfmE,GAAY,GACZU,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC2O,EAAAA,EAAe,CAACpN,MAAM,OAAOyC,MAAO,CAAEsH,YAAa,UAAY,YAEpE/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAAS6E,EAAYtJ,SAAA,EAC3BD,EAAAA,EAAAA,KAAC4O,EAAAA,EAAiB,CAACrN,MAAM,QAAQyC,MAAO,CAAEsH,YAAa,UAAY,iBAG3E/K,EAAAA,EAAAA,MAAC6K,EAAAA,EAAQ,CAAC1G,QAASA,KACfqE,GAAc,GACdQ,KACFtJ,SAAA,EACED,EAAAA,EAAAA,KAAC6O,EAAAA,EAAiB,CAACtN,MAAM,UAAUyC,MAAO,CAAEsH,YAAa,UAAY,sBAO7F/K,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,iBAAgBtE,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,UAetBM,EAAAA,EAAAA,MAACwL,EAAAA,EAAiB,CACdrG,MAAOsC,EACPgE,WAAS,EACTpI,KAAK,QACL+B,SA3GhBsG,CAACvB,EAAOwB,KAC5BjE,EAAaiE,IA2GuB,aAAW,iBACX3H,UAAU,YAAWtE,SAAA,EAErBM,EAAAA,EAAAA,MAAC4L,EAAAA,EAAY,CAACzG,MAAM,OAChBhB,QAASA,IAAM8E,EAAW,UAC1B,aAAW,eAAexF,MAAO,CAAEc,EAAG,GAAI7E,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACoM,EAAAA,EAAc,CAAC7H,UAAW,OAAQhD,MAAM,eAI7CvB,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,SAAEqI,QAEhCtI,EAAAA,EAAAA,KAACmM,EAAAA,EAAY,CAACzG,MAAM,SAAS,aAAW,WACpChB,QAASA,IAAM8E,EAAW,YAAYvJ,UAEtCM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACID,EAAAA,EAAAA,KAACqM,EAAAA,EAAgB,CAAC9H,UAAW,OAAQhD,MAAM,WAC3CvB,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,SAAEuI,eAK5CxI,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,UACtBM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,YAAYG,QACvBA,KAEQ2D,GADAD,IAMXnI,SAAA,EAACD,EAAAA,EAAAA,KAACgR,EAAAA,EAAY,CAACzP,MAAM,SAAS,IAAU,OAARiF,QAAQ,IAARA,OAAQ,EAARA,EAAU9G,OAAO,0BAMlEM,EAAAA,EAAAA,KAACgQ,EAAU,CAAC7P,KAAMyI,EAAU6D,QAAS5D,EAAa4B,MAAa,OAAN3J,QAAM,IAANA,OAAM,EAANA,EAAQ2J,MAAOiC,YAAmB,OAAN5L,QAAM,IAANA,OAAM,EAANA,EAAQ8K,KAAM3N,GAAU,OAAN6C,QAAM,IAANA,OAAM,EAANA,EAAQ7C,MAC/G+B,EAAAA,EAAAA,KAAC2M,EAAAA,EAAa,CACVxM,KAAM2I,EACN2D,QAAS1D,EACTzC,SAAS,SACTsG,OAAc,OAAN9L,QAAM,IAANA,OAAM,EAANA,EAAQ7C,MAEpB+B,EAAAA,EAAAA,KAACiR,EAAAA,EAAQ,CAACpE,aAAczE,EAAoB5B,SAAUA,EAAUE,SAAgB,OAAN5F,QAAM,IAANA,OAAM,EAANA,EAAQ7C,GAAI2I,YApMtF7H,UAChB,IAAId,EAAW,OAAN6C,QAAM,IAANA,OAAM,EAANA,EAAQ7C,GASjB,IACI,MAAMe,QAAYC,EAAAA,GAASC,IAAI,sBAADC,OAAuBlB,EAAE,UAAAkB,OAThD,WAUmB,IAADC,EAAzB,GAAoB,OAAb,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKO,QAGLkH,EAAe,OAAHzH,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKQ,YAAI,IAAAJ,OAAN,EAAHA,EAAWoH,SAE/B,CAAE,MAAO3G,GACL,e,gqECnEZ,MAqEA,EArEoB/B,IAAgH,IAA/G,WAAEmD,EAAU,aAAE4G,EAAY,mBAAEjJ,EAAkB,sBAAEC,EAAqB,qBAAEqC,EAAoB,WAAEpC,GAAYhB,EAC1H,MAAO4H,EAAOuK,IAAY3R,EAAAA,EAAAA,UAAS,KAC7B,SAAE6D,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBxB,WAAYA,EACZwJ,MAAO,IAEX7H,SAAU7D,MAAO8D,EAAQC,KACrBD,GAAMqN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQrN,GAAM,IAAE+I,KAAMlG,IAE5B,IAEuB,aADDzG,EAAAA,GAAS8D,KAAK,gBAAiBF,IACzCtD,SAEJuD,EAAOE,YACPiN,EAAS,IAETnR,IAER,CAAE,MAAOe,GACL,KAKNqR,EAAiB,IAAM5O,EAAOO,OAAO4H,MAAM/K,OAEjD,OACIM,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,oBAAmBtE,SAAA,EAC9BD,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,CAAAjO,UACJD,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAI,CACDC,QAAQ7Q,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACE,IAAa,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAUgD,UAC/B2L,OAAO9Q,EAAAA,EAAAA,KAAA,QAAMuE,UAAU,eAActE,SAAC,+BACtCgF,QAAQ,WACR1D,MAAM,OACNgD,UAAU,8BACVG,QAASxD,OAGjBlB,EAAAA,EAAAA,KAAA,OAAKuE,UAAS,wCAAApF,OAA0CP,EAAqB,GAAK,UAAWqB,UACzFD,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,YAAWtE,UACtBM,EAAAA,EAAAA,MAAA,QAAMqC,SAAUN,EAAO0D,aAAa/F,SAAA,EAChCD,EAAAA,EAAAA,KAAC2N,EAAAA,EAAS,CAACM,WAAS,EAAC6C,MAAM,kBAAkB7S,GAAG,YAC5CsG,UAAU,iBACV5C,KAAK,QACLgE,SAAUrD,EAAOsD,aACjBF,MAAOpD,EAAOO,OAAO4H,MACrB0G,WAAY,CAAEC,UAAW,KACzBC,WAAU,GAAAlS,OAAK+R,EAAc,uBAEjClR,EAAAA,EAAAA,KAACmQ,EAAAA,EAAU,CAACC,QAAS1K,EAAO2K,WAAYJ,KACxCjQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAACrH,QAAQ,WAAWqM,SAAStR,EAAAA,EAAAA,KAACuR,EAAAA,EAAI,IAAKvD,KAAK,SAC/CzJ,UAAU,4BACV0B,YAAU3D,EAAOkP,cAAiBlP,EAAOO,OAAO4H,OAAU/E,GAAmB,gBAAVA,GAAuCzF,SAC7G,8B,6OCnDd,SAAS0M,EAAa7O,GAAuC,IAAtC,KAAEqC,EAAI,QAAEsM,EAAO,SAAEnG,EAAQ,OAAEsG,GAAQ9O,EACrE,MAAM,SAAEqE,IAAaC,EAAAA,EAAAA,MAEfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBgP,QAAS7E,EACT8E,UAAWpL,EACXqL,OAAQ,OACR3P,QAAS,IAEbY,SAAU7D,MAAO8D,EAAQC,KACrBA,EAAO8O,eAAc,GAErBnF,GAAQ,GACR,IACI,MAAMzN,QAAYC,EAAAA,GAAS8D,KAAK,iBAAkBF,GAC9B,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,SAELuD,EAAOE,WAEf,CAAE,MAAOgK,GACL,KAKZ,OACIhN,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UACXD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CAACC,KAAMA,EAAMC,QAASA,IAAMqM,GAAQ,GAAOxM,UAC7CM,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACRyE,QAAQ,WACRiB,KAAK,cACL,kBAAgB,2BAChB,mBAAiB,iCAAgCjG,SAAA,EAEjDD,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CACPzC,GAAG,2BACH0C,UAAU,KACVY,MAAM,SACNkD,gBAAgBzE,EAAAA,EAAAA,KAAC6R,EAAAA,EAAM,IAAI5R,SAC9B,YAGDD,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACRlO,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,iCAAiCwD,UAAU,gBAAexB,SAAC,yDAG1ED,EAAAA,EAAAA,KAAA,QACI4C,SAAUN,EAAO0D,aAAa/F,UAE9BM,EAAAA,EAAAA,MAACuR,EAAAA,EAAK,CAACC,QAAS,EAAE9R,SAAA,EACdM,EAAAA,EAAAA,MAACyR,EAAAA,EAAW,CAAA/R,SAAA,EACRD,EAAAA,EAAAA,KAACiS,EAAAA,EAAS,CAAAhS,SAAC,YAyBXM,EAAAA,EAAAA,MAAC2R,EAAAA,EAAM,CACHvQ,KAAK,SACL1D,GAAG,SACHyH,MAAOpD,EAAOO,OAAO8O,OACrBhM,SAAUrD,EAAOsD,aAAa3F,SAAA,EAI9BD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAAC1F,MAAM,OAAMzF,SAAC,UACvBD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAAC1F,MAAM,YAAWzF,SAAC,eAC5BD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAAC1F,MAAM,gBAAezF,SAAC,mBAChCD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAAC1F,MAAM,YAAWzF,SAAC,eAC5BD,EAAAA,EAAAA,KAACoL,EAAAA,EAAQ,CAAC1F,MAAM,QAAOzF,SAAC,iBAGhCM,EAAAA,EAAAA,MAACyR,EAAAA,EAAW,CAAA/R,SAAA,EACRD,EAAAA,EAAAA,KAACiS,EAAAA,EAAS,CAAAhS,SAAC,0BACXD,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAACC,UAAQ,EACd7M,YAAY,kCACZuI,QAAS,EACTnM,KAAK,UACL1D,GAAG,UACH0H,SAAUrD,EAAOsD,aACjBF,MAAOpD,EAAOO,OAAOb,cAG7BzB,EAAAA,EAAAA,MAAC8R,EAAAA,EAAG,CAAC5O,GAAI,CAAEsB,QAAS,OAAQuN,IAAK,EAAGrF,eAAgB,WAAYsF,GAAI,GAAItS,SAAA,EACpED,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAACrH,QAAQ,QAAQ1D,MAAM,UAAUmD,QAASA,IAAM+H,GAAQ,GAAOxM,SAAC,YAGvED,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC0B,KAAK,SAAS/I,QAAQ,QAAQ1D,MAAM,SACxC0E,UAAW3D,EAAOO,OAAO8O,SAAWrP,EAAOO,OAAOb,QAAQ/B,SAC7D,gCAUjC,C,mMC3He,SAASuM,EAAY1O,GAA6C,IAA5C,KAAEqC,EAAI,QAAEsM,EAAO,MAAEhC,EAAK,YAAEiC,EAAW,GAAEzO,GAAIH,EAC1E,MAAO4H,EAAOuK,GAAYtR,EAAAA,SAAe+N,IACnC,SAAEvK,IAAaC,EAAAA,EAAAA,MACfE,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAe,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUM,MACjBgI,MAAOA,GAEX7H,SAAU7D,MAAO8D,EAAQC,KACrBD,GAAMqN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQrN,GAAM,IAAE+I,KAAMlG,IAE5B,IACI,MAAM1G,QAAYC,EAAAA,GAAS8N,IAAI,qBAAD5N,OAAsBlB,GAAM4E,GACtC,OAAb,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKO,UAELkN,GAAQ,GACR3J,EAAOE,YAEf,CAAE,MAAOgK,GAELP,GAAQ,EACZ,KAGR,OACIzM,EAAAA,EAAAA,KAACrB,EAAAA,SAAc,CAAAsB,UAEXD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CACF,kBAAgB,cAChB,mBAAiB,aACjBC,KAAMA,EACNoE,UAAW,UACXnE,QAASA,IAAMqM,GAAQ,GACvBhJ,GAAI,CAAEsB,QAAS,OAAQkI,eAAgB,SAAUC,WAAY,UAAWjN,UAExEM,EAAAA,EAAAA,MAAC4M,EAAAA,EAAK,CACFlI,QAAQ,WACRxB,GAAI,CACA2J,SAAU,IACV/H,MAAO,OACPgI,aAAc,KACdvI,EAAG,EACHwI,UAAW,KACXkF,UAAW,QACbvS,SAAA,EAEFD,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACPwE,QAAQ,WACRxB,GAAI,CACA8J,IAAK,sCACLC,MAAO,sCACPF,UAAW,iCACXD,aAAc,MACdI,QAAS,sBAGjBzN,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CACPC,UAAU,KACV1C,GAAG,cACHoG,MAAM,KACN5C,UAAU,UACVD,WAAW,KACXkM,GAAI,EAAEzN,SACT,wBAODD,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,aAAawD,UAAU,gBAAexB,SAAC,WAGtDD,EAAAA,EAAAA,KAAC2N,EAAAA,EAAS,CACN8E,WAAS,EACTC,KAAM,EACN7E,OAAO,QACP5P,GAAG,QACH0D,KAAK,QACLqM,KAAK,OACLzI,YAAY,8CACZ0I,WAAS,EACTvI,MAAOpD,EAAOO,OAAO4H,MACrB9E,SAAUrD,EAAOsD,gBAErB5F,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACzC,GAAG,aAAawD,UAAU,gBAAgB8C,UAAU,OAAMtE,SAAC,iBAGvED,EAAAA,EAAAA,KAACmQ,EAAAA,EAAU,CAACC,QAAS1K,EAAO2K,WAAYJ,KACxCjQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKuE,UAAU,iCAAgCtE,UAC3CM,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,eAActE,SAAA,EACzBD,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASpC,EAAO0D,aAAcf,QAAQ,WAAWV,UAAU,mDAAmDhD,MAAM,UAAStB,SAAE,YACvID,EAAAA,EAAAA,KAACsM,EAAAA,EAAM,CAAC5H,QAASA,IAAM+H,GAAQ,GAAQxH,QAAQ,WAAW1D,MAAM,SAASgD,UAAU,uBAAsBtE,SAAC,sBAQtI,C,mkHCvGc0S,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACxBtN,MAAO,SAGI,SAASuN,IAEpB,OACIrS,EAAAA,EAAAA,MAAA,OAAKgE,UAAU,4BAA2BtE,SAAA,EACtCM,EAAAA,EAAAA,MAAC8R,EAAAA,EAAG,CAAC5O,GAAI,CAAEsB,QAAS,OAAQmI,WAAY,UAAWjN,SAAA,EAC/CD,EAAAA,EAAAA,KAACqS,EAAAA,EAAG,CAAC5O,GAAI,CAAEoK,OAAQ,GAAI5N,UACnBD,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,CAAC5N,QAAQ,WAAUhF,UACxBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,SAGf3D,EAAAA,EAAAA,KAACqS,EAAAA,EAAG,CAAC5O,GAAI,CAAE4B,MAAO,QAASpF,UACvBD,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,CAACxN,MAAM,OAAMpF,UAClBD,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAT,SAAC,cAIxBM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACID,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,UAAU,MAAiBsE,QAAS,KAAKhF,UACjDD,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,KADoB,OAGjC7S,EAAAA,EAAAA,KAACkO,EAAAA,EAAO,KACR3N,EAAAA,EAAAA,MAAC8R,EAAAA,EAAG,CAAC5O,GAAI,CAAEsB,QAAS,OAAQmI,WAAY,UAAWjN,SAAA,EAC/CD,EAAAA,EAAAA,KAACqS,EAAAA,EAAG,CAAC5O,GAAI,CAAEoK,OAAQ,GAAI5N,UACnBD,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,CAAC5N,QAAQ,SAAQhF,UACtBD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,SAGf3D,EAAAA,EAAAA,KAACqS,EAAAA,EAAG,CAAC5O,GAAI,CAAE4B,MAAO,QAASpF,UACvBD,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,CAACxN,MAAM,OAAMpF,UAClBD,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAT,SAAC,kBAUxC,C,slLClDA,MAgBA,EAhBmBnC,IAA8B,IAA7B,QAAEsS,EAAO,WAAEC,GAAYvS,EAKvC,OACIkC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAC8S,EAAAA,SAAQ,CACLC,OAAQC,IACRxT,KAAM4Q,GAAoB,GAC1BzK,SATesN,CAACvI,EAAOqI,KAC/B,MAAMvT,EAAOuT,EAAOG,UACpB7C,EAAW7Q,Q","sources":["pages/Forum/components/Modals/ViewAnswer.jsx","pages/Forum/components/Modals/components/ReplyList.jsx","pages/Forum/components/Modals/components/ReplyContainer.jsx","pages/Forum/components/Modals/components/CommentListItem.jsx","pages/Forum/components/Modals/ViewComments.jsx","pages/Forum/components/Questions/Questions.jsx","pages/Forum/components/Modals/EditReply.jsx","pages/Forum/components/Comments/Reply.js","pages/Forum/components/Comments/Replies.js","pages/Forum/components/Modals/EditComment.jsx","pages/Forum/components/Comments/Comment.js","pages/Forum/components/Comments/Comments.js","pages/Forum/components/Modals/EditAnswer.jsx","pages/Forum/components/Answers/Answers.jsx","pages/Forum/components/Comments/WriteAnswer.js","pages/Forum/components/Modals/ReportContent.jsx","pages/Forum/components/Modals/EditQuestion.jsx","pages/Forum/components/Skeleton/QuestionSkeleton.jsx","utils/CKEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport FormControl from '@mui/joy/FormControl';\r\nimport FormLabel from '@mui/joy/FormLabel';\r\nimport Switch from '@mui/joy/Switch';\r\nimport List from '@mui/joy/List';\r\nimport ListItem from '@mui/joy/ListItem';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport ModalDialog from '@mui/joy/ModalDialog';\r\nimport ModalOverflow from '@mui/joy/ModalOverflow';\r\nimport Stack from '@mui/joy/Stack';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Answers from '../Answers/Answers';\r\nimport { apiForum } from 'api';\r\nimport { Divider } from '@mui/material';\r\nimport WriteAnswer from '../Comments/WriteAnswer';\r\n\r\nexport default function ViewAnswer({ layout, setLayout, id, question, setAnswerLength }) {\r\n  // const [layout, setLayout] = React.useState(undefined);\r\n  const [answers, setAnswers] = useState();\r\n  const [showAnswer, setShowAnswer] = useState(true);\r\n\r\n  const [scroll, setScroll] = React.useState(true);\r\n  const [showWriteAnswerBox, setShowWriteAnswerBox] = useState(true);\r\n    const showAnswerBoxHandler = () => {\r\n        if (showWriteAnswerBox) {\r\n            setShowWriteAnswerBox(false);\r\n        } else {\r\n            setShowWriteAnswerBox(true);\r\n        }\r\n    }\r\n\r\n  const getAnswers = async () => {\r\n    try {\r\n      const res = await apiForum.get(`/v1/api/answer?id=${question?.id}`);\r\n      if (res.status === 200) {\r\n        setAnswers(res?.data?.results);\r\n        setAnswerLength(res?.data?.results?.length);\r\n        console.log(\"Answer Data: \", res);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data.error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Stack direction=\"row\" spacing={1}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          onClick={() => {\r\n            setLayout('center');\r\n          }}\r\n        >\r\n          Center\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"neutral\"\r\n          onClick={() => {\r\n            setLayout('fullscreen');\r\n          }}\r\n        >\r\n          Full screen\r\n        </Button>\r\n      </Stack> */}\r\n      <Modal\r\n        open={!!layout}\r\n        onClose={() => {\r\n          setLayout(undefined);\r\n        }}\r\n      >\r\n        <ModalOverflow>\r\n          <ModalDialog aria-labelledby=\"modal-dialog-overflow\" layout={layout}>\r\n            <ModalClose />\r\n            <Typography id=\"modal-dialog-overflow\" component=\"h2\">\r\n              Answers ({answers?.length})\r\n            </Typography>\r\n            {/* <Typography id=\"modal-dialog-overflow\" component=\"h2\">\r\n              question?.title\r\n            </Typography> */}\r\n            {/* <FormControl\r\n              orientation=\"horizontal\"\r\n              sx={{ bgcolor: 'background.level2', p: 1, borderRadius: 'sm' }}\r\n            >\r\n              <FormLabel>Long content</FormLabel>\r\n              <Switch\r\n                checked={scroll}\r\n                onChange={(event) => setScroll(event.target.checked)}\r\n                sx={{ ml: 'auto' }}\r\n              />\r\n            </FormControl> */}\r\n            {scroll && (\r\n              // <List>\r\n              //   {[...Array(100)].map((item, index) => (\r\n              //     <ListItem key={index}>Item number ({index})</ListItem>\r\n              //   ))}\r\n              // </List>\r\n              <>\r\n                {\r\n                    answers?.map((answer) => {\r\n                        return <Answers showAnswer={showAnswer} answer={answer}/>\r\n                    })\r\n                }\r\n                <WriteAnswer questionId={question?.id} showWriteAnswerBox={showWriteAnswerBox} setShowWriteAnswerBox={setShowWriteAnswerBox} showAnswerBoxHandler={showAnswerBoxHandler} getAnswers={getAnswers} />\r\n              </>\r\n            )}\r\n          \r\n          </ModalDialog>\r\n        </ModalOverflow>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import { Link, Typography } from '@mui/joy';\r\nimport React from 'react'\r\n\r\nconst ReplyList = ({reply}) => {\r\n    return (\r\n        <>\r\n            <Typography fontSize=\"sm\">\r\n                <Link\r\n                    component=\"button\"\r\n                    color=\"neutral\"\r\n                    fontWeight=\"lg\"\r\n                    textColor=\"text.primary\"\r\n                >\r\n                    {reply?.auther?.name}\r\n                </Link>{' '}\r\n                {reply?.reply}\r\n            </Typography>\r\n            {/* <Link\r\n                component=\"button\"\r\n                underline=\"none\"\r\n                fontSize=\"sm\"\r\n                startDecorator=\"…\"\r\n                sx={{ color: 'text.tertiary' }}\r\n            >\r\n                more\r\n            </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReplyList;","import React from 'react';\r\nimport ReplyList from './ReplyList';\r\n\r\nconst ReplyContainer = ({replies}) => {\r\n    return (\r\n        <>\r\n            {\r\n                replies?.map(reply => {\r\n                    return <ReplyList key={reply.id} reply={reply}/>\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReplyContainer;","import { Avatar, CardOverflow, IconButton, Input, Link, ListItem, ListItemContent, ListItemDecorator, Typography } from '@mui/joy';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReplyContainer from './ReplyContainer';\r\nimport moment from 'moment';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { useFormik } from 'formik';\r\nimport { apiForum } from 'api';\r\n\r\nconst CommentListItem = ({ id, comment }) => {\r\n    const [viewReplies, setViewReplies] = useState(false);\r\n    const {userData} = useGlobalContext();\r\n    const [replies, setReplies] = useState([]);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            commentId: id,\r\n            replyText: \"\"\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            console.log(\"Reply Values: \", values);\r\n            try {\r\n                const res = await apiForum.post(`/v1/api/reply`, values);\r\n                if (res.status === 201) {\r\n                    console.log(\"Reply Res: \", res?.data);\r\n                    action.resetForm();\r\n                    // getQuestions();\r\n                    getReplies();\r\n                }\r\n            } catch (error) {\r\n                console.log(error?.response?.data?.message)\r\n            }\r\n        }\r\n    });\r\n\r\n    const getReplies = async () => {\r\n        try {\r\n            const res = await apiForum.get(`/v1/api/reply?id=${comment?.id}`);\r\n            if (res.status === 200) {\r\n                setReplies(res.data.replies);\r\n                console.log(\"Replies updated: \", res.data.replies);\r\n            }\r\n        } catch (error) {\r\n            console.log(error?.response?.data?.message)\r\n        }\r\n    }\r\n\r\n    const handleViewReplies = () => {\r\n        if (viewReplies) {\r\n            setViewReplies(false);\r\n            return;\r\n        } else {\r\n            setViewReplies(true);\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log('Setting Initial Values of Replies'); \r\n        setReplies(comment?.replies);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ListItem>\r\n                <ListItemDecorator sx={{ alignSelf: 'flex-start' }}>\r\n                    <Avatar size=\"sm\" src={comment?.auther?.profile_pic} />\r\n                </ListItemDecorator>\r\n\r\n                <ListItemContent>\r\n                    <Link color='info'>{comment?.auther?.name}</Link> <span style={{\r\n                        fontSize:'12px',\r\n                        fontStyle:'italic'\r\n                    }}>{moment(comment?.created_at).fromNow()}</span>\r\n                    <Typography level=\"body2\" >\r\n                        {comment?.comment_text}\r\n                    </Typography>\r\n                    {/* <Link\r\n                        component=\"button\"\r\n                        underline=\"none\"\r\n                        fontSize=\"sm\"\r\n                        startDecorator=\"…\"\r\n                        sx={{ color: 'text.tertiary' }}\r\n                    >\r\n                        more\r\n                    </Link> */}\r\n                    <div className='ms-auto'>\r\n                        <Link\r\n\r\n                            component=\"button\"\r\n                            underline=\"none\"\r\n                            fontSize=\"sm\"\r\n                            startDecorator=\" \"\r\n                            sx={{ color: 'text.link' }}\r\n                            onClick={handleViewReplies}\r\n                        >\r\n                            {\r\n                                replies?.length ?\r\n                                replies?.length + \" replies\" : \"reply\"\r\n                            }\r\n                            {/* {comment?.replies?.length} replies */}\r\n                        </Link>\r\n                        {\r\n                            viewReplies ?\r\n                                <>\r\n                                    <ReplyContainer replies={replies} />\r\n                                    <CardOverflow sx={{ p: 'var(--Card-padding)', display: 'flex' }}>\r\n                                        <IconButton size=\"sm\" variant=\"plain\" color=\"neutral\" sx={{ ml: -1 }}>\r\n                                            {/* <Face /> */}\r\n                                            <Avatar size=\"small\" src={userData?.profile} style={{height: '24px', width: '24px'}}/>\r\n                                        </IconButton>\r\n                                        <Input\r\n                                            variant=\"plain\"\r\n                                            size=\"sm\"\r\n                                            placeholder=\"Add a reply…\"\r\n                                            sx={{ flexGrow: 1, mr: 1, '--Input-focusedThickness': '0px' }}\r\n                                            id='replyText'\r\n                                            name='replyText'\r\n                                            value={formik.values.replyText}\r\n                                            onChange={formik.handleChange}\r\n                                            onKeyDown={(e) => {\r\n                                              if (e.key === 'Enter') {\r\n                                                formik.handleSubmit();\r\n                                              }\r\n                                            }}\r\n                                        />\r\n                                        <Link disabled underline=\"none\" role=\"button\">\r\n                                            Post\r\n                                        </Link>\r\n                                    </CardOverflow>\r\n                                </> : null\r\n                        }\r\n\r\n                    </div>\r\n                </ListItemContent>\r\n            </ListItem>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentListItem","import React, { useState, useEffect } from 'react';\r\nimport List from '@mui/joy/List';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport ModalDialog from '@mui/joy/ModalDialog';\r\nimport ModalOverflow from '@mui/joy/ModalOverflow';\r\nimport Typography from '@mui/joy/Typography';\r\nimport { apiForum } from 'api';\r\nimport { useFormik } from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport '../../Forum.css';\r\nimport { CardOverflow, IconButton, Link, Input, Avatar } from '@mui/joy';\r\nimport CommentListItem from './components/CommentListItem';\r\n\r\n\r\nexport default function ViewComments({ layout, setLayout, commentList, id, itemType, setCommentLength }) {\r\n  const [scroll, setScroll] = React.useState(true);\r\n  const [comments, setComments] = useState([]);\r\n  const { userData } = useGlobalContext();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: userData?.email,\r\n      questionId: itemType === 'question' ? id : undefined,\r\n      answerId: itemType === 'answer' ? id : undefined,\r\n      commentText: ''\r\n    },\r\n    onSubmit: async (values, action) => {\r\n      console.log(\"Comment Values: \", values);\r\n      try {\r\n        const res = await apiForum.post(`/v1/api/comment`, values);\r\n        if (res?.status === 201) {\r\n          console.log(\"Comment Response:\", res.data);\r\n          console.log(res?.data?.message);\r\n          // navigate(0);\r\n          action.resetForm();\r\n          getComments();\r\n          // getQuestions();\r\n        }\r\n      } catch (error) {\r\n        console.log(error?.response?.data?.message);\r\n      }\r\n    }\r\n  });\r\n\r\n  const getComments = async () => {  // type: string |'answer'|'question\r\n    try {\r\n      const res = await apiForum.get(`/v1/api/comment?id=${id}&type=${itemType}`);\r\n      console.log(\"Comment Response: \", res);\r\n      if (res?.status === 200) {\r\n        setComments(res?.data?.comments);\r\n        setCommentLength(res?.data?.comments?.length);\r\n        console.log(\"Updated Comments :\", res?.data?.comments);\r\n      }\r\n    } catch(error) {\r\n      console.log(error?.response?.data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setComments(commentList);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Modal\r\n        open={!!layout}\r\n        onClose={() => {\r\n          setLayout(undefined);\r\n        }}\r\n\r\n      >\r\n        <ModalOverflow>\r\n          <ModalDialog aria-labelledby=\"modal-dialog-overflow\" layout={layout}\r\n            className=\"w-lg-50 \"\r\n          >\r\n            <ModalClose />\r\n            <Typography id=\"modal-dialog-overflow\" component=\"h2\">\r\n              {/* Comments ({comments?.length}) */}\r\n              {\r\n                comments?.length ? \"Comments (\" + comments?.length + \")\" : \"Add comment\"\r\n              }\r\n            </Typography>\r\n\r\n            {scroll && (\r\n\r\n              <>\r\n                {/* <Link\r\n                  component=\"button\"\r\n                  underline=\"none\"\r\n                  fontSize=\"sm\"\r\n                  fontWeight=\"lg\"\r\n                  textColor=\"text.primary\"\r\n                >\r\n                  8.1M Likes\r\n                </Link> */}\r\n\r\n                {/* <Typography fontSize=\"sm\">\r\n                  <Link\r\n                    component=\"button\"\r\n                    color=\"neutral\"\r\n                    fontWeight=\"lg\"\r\n                    textColor=\"text.primary\"\r\n                  >\r\n                    MUI\r\n                  </Link>{' '}\r\n                  The React component library you always wanted\r\n                </Typography>\r\n                <Link\r\n                  component=\"button\"\r\n                  underline=\"none\"\r\n                  fontSize=\"sm\"\r\n                  startDecorator=\"…\"\r\n                  sx={{ color: 'text.tertiary' }}\r\n                >\r\n                  more\r\n                </Link> */}\r\n\r\n                <List\r\n                  aria-labelledby=\"ellipsis-list-demo\"\r\n                  sx={{ '--ListItemDecorator-size': '56px' }}\r\n                >\r\n                  {\r\n                    comments.map((comment) => {\r\n                      return (\r\n                        <CommentListItem\r\n                          key={comment.id}\r\n                          comment={comment}\r\n                          id={comment.id}\r\n                        />\r\n                      )\r\n                    })\r\n                  }\r\n\r\n                </List>\r\n\r\n                {/* <Link\r\n                  component=\"button\"\r\n                  underline=\"none\"\r\n                  fontSize=\"10px\"\r\n                  sx={{ color: 'text.tertiary', my: 0.5 }}\r\n                >\r\n                  2 DAYS AGO\r\n                </Link> */}\r\n                <CardOverflow sx={{ p: 'var(--Card-padding)', display: 'flex' }}>\r\n                  <IconButton size=\"sm\" variant=\"plain\" color=\"neutral\" sx={{ ml: -1 }}>\r\n                    {/* <Face /> */}\r\n                    <Avatar size=\"small\" src={userData?.profile} style={{ height: '24px', width: '24px' }} />\r\n                  </IconButton>\r\n                  <Input\r\n                    variant=\"plain\"\r\n                    size=\"sm\"\r\n                    placeholder=\"Add a comment…\"\r\n                    sx={{ flexGrow: 1, mr: 1, '--Input-focusedThickness': '0px' }}\r\n                    id='commentText'\r\n                    name='commentText'\r\n                    value={formik.values.commentText}\r\n                    onChange={formik.handleChange}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        formik.handleSubmit();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Link disabled={formik?.values?.commentText ? false : true}\r\n                    underline=\"none\" role=\"button\"\r\n                    onClick={formik.handleSubmit}\r\n                  >\r\n                    Post\r\n                  </Link>\r\n                </CardOverflow>\r\n              </>\r\n            )}\r\n\r\n          </ModalDialog>\r\n        </ModalOverflow>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ThumbDownTwoTone from '@mui/icons-material/ThumbDownTwoTone';\r\nimport ThumbUpTwoTone from '@mui/icons-material/ThumbUpTwoTone';\r\nimport ForumTwoTone from '@mui/icons-material/ForumTwoTone';\r\nimport ShareTwoTone from '@mui/icons-material/ShareTwoTone';\r\nimport { Avatar, Button, IconButton, Tooltip, Menu, MenuItem } from '@mui/material';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Comments from '../../components/Comments/Comments';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport { apiForum } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { pop2 } from 'utils/Popup';\r\nimport { QuestionAnswer, Report } from '@mui/icons-material';\r\nimport ReportTwoTone from '@mui/icons-material/ReportTwoTone';\r\nimport EditTwoTone from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoTone from '@mui/icons-material/DeleteTwoTone';\r\nimport EditQuestion from '../Modals/EditQuestion'\r\nimport ReportContent from '../Modals/ReportContent';\r\nimport ViewAnswer from '../Modals/ViewAnswer';\r\nimport ViewComments from '../Modals/ViewComments';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Questions = ({ showAnswerHandler, showAnswer, question, getQuestions, isAnswered, isSingle }) => {\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const [showQuestionComments, setShowQuestionComments] = useState(false);\r\n    const [showAnswerComments, setShowAnswerComments] = useState(false);\r\n    const [upVote, setUpVote] = useState(0);\r\n    const [downVote, setDownVote] = useState(0);\r\n    const { userData } = useGlobalContext();\r\n    const [viewDescription, setViewDescription] = useState(false);\r\n    const [editOpen, setEditOpen] = React.useState(false);\r\n    const [openReport, setOpenReport] = React.useState(false);\r\n    const [layout, setLayout] = React.useState(undefined);\r\n    const [commentLayout, setCommentLayout] = React.useState(undefined);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [commentLength, setCommentLength] = useState(question?.comments?.length);\r\n    const [answerLength, setAnswerLength] = useState(isAnswered);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleVote = async (voteType) => {\r\n\r\n        const formData = {\r\n            email: userData?.email,\r\n            questionId: question?.id,\r\n            voteType: voteType\r\n        }\r\n        try {\r\n            const res = await apiForum.post(`/v1/api/vote`, formData);\r\n            if (res.status === 200) {\r\n                console.log(\"Vote Res: \", res?.data);\r\n                getVotes();\r\n            }\r\n        } catch (error) {\r\n            console.log(error?.response?.data?.message);\r\n            pop2.error(\"Something went wrong!\")\r\n        }\r\n    }\r\n\r\n    const getVotes = async () => {\r\n\r\n        try {\r\n            const res = await apiForum.get(`/v1/api/votes/${question?.id}?type=question`);\r\n            if (res.status === 200) {\r\n                console.log(\"Votes Res: \", res?.data);\r\n                // getQuestions();\r\n                setUpVote(res?.data?.upvotes);\r\n                setDownVote(res?.data?.downvotes);\r\n            }\r\n        } catch (error) {\r\n            console.log(error?.response?.data?.message);\r\n            pop2.error(\"Something went wrong!\")\r\n        }\r\n    }\r\n\r\n    const handleViewDesc = () => {\r\n        if (viewDescription) {\r\n            setViewDescription(false);\r\n        } else {\r\n            setViewDescription(true);\r\n        }\r\n    }\r\n\r\n    function stringToColor(string) {\r\n        let hash = 0;\r\n        let i;\r\n\r\n        /* eslint-disable no-bitwise */\r\n        for (i = 0; i < string.length; i += 1) {\r\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n\r\n        let color = '#';\r\n\r\n        for (i = 0; i < 3; i += 1) {\r\n            const value = (hash >> (i * 8)) & 0xff;\r\n            color += `00${value.toString(16)}`.slice(-2);\r\n        }\r\n        /* eslint-enable no-bitwise */\r\n\r\n        return color;\r\n    }\r\n\r\n    function stringAvatar(name) {\r\n        return {\r\n            sx: {\r\n                bgcolor: stringToColor(name),\r\n            },\r\n            children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUpVote(question?.votes?.upVoteCount);\r\n        setDownVote(question?.votes?.downVoteCount);\r\n\r\n        if (isSingle) {\r\n            setViewDescription(true);\r\n        } else {\r\n            setViewDescription(false);\r\n        }\r\n    }, []);\r\n\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"questions\">\r\n                <div className=\"block-box post-view p-0\">\r\n                    <div className=\"question\">\r\n                        <div className=\"post-header p-2 p-lg-3 pb-0 pb-lg-0\">\r\n                            <div className=\"media d-flex\">\r\n                                <div className=\"user-img\">\r\n                                    {/* <img src={require(\"../../media/figure/chat_5.jpg\")} alt=\"Santosh\" /> */}\r\n                                    <Avatar\r\n                                        src={question?.auther?.profile_pic}\r\n                                        alt={question?.auther?.name}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"media-body\">\r\n                                    <div className=\"user-title\"><a>{question?.auther?.name}</a> ~ <span className='fst-italic fw-normal'>asked {moment(question?.created_at).fromNow()}</span></div>\r\n                                    <ul className=\"text-warning\">\r\n                                        {question?.auther?.delegate_country ?\r\n                                            <li className=\"meta-privacy d-inline-block text-secondary fs-6\"><small>{question?.auther?.delegate_designation}, {question?.auther?.delegate_country},&nbsp;\r\n                                            </small></li> : \"\"\r\n                                        }\r\n                                        <li className=\"meta-privacy d-inline-block text-secondary fs-6\"> <small> {question?.auther?.institute_name}</small></li>\r\n                                        {/* <li className=\"meta-time\">{moment(question?.created_at).fromNow()}</li> */}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div>\r\n                                <Tooltip title=\"Report this question\">\r\n                                    <IconButton>\r\n                                        <ReportTwoToneIcon color='error' />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div> */}\r\n\r\n                            <div className=\"dropdown\">\r\n                                <Tooltip title=\"Menu\">\r\n                                    <IconButton\r\n                                        aria-label=\"more\"\r\n                                        id=\"long-button\"\r\n                                        aria-controls={open ? 'long-menu' : undefined}\r\n                                        aria-expanded={open ? 'true' : undefined}\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleClick}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Menu\r\n                                    id=\"long-menu\"\r\n                                    MenuListProps={{\r\n                                        'aria-labelledby': 'long-button',\r\n                                    }}\r\n                                    anchorEl={anchorEl}\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    PaperProps={{\r\n                                        style: {\r\n                                            width: '14ch',\r\n                                        },\r\n                                    }}\r\n                                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                                >\r\n                                    {\r\n                                        question?.auther?.email === userData?.email ?\r\n\r\n                                            <div>\r\n                                                <MenuItem onClick={() => {\r\n                                                    setEditOpen(true);\r\n                                                    handleClose();\r\n                                                }}>\r\n                                                    <EditTwoTone color=\"info\" style={{ marginRight: \"10px\" }} /> Edit\r\n                                                </MenuItem>\r\n                                                {/* <MenuItem onClick={handleClose}>\r\n                                                    <DeleteTwoTone color=\"error\" style={{ marginRight: \"10px\" }} /> Delete\r\n                                                </MenuItem> */}\r\n                                            </div>\r\n                                            : <MenuItem onClick={() => {\r\n                                                setOpenReport(true);\r\n                                                handleClose();\r\n                                            }}>\r\n                                                <ReportTwoTone color='warning' style={{ marginRight: \"10px\" }} /> Report\r\n                                            </MenuItem>\r\n                                    }\r\n\r\n\r\n                                </Menu>\r\n                            </div>\r\n                            {/* ===============Context Menu Controls============ */}\r\n                            {/* <div className=\"dropdown\">\r\n                                <button className=\"dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    ...\r\n                                </button>\r\n                                <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                    <a className=\"dropdown-item\">Close</a>\r\n                                    <a className=\"dropdown-item\">Edit</a>\r\n                                    <a className=\"dropdown-item\">Delete</a>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"post-body p-2 p-lg-3\">\r\n                            <div>\r\n                                <Link to={!isSingle ? question?.slug : ''} className='fs-5 text-dark mb-0 fw-semibold' >{question?.title}\r\n                                </Link>\r\n                                <div className={viewDescription ? '' : 'line-clamp'}\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: question?.body,\r\n                                    }}\r\n                                /><span className='btn-link' style={{ cursor: 'pointer' }}\r\n                                    onClick={handleViewDesc}\r\n                                >\r\n                                    {\r\n                                        viewDescription ? \"Collapse description\" : \"Expand description\"\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post-meta-wrap py-0 mt-2 flex-wrap\">\r\n                                <div className=\"post-meta mb-1\">\r\n                                    {/* <div className=\"post-reaction\">\r\n                                                <div>\r\n                                                    <ThumbUpTwoTone color='success' />\r\n                                                </div>\r\n                                                <div className=\"meta-text\">25</div>\r\n                                                <Divider orientation=\"vertical\" flexItem />\r\n                                                <div className='px-3'>\r\n                                                    <ThumbDownTwoTone color='error' />\r\n                                                    <div className=\"meta-text\">25</div>\r\n                                                </div>\r\n                                            </div> */}\r\n                                    <ToggleButtonGroup\r\n                                        value={alignment}\r\n                                        exclusive\r\n                                        size='small'\r\n                                        onChange={handleAlignment}\r\n                                        aria-label=\"text alignment\"\r\n                                        className='rounded-3'\r\n                                    >\r\n                                        <ToggleButton value=\"left\"\r\n                                            onClick={() => handleVote('upvote')}\r\n                                            aria-label=\"left aligned\" style={{ p: 1 }}>\r\n                                            <div>\r\n                                                <ThumbUpTwoTone className={\"fs-6\"} color='success'\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"meta-text\">{upVote}</div>\r\n                                        </ToggleButton>\r\n                                        <ToggleButton value=\"center\" aria-label=\"centered\"\r\n                                            onClick={() => handleVote('downvote')}\r\n                                        >\r\n                                            <div>\r\n                                                <ThumbDownTwoTone className={\"fs-6\"} color='error' />\r\n                                                <div className=\"meta-text\">{downVote}</div>\r\n                                            </div>\r\n                                        </ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </div>\r\n                                <div className=\"post-meta mb-1\">\r\n\r\n                                    {\r\n                                        isSingle ? '' :\r\n                                            <Tooltip title=\"Show/Hide Answers\">\r\n                                                <Button variant='outlined' size='small'\r\n                                                    className='text-capitalize fw-semibold rounded'\r\n                                                    onClick={() => setLayout('center')}\r\n                                                >\r\n                                                    {!isAnswered ? 'Write first answer' :\r\n                                                        showAnswer ? 'Hide Answers' : `Show ${answerLength} Answers`}\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                    }\r\n                                    <Button variant='outlined' size='small'\r\n                                        className='text-capitalize fw-semibold rounded'\r\n                                        onClick={() => setCommentLayout('center')}\r\n                                        style={{\r\n                                            marginLeft: \"10px\"\r\n                                        }}\r\n                                    >\r\n                                        {!question?.comments?.length ? 'Write first comment' :\r\n                                            showQuestionComments ? 'Hide Comments' : `Show ${ commentLength } Comments`}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <EditQuestion open={editOpen} setOpen={setEditOpen} title={question?.title} description={question?.body} id={question?.id} />\r\n                    <ReportContent\r\n                        open={openReport}\r\n                        setOpen={setOpenReport}\r\n                        itemType='question'\r\n                        itemId={question?.id}\r\n                    />\r\n                    <ViewAnswer layout={layout} setLayout={setLayout} id={question?.id} question={question} setAnswerLength={setAnswerLength}/>\r\n                    <ViewComments\r\n                        layout={commentLayout} setLayout={setCommentLayout}\r\n                        showComments={true}\r\n                        commentList={question?.comments}\r\n                        setCommentLength={setCommentLength}\r\n                        // questionId={question?.id}\r\n                        // getQuestions={getQuestions}\r\n                        id={question?.id}\r\n                        itemType='question'\r\n                    />\r\n                    {/* <Comments\r\n                        showComments={showQuestionComments}\r\n                        comments={question?.comments}\r\n                        questionId={question?.id}\r\n                        getQuestions={getQuestions}\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Questions;","import * as React from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport Divider from '@mui/joy/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormik } from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { apiForum } from 'api';\r\n\r\nexport default function EditReply({ open, setOpen, replyText, id }) {\r\n    const { userData } = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            replyText: replyText,\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            // console.log(\"Edit Values: \", values);\r\n            try {\r\n                const res = await apiForum.put(`/v1/api/reply/${id}`, values);\r\n                if (res?.status === 200) {\r\n                    // console.log(\"Edit Res: \", res);\r\n                    setOpen(false);\r\n                    action.resetForm();\r\n                }\r\n            } catch (err) {\r\n                // console.log(err);\r\n                setOpen(false);\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-desc\"\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n            >\r\n                <Sheet\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        maxWidth: 500,\r\n                        borderRadius: 'md',\r\n                        p: 3,\r\n                        boxShadow: 'lg',\r\n                        width: 500,\r\n                    }}\r\n                >\r\n                    <ModalClose\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            top: 'calc(-1/4 * var(--IconButton-size))',\r\n                            right: 'calc(-1/4 * var(--IconButton-size))',\r\n                            boxShadow: '0 2px 12px 0 rgba(0 0 0 / 0.2)',\r\n                            borderRadius: '50%',\r\n                            bgcolor: 'background.body',\r\n                        }}\r\n                    />\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        id=\"modal-title\"\r\n                        level=\"h4\"\r\n                        textColor=\"inherit\"\r\n                        fontWeight=\"lg\"\r\n                        mb={1}\r\n                    >\r\n                        Edit your reply\r\n                    </Typography>\r\n                    {/* <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                    Edit your comment\r\n                </Typography> */}\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        minRows={2}\r\n                        maxRows={4}\r\n                        id=\"replyText\"\r\n                        name=\"replyText\"\r\n                        // label={<h6 className='text-secondary'>Comment</h6>}\r\n                        type=\"text\"\r\n                        placeholder='Ex- Hmmm, we can still chat here...'\r\n                        fullWidth\r\n\r\n                        value={formik.values.replyText}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    <br />\r\n                    <Divider />\r\n                    <div className='mt-3 d-flex align-items-center'>\r\n                        <div className=\"col controls\">\r\n                            <Button onClick={formik.handleSubmit} variant='outlined' className='text-capitalize fw-bold' >Submit</Button>\r\n                            <Button onClick={() => setOpen(false)} variant='outlined' color=\"danger\" className='mx-3 text-capitalize fw-bold'>Cancel</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Sheet>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import { Avatar, Button, IconButton, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport React from 'react';\r\nimport moment from 'moment';\r\nimport ReportTwoToneIcon from '@mui/icons-material/ReportTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { useGlobalContext } from 'global/context';\r\nimport ReportContent from '../Modals/ReportContent';\r\nimport EditQuestion from '../Modals/EditQuestion';\r\nimport EditReply from '../Modals/EditReply';\r\n\r\nconst Reply = ({ handleShowReplyBox, reply }) => {\r\n    const { userData } = useGlobalContext();\r\n    const [openReport, setOpenReport] = React.useState(false);\r\n    const [editOpen, setEditOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <li className=\"main-comments\">\r\n                <div className=\"each-comment\">\r\n                    <div className=\"post-header\">\r\n                        <div className=\"media d-flex align-items-center\">\r\n                            <div className=\"user-img\">\r\n                                {/* <img src={require(\"../../media/figure/notifiy_1.png\")} alt=\"Aahat\" /> */}\r\n                                <Avatar\r\n                                    src={reply?.auther?.profile_pic}\r\n                                    alt={reply?.auther?.name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <div className='d-flex'>\r\n                                    <div className=\"user-title\"><a className='fs-6'>{reply?.auther?.name}</a></div>\r\n                                    <ul className=\"entry-meta\">\r\n                                        <li className=\"meta-time px-2 fst-italic\"> ~ replied {moment(reply?.created_at).fromNow()}</li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='media-body'>\r\n                                    <ul className=\"entry-meta\">\r\n                                        {reply?.auther?.delegate_country ?\r\n                                            <li className=\"meta-privacy\"><i className=\"bi bi-people-fill\"></i>{reply?.auther?.delegate_designation}, {reply?.auther?.delegate_country}</li> : null\r\n                                        }\r\n                                        <li className=\"meta-privacy\"><i className=\"bi bi-people-fill\"></i>{reply?.auther?.institute_name}</li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dropdown\">\r\n                            <Tooltip title=\"Menu\">\r\n                                <IconButton\r\n                                    aria-label=\"more\"\r\n                                    id=\"long-button\"\r\n                                    aria-controls={open ? 'long-menu' : undefined}\r\n                                    aria-expanded={open ? 'true' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <MoreVertIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                MenuListProps={{\r\n                                    'aria-labelledby': 'long-button',\r\n                                }}\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                PaperProps={{\r\n                                    style: {\r\n                                        width: '14ch',\r\n                                    },\r\n                                }}\r\n                                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                            >\r\n                                {\r\n                                    reply?.auther?.email === userData?.email ?\r\n                                        <div>\r\n                                            <MenuItem onClick={() => {\r\n                                                setEditOpen(true);\r\n                                                handleClose();\r\n                                            }}>\r\n                                                <EditTwoToneIcon color=\"info\" style={{ marginRight: \"10px\" }} /> Edit\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <DeleteTwoToneIcon color=\"error\" style={{ marginRight: \"10px\" }} /> Delete\r\n                                            </MenuItem>\r\n                                        </div> :\r\n                                        <MenuItem onClick={() => {\r\n                                            setOpenReport(true);\r\n                                            handleClose();\r\n                                        }}>\r\n                                            <ReportTwoToneIcon color='warning' style={{ marginRight: \"10px\" }} /> Report\r\n                                        </MenuItem>\r\n                                }\r\n                            </Menu>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"post-body\">\r\n                        <p>{reply?.reply}</p>\r\n                    </div>\r\n                    <div className=\"post-footer\">\r\n                        <ul>\r\n                            <li className=\"react-icon\">\r\n                                <img src={require(\"../../media/figure/reaction_1.png\")} alt=\"icon\" />\r\n                                <img src={require(\"../../media/figure/reaction_3.png\")} alt=\"icon\" />\r\n                            </li>\r\n                            <li className=\"post-react\">\r\n                                <a ><i className=\"bi bi-hand-thumbs-up-fill\"></i>React!</a>\r\n                                <ul className=\"react-list\">\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_1.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_3.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_4.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_2.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_7.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_6.png\")} alt=\"Like\" /></a></li>\r\n                                    <li><a ><img src={require(\"../../media/figure/reaction_5.png\")} alt=\"Like\" /></a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li>\r\n                                <a onClick={handleShowReplyBox}><i className=\"bi bi-reply-fill\"></i>Reply</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <EditReply open={editOpen} setOpen={setEditOpen} title={reply?.title} description={reply?.body} id={reply?.id} />\r\n                <ReportContent\r\n                    open={openReport}\r\n                    setOpen={setOpenReport}\r\n                    itemType='reply'\r\n                    itemId={reply?.id}\r\n                />\r\n            </li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Reply;","import { Avatar, Button, Divider } from '@mui/material';\r\nimport { apiForum } from 'api';\r\nimport { useFormik } from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport React, { useState } from 'react'\r\nimport Reply from './Reply';\r\n\r\nconst Replies = ({ showReplyBox, handleShowReplyBox, replies, commentId, getReplies }) => {\r\n    const { userData } = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            commentId: commentId,\r\n            replyText: \"\"\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            // console.log(\"Reply Values: \", values);\r\n            try {\r\n                const res = await apiForum.post(`/v1/api/reply`, values);\r\n                if (res.status === 201) {\r\n                    // console.log(\"Reply Res: \", res?.data);\r\n                    action.resetForm();\r\n                    getReplies();\r\n                }\r\n            } catch (error) {\r\n                // console.log(error?.response?.data?.message)\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <ul className=\"children\">\r\n\r\n                    {\r\n                        replies?.map((reply) => {\r\n                            return <Reply handleShowReplyBox={handleShowReplyBox} reply={reply} />\r\n                        })\r\n                    }\r\n                </ul>\r\n                <Divider />\r\n                <div className={`comment-reply bg-light-maroon-grad rounded  ${showReplyBox ? '' : 'd-none'}`}>\r\n                    <div className=\"user-img\">\r\n                        {/* <img src={require(\"../../media/figure/chat_15.jpg\")} alt=\"Aahat\" /> */}\r\n                        <Avatar\r\n                            className='bg-white'\r\n                            src={userData?.profile}\r\n                            alt={userData?.first_name + \" \" + userData?.last_name}\r\n                        />\r\n                    </div>\r\n                    <form className=\"input-box input-group\" onSubmit={formik.handleSubmit}>\r\n                        <input type=\"text\" name=\"replyText\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Add your reply\"\r\n                            value={formik.values.replyText}\r\n                            onChange={formik.handleChange} />\r\n                        <Button variant='contained' className='text-capitalize rounded-end' type=\"submit\">Reply</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Replies;","import * as React from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport Divider from '@mui/joy/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport Textarea from '@mui/joy/Textarea';\r\nimport { useFormik } from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { apiForum } from 'api';\r\n\r\nexport default function EditComment({ open, setOpen, commentText, id }) {\r\n    const { userData } = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            commentText: commentText,\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            // console.log(\"Edit Values: \", values);\r\n            try {\r\n                const res = await apiForum.put(`/v1/api/comments/${id}`, values);\r\n                if (res?.status === 200) {\r\n                    // console.log(\"Edit Res: \", res);\r\n                    setOpen(false);\r\n                    action.resetForm();\r\n                }\r\n            } catch (err) {\r\n                // console.log(err);\r\n                setOpen(false);\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-desc\"\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n            >\r\n                <Sheet\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        maxWidth: 500,\r\n                        borderRadius: 'md',\r\n                        p: 3,\r\n                        boxShadow: 'lg',\r\n                        width: 500,\r\n                    }}\r\n                >\r\n                    <ModalClose\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            top: 'calc(-1/4 * var(--IconButton-size))',\r\n                            right: 'calc(-1/4 * var(--IconButton-size))',\r\n                            boxShadow: '0 2px 12px 0 rgba(0 0 0 / 0.2)',\r\n                            borderRadius: '50%',\r\n                            bgcolor: 'background.body',\r\n                        }}\r\n                    />\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        id=\"modal-title\"\r\n                        level=\"h4\"\r\n                        textColor=\"inherit\"\r\n                        fontWeight=\"lg\"\r\n                        mb={1}\r\n                    >\r\n                         Edit your comment\r\n                    </Typography>\r\n                    {/* <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                        Edit your comment\r\n                    </Typography> */}\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        minRows={2}\r\n                        maxRows={4}\r\n                        id=\"commentText\"\r\n                        name=\"commentText\"\r\n                        // label={<h6 className='text-secondary'>Comment</h6>}\r\n                        type=\"text\"\r\n                        placeholder='Ex- What is yuvamanthan? Can I participate?'\r\n                        fullWidth\r\n                        \r\n                        value={formik.values.commentText}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    <br />\r\n                    <Divider />\r\n                    <div className='mt-3 d-flex align-items-center'>\r\n                        <div className=\"col controls\">\r\n                            <Button onClick={formik.handleSubmit} variant='outlined' className='text-capitalize fw-bold' >Submit</Button>\r\n                            <Button onClick={() => setOpen(false)} variant='outlined' color=\"danger\" className='mx-3 text-capitalize fw-bold'>Cancel</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Sheet>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","\r\nimport React, { useState } from 'react'\r\nimport Replies from './Replies';\r\nimport moment from 'moment';\r\nimport { Avatar, Tooltip } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nimport ReportTwoToneIcon from '@mui/icons-material/ReportTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport EditComment from '../Modals/EditComment';\r\nimport { useGlobalContext } from 'global/context';\r\nimport ReportContent from '../Modals/ReportContent';\r\nimport { apiForum } from 'api';\r\n\r\n\r\nconst Comment = ({ comment }) => {\r\n    const [showReplyBox, setShowReplyBox] = useState(false);\r\n    const [showReplies, setShowReplies] = useState(false);\r\n    const [replies, setReplies] = useState(comment?.replies);\r\n    const [editOpen, setEditOpen] = React.useState(false);\r\n    const [openReport, setOpenReport] = React.useState(false);\r\n    const { userData } = useGlobalContext();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleShowReplyBox = () => {\r\n        if (showReplyBox) {\r\n            setShowReplyBox(false);\r\n        } else {\r\n            setShowReplyBox(true);\r\n        }\r\n    }\r\n\r\n    const handleReply = () => {\r\n        handleShowReplyBox();\r\n        if (showReplies) {\r\n            setShowReplies(false);\r\n        } else {\r\n            setShowReplies(true);\r\n        }\r\n    }\r\n\r\nconst getReplies = async () => {\r\n    try {\r\n        const res = await apiForum.get(`/v1/api/reply?id=${comment?.id}`);\r\n        if (res?.status === 200) {\r\n            setReplies(res?.data?.replies);\r\n        }\r\n    } catch (error) {\r\n        console.log(error?.response?.data?.message);\r\n    }\r\n}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <li className=\"main-comments\">\r\n                <div className=\"each-comment\">\r\n                    <div className=\"post-header p-2\">\r\n                        <div className=\"media d-flex align-items-center\">\r\n                            <div className=\"user-img\">\r\n                                {/* <img src={require(\"../../media/figure/chat_14.jpg\")} alt=\"Aahat\" className='comment-avatar' /> */}\r\n                                <Avatar\r\n                                    src={comment?.auther?.profile_pic}\r\n                                    alt={comment?.auther?.name}\r\n                                />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <div className='d-flex'>\r\n                                    <div className=\"user-title\"><a className='fs-6'>{comment?.auther?.name}</a></div>\r\n                                    <ul className=\"entry-meta\">\r\n                                        <li className=\"meta-time px-2 fst-italic\"> ~ commented {moment(comment?.created_at).fromNow()}</li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='media-body'>\r\n                                    <ul className=\"entry-meta\">\r\n                                        {comment?.auther?.delegate_country ?\r\n                                            <li className=\"meta-privacy\"><i className=\"bi bi-people-fill\"></i>{comment?.auther?.delegate_designation}, {comment?.auther?.delegate_country}</li> : null\r\n                                        }\r\n                                        <li className=\"meta-privacy\"><i className=\"bi bi-people-fill\"></i>{comment?.auther?.institute_name}</li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"dropdown\">\r\n                            <button className=\"dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                ...\r\n                            </button>\r\n                            <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                <a className=\"dropdown-item\" >Close</a>\r\n                                <a className=\"dropdown-item\" >Edit</a>\r\n                                <a className=\"dropdown-item\" >Delete</a>\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"dropdown\">\r\n                            <Tooltip title=\"Menu\">\r\n                                <IconButton\r\n                                    aria-label=\"more\"\r\n                                    id=\"long-button\"\r\n                                    aria-controls={open ? 'long-menu' : undefined}\r\n                                    aria-expanded={open ? 'true' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <MoreVertIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                MenuListProps={{\r\n                                    'aria-labelledby': 'long-button',\r\n                                }}\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                                PaperProps={{\r\n                                    style: {\r\n                                        width: '14ch',\r\n                                    },\r\n                                }}\r\n                                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                            >\r\n                                {\r\n                                    comment?.auther?.email === userData?.email ?\r\n                                        <div>\r\n                                            <MenuItem onClick={() => {\r\n                                                setEditOpen(true);\r\n                                                handleClose();\r\n                                            }}>\r\n                                                <EditTwoToneIcon color=\"info\" style={{ marginRight: \"10px\" }} /> Edit\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <DeleteTwoToneIcon color=\"error\" style={{ marginRight: \"10px\" }} /> Delete\r\n                                            </MenuItem>\r\n                                        </div> :\r\n                                        <MenuItem onClick={() => {\r\n                                            setOpenReport(true);\r\n                                            handleClose();\r\n                                        }}>\r\n                                            <ReportTwoToneIcon color='warning' style={{ marginRight: \"10px\" }} /> Report\r\n                                        </MenuItem>\r\n                                }\r\n                            </Menu>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"post-body p-2\">\r\n                        <p>{comment?.comment_text}</p>\r\n                    </div>\r\n                    <div className=\"post-footer p-2\">\r\n                        <ul>\r\n                            <li><a onClick={handleReply}><i className=\"bi bi-reply-fill\"></i>{replies?.length ? replies?.length : null} Reply</a></li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n                <EditComment open={editOpen} setOpen={setEditOpen} commentText={comment?.comment_text} id={comment?.id} />\r\n                <ReportContent\r\n                    open={openReport}\r\n                    setOpen={setOpenReport}\r\n                    itemType='comment'\r\n                    itemId={comment?.id}\r\n                />\r\n                {showReplies ?\r\n                    <Replies\r\n                        showReplyBox={showReplyBox}\r\n                        handleShowReplyBox={handleShowReplyBox}\r\n                        replies={replies}\r\n                        commentId={comment?.id}\r\n                        getReplies={getReplies}\r\n                    /> : null}\r\n            </li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { useFormik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport Comment from './Comment';\r\nimport { apiForum } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { Avatar } from '@mui/material';\r\n\r\nconst Comments = ({ showComments, comments, answerId, questionId, getComments }) => {\r\n    const { userData } = useGlobalContext();\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            questionId: questionId,\r\n            answerId: answerId,\r\n            commentText: ''\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            // console.log(\"Comment Values: \", values);\r\n            try {\r\n                const res = await apiForum.post(`/v1/api/comment`, values);\r\n                if (res?.status === 201) {\r\n                    // console.log(\"Comment Response:\", res.data);\r\n                    // console.log(res?.data?.message);\r\n                    // navigate(0);\r\n                    action.resetForm();\r\n                    getComments();\r\n                    // getQuestions();\r\n                }\r\n            } catch (error) {\r\n                // console.log(error?.response?.data?.message);\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n    }, [comments]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`post-comment ${showComments ? '' : 'd-none'}`}>\r\n                <ul className=\"comment-list\">\r\n                    {\r\n                        comments?.map((comment) => {\r\n                            return <Comment comment={comment} />\r\n                        })\r\n                    }\r\n                </ul>\r\n                {/* <div className=\"load-more-btn\">\r\n                    <a className=\"item-btn\">Load More Comments <span>4+</span></a>\r\n                </div> */}\r\n                <div className=\"comment-reply\">\r\n                    <div className=\"user-img\">\r\n                        {/* <img src={require(\"../../media/figure/chat_15.jpg\")} alt=\"Aahat\" /> */}\r\n                        <Avatar\r\n                            src={userData?.profile}\r\n                            alt={userData?.first_name + \" \" + userData?.last_name}\r\n                        />\r\n                    </div>\r\n                    <form className=\"input-box\" onSubmit={formik.handleSubmit}>\r\n                        <input type=\"text\" name=\"commentText\" className=\"form-control\" placeholder=\"Your Comment....\"\r\n                            value={formik?.values?.commentText}\r\n                            onChange={formik.handleChange}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Comments;","import * as React from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport Divider from '@mui/joy/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport {useFormik} from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { apiForum } from 'api';\r\nimport MyCKEditor from 'utils/CKEditor';\r\n\r\nexport default function EditAnswer({ open, setOpen, title, description, id }) {\r\n    const [value, setValue] = React.useState(description);\r\n    const {userData} = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            title: title,\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            values = {...values, body: value};\r\n            // console.log(\"Edit Values: \", values);\r\n            try {\r\n                const res = await apiForum.put(`/v1/api/answers/${id}`, values);\r\n                if (res?.status === 200) {\r\n                    // console.log(\"Edit Res: \",res);\r\n                    setOpen(false);\r\n                    action.resetForm();\r\n                }\r\n            } catch(err) {\r\n                // console.log(err);\r\n                setOpen(false);\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-desc\"\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n            >\r\n                <Sheet\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        maxWidth: \"90%\",\r\n                        borderRadius: 'md',\r\n                        p: 3,\r\n                        boxShadow: 'lg',\r\n                        // maxHeight: \"100%\",\r\n                    }}\r\n                >\r\n                    <ModalClose\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            top: 'calc(-1/4 * var(--IconButton-size))',\r\n                            right: 'calc(-1/4 * var(--IconButton-size))',\r\n                            boxShadow: '0 2px 12px 0 rgba(0 0 0 / 0.2)',\r\n                            borderRadius: '50%',\r\n                            bgcolor: 'background.body',\r\n\r\n                        }}\r\n                    />\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        id=\"modal-title\"\r\n                        level=\"h4\"\r\n                        textColor=\"inherit\"\r\n                        fontWeight=\"lg\"\r\n                        mb={1}\r\n                    >\r\n                        Edit your answer\r\n                    </Typography>\r\n                            {/* <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                                Make sure to use <code>aria-labelledby</code> on the modal dialog with an\r\n                                optional <code>aria-describedby</code> attribute.\r\n                            </Typography> */}\r\n                    <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                        Title\r\n                    </Typography>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        // label={<h6 className='text-secondary'>Title</h6>}\r\n                        type=\"text\"\r\n                        placeholder='Ex- What is yuvamanthan? Can I participate?'\r\n                        fullWidth\r\n                        // variant=\"standard\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                        Description\r\n                    </Typography>\r\n                    <MyCKEditor content={value} setContent={setValue} />\r\n                    <br />\r\n                    <Divider />\r\n                    <div className='mt-3 d-flex align-items-center'>\r\n                        <div className=\"col controls\">\r\n                            <Button onClick={formik.handleSubmit} variant='outlined' className='text-capitalize fw-bold' >Submit</Button>\r\n                            <Button onClick={() => setOpen(false)} variant='outlined' color=\"danger\" className='mx-3 text-capitalize fw-bold'>Cancel</Button>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </Sheet>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ThumbDownTwoTone from '@mui/icons-material/ThumbDownTwoTone';\r\nimport ThumbUpTwoTone from '@mui/icons-material/ThumbUpTwoTone';\r\nimport ForumTwoTone from '@mui/icons-material/ForumTwoTone';\r\nimport { Avatar, Chip, Divider, ToggleButton, ToggleButtonGroup, Tooltip } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport ReportTwoToneIcon from '@mui/icons-material/ReportTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport Comments from '../Comments/Comments';\r\nimport moment from 'moment';\r\nimport { apiForum } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { pop2 } from 'utils/Popup';\r\nimport EditAnswer from '../Modals/EditAnswer';\r\nimport ReportContent from '../Modals/ReportContent';\r\n\r\nconst Answers = ({ showAnswer, answer }) => {\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const [showAnswerComments, setShowAnswerComments] = useState(false);\r\n    const { userData } = useGlobalContext();\r\n    const [editOpen, setEditOpen] = React.useState(false);\r\n    const [openReport, setOpenReport] = React.useState(false);\r\n    const [upVote, setUpVote] = useState(0);\r\n    const [downVote, setDownVote] = useState(0);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [comments, setComments] = useState(answer?.comments);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const handleVote = async (voteType) => {\r\n        const formData = {\r\n            email: userData?.email,\r\n            answerId: answer?.id,\r\n            voteType: voteType\r\n        }\r\n        try {\r\n            const res = await apiForum.post(`/v1/api/vote`, formData);\r\n            if (res.status === 200) {\r\n                console.log(\"Vote Res: \", res?.data);\r\n                getVotes();\r\n            }\r\n        } catch (error) {\r\n            console.log(error?.response?.data?.message);\r\n            pop2.error(\"Something went wrong!\")\r\n        }\r\n    }\r\n\r\n    const getComments = async () => {\r\n        let id = answer?.id;\r\n        let type = 'answer';\r\n        // if (answer?.id) {\r\n        //     id = answer?.id;\r\n        //     type = 'answer';\r\n        // } else if (questionId) {\r\n        //     id = questionId;\r\n        //     type = 'question';\r\n        // }\r\n        try {\r\n            const res = await apiForum.get(`/v1/api/comment?id=${id}&type=${type}`);\r\n            if (res?.status === 200) {\r\n                // console.log(\"Fetched Comments:\", res.data);\r\n                // console.log(res?.data?.message);\r\n                setComments(res?.data?.comments);\r\n            }\r\n        } catch (error) {\r\n            // console.log(error?.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    const getVotes = async () => {\r\n\r\n        try {\r\n            const res = await apiForum.get(`/v1/api/votes/${answer?.id}?type=answer`);\r\n            if (res.status === 200) {\r\n                console.log(\"Votes Res: \", res?.data);\r\n                // getQuestions();\r\n                setUpVote(res?.data?.upvotes);\r\n                setDownVote(res?.data?.downvotes);\r\n            }\r\n        } catch (error) {\r\n            console.log(error?.response?.data?.message);\r\n            pop2.error(\"Something went wrong!\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUpVote(answer?.votes?.upVoteCount);\r\n        setDownVote(answer?.votes?.downVoteCount);\r\n    }, []);\r\n\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"answers\">\r\n                <div className={`answer-container ${showAnswer ? '' : 'd-none'}`}>\r\n                    <Divider>\r\n\r\n                        <Chip\r\n                            avatar={<Avatar alt={answer?.auther?.name} src={answer?.auther?.profile_pic} />}\r\n                            label={answer?.auther?.name}\r\n                            variant=\"outlined\"\r\n                            className='btn btn-outline-success'\r\n                        />\r\n                        <span className='fst-italic'> ~ answered {moment(answer?.created_at).fromNow()}  </span>\r\n                    </Divider>\r\n                    <div className=\"block-box post-view mt-3\">\r\n                        <div className=\"answer\">\r\n                            <div className=\"post-body\">\r\n                                <div className=\"post-no-thumbnail d-flex\">\r\n                                    <div>\r\n                                        <h4 className='text-success border p-2 rounded-3' style={{ height: '50px !important', width: '50px !important' }}>A</h4>\r\n                                    </div>\r\n                                    <div style={{ paddingLeft: '20px' }}>\r\n                                        <h5 className='fw-bold'>{answer?.title}</h5>\r\n                                        {/* <p className='fs-6'>{answer?.body}</p> */}\r\n                                        <div\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: answer?.body,\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"dropdown ms-auto\">\r\n                                        <Tooltip title=\"Menu\">\r\n                                            <IconButton\r\n                                                aria-label=\"more\"\r\n                                                id=\"long-button\"\r\n                                                aria-controls={open ? 'long-menu' : undefined}\r\n                                                aria-expanded={open ? 'true' : undefined}\r\n                                                aria-haspopup=\"true\"\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                <MoreVertIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Menu\r\n                                            id=\"long-menu\"\r\n                                            MenuListProps={{\r\n                                                'aria-labelledby': 'long-button',\r\n                                            }}\r\n                                            anchorEl={anchorEl}\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                            PaperProps={{\r\n                                                style: {\r\n                                                    width: '14ch',\r\n                                                },\r\n                                            }}\r\n                                            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                                            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                                        >\r\n                                            {\r\n                                                answer?.auther?.email === userData?.email ?\r\n                                                    <div>\r\n                                                        <MenuItem onClick={() => {\r\n                                                            setEditOpen(true);\r\n                                                            handleClose();\r\n                                                        }}>\r\n                                                            <EditTwoToneIcon color=\"info\" style={{ marginRight: \"10px\" }} /> Edit\r\n                                                        </MenuItem>\r\n                                                        <MenuItem onClick={handleClose}>\r\n                                                            <DeleteTwoToneIcon color=\"error\" style={{ marginRight: \"10px\" }} /> Delete\r\n                                                        </MenuItem>\r\n                                                    </div> :\r\n                                                    <MenuItem onClick={() => {\r\n                                                        setOpenReport(true);\r\n                                                        handleClose();\r\n                                                    }}>\r\n                                                        <ReportTwoToneIcon color='warning' style={{ marginRight: \"10px\" }} /> Report\r\n                                                    </MenuItem>\r\n                                            }\r\n                                        </Menu>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"post-meta-wrap\">\r\n                                    <div className=\"post-meta\">\r\n                                        {/* <div className=\"post-reaction\">\r\n                                            <div>\r\n                                                <ThumbUpTwoTone color=\"success\"\r\n                                                    onClick={() => handleVote('upvote')}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"meta-text\">{answer?.votes?.upVoteCount}</div>\r\n                                            <Divider orientation=\"vertical\" flexItem />\r\n                                            <div className='px-3'>\r\n                                                <ThumbDownTwoTone color=\"error\" onClick={() => handleVote('downvote')} />\r\n                                                <div className=\"meta-text\">{answer?.votes?.downVoteCount}</div>\r\n                                            </div>\r\n                                        </div> */}\r\n\r\n                                        <ToggleButtonGroup\r\n                                            value={alignment}\r\n                                            exclusive\r\n                                            size='small'\r\n                                            onChange={handleAlignment}\r\n                                            aria-label=\"text alignment\"\r\n                                            className='rounded-3'\r\n                                        >\r\n                                            <ToggleButton value=\"left\"\r\n                                                onClick={() => handleVote('upvote')}\r\n                                                aria-label=\"left aligned\" style={{ p: 1 }}>\r\n                                                <div>\r\n                                                    <ThumbUpTwoTone className={\"fs-6\"} color='success'\r\n\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"meta-text\">{upVote}</div>\r\n                                            </ToggleButton>\r\n                                            <ToggleButton value=\"center\" aria-label=\"centered\"\r\n                                                onClick={() => handleVote('downvote')}\r\n                                            >\r\n                                                <div>\r\n                                                    <ThumbDownTwoTone className={\"fs-6\"} color='error' />\r\n                                                    <div className=\"meta-text\">{downVote}</div>\r\n                                                </div>\r\n                                            </ToggleButton>\r\n                                        </ToggleButtonGroup>\r\n                                    </div>\r\n                                    <div className=\"post-meta\">\r\n                                        <div className=\"meta-text\" onClick={\r\n                                            () => {\r\n                                                if (showAnswerComments) {\r\n                                                    setShowAnswerComments(false)\r\n                                                } else {\r\n                                                    setShowAnswerComments(true);\r\n                                                }\r\n                                            }\r\n                                        }><ForumTwoTone color='info' /> {comments?.length} Comments</div>\r\n                                        {/* <div className=\"meta-text\"><ShareTwoTone color='primary' />{answer?.share_count ? answer?.share_count : 0} Shares</div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <EditAnswer open={editOpen} setOpen={setEditOpen} title={answer?.title} description={answer?.body} id={answer?.id} />\r\n                        <ReportContent\r\n                            open={openReport}\r\n                            setOpen={setOpenReport}\r\n                            itemType='answer'\r\n                            itemId={answer?.id}\r\n                        />\r\n                        <Comments showComments={showAnswerComments} comments={comments} answerId={answer?.id} getComments={getComments} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Answers;","import React, { useState } from 'react';\r\nimport Send from '@mui/icons-material/Send';\r\nimport { Avatar, Button, Chip, Divider, TextField } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { apiForum } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport MyCKEditor from 'utils/CKEditor';\r\n\r\nconst WriteAnswer = ({ questionId, getQuestions, showWriteAnswerBox, setShowWriteAnswerBox, showAnswerBoxHandler, getAnswers }) => {\r\n    const [value, setValue] = useState('');\r\n    const { userData } = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            questionId: questionId,\r\n            title: ''\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            values = { ...values, body: value };\r\n            // console.log({values});\r\n            try {\r\n                const res = await apiForum.post(`v1/api/answer`, values);\r\n                if (res.status === 200) {\r\n                    // console.log(res.data.message);\r\n                    action.resetForm();\r\n                    setValue('');\r\n                    // getQuestions();\r\n                    getAnswers();\r\n                }\r\n            } catch (error) {\r\n                // console.log(error);\r\n            }\r\n        }\r\n    });\r\n\r\n    const charactersLeft = 150 - formik.values.title.length;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"write-answer mb-3\">\r\n                <Divider>\r\n                    <Chip\r\n                        avatar={<Avatar src={userData?.profile} />}\r\n                        label={<span className='fw-bold fs-6'>Write your own answer here</span>}\r\n                        variant=\"outlined\"\r\n                        color=\"info\"\r\n                        className='btn btn-outline-info shadow'\r\n                        onClick={showAnswerBoxHandler}\r\n                    />\r\n                </Divider>\r\n                <div className={`block-box post-view mt-3 your-answer ${showWriteAnswerBox ? '' : 'd-none'}`}>\r\n                    <div className=\"post-body\">\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <TextField fullWidth label=\"Answer title...\" id=\"fullWidth\"\r\n                                className='mb-3 rounded-3' \r\n                                name='title'\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.title}\r\n                                inputProps={{ maxLength: 150 }}\r\n                                helperText={`${charactersLeft} characters left`}\r\n                            />\r\n                            <MyCKEditor content={value} setContent={setValue} />\r\n                            <br />\r\n                            <Button variant=\"outlined\" endIcon={<Send />} type='submit'\r\n                                className='rounded-3 text-capitalize'\r\n                                disabled={formik.isSubmitting || !formik.values.title || !value || value === \"<p><br></p>\" ? true : false}\r\n                            >\r\n                                Submit Answer\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default WriteAnswer;","import * as React from 'react';\r\nimport Box from '@mui/joy/Box';\r\nimport Button from '@mui/joy/Button';\r\nimport Divider from '@mui/joy/Divider';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalDialog from '@mui/joy/ModalDialog';\r\nimport Typography from '@mui/joy/Typography';\r\nimport { FormControl, FormLabel, Option, Stack, Textarea } from '@mui/joy';\r\nimport { KeyboardArrowDown, Report } from '@mui/icons-material';\r\n// import Select, { selectClasses } from '@mui/joy/Select';\r\nimport { useFormik } from 'formik';\r\nimport { apiForum } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ReportContent({ open, setOpen, itemType, itemId }) {\r\n    const { userData } = useGlobalContext();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            item_id: itemId,\r\n            item_type: itemType,\r\n            reason: \"spam\",\r\n            comment: \"\"\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            action.setSubmitting(false);\r\n            // console.log(values);\r\n            setOpen(false);\r\n            try {\r\n                const res = await apiForum.post(`/v1/api/report`, values);\r\n                if (res?.status === 200) {\r\n                    // console.log(\"Report Res: \", res);\r\n                    action.resetForm();\r\n                }\r\n            } catch (err) {\r\n                // console.log(err);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal open={open} onClose={() => setOpen(false)}>\r\n                <ModalDialog\r\n                    variant=\"outlined\"\r\n                    role=\"alertdialog\"\r\n                    aria-labelledby=\"alert-dialog-modal-title\"\r\n                    aria-describedby=\"alert-dialog-modal-description\"\r\n                >\r\n                    <Typography\r\n                        id=\"alert-dialog-modal-title\"\r\n                        component=\"h2\"\r\n                        color='danger'\r\n                        startDecorator={<Report />}\r\n                    >\r\n                        Report\r\n                    </Typography>\r\n                    <Divider />\r\n                    <Typography id=\"basic-modal-dialog-description\" textColor=\"text.tertiary\">\r\n                        Fill in the information of the report this content.\r\n                    </Typography>\r\n                    <form\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <Stack spacing={2}>\r\n                            <FormControl>\r\n                                <FormLabel>Reason</FormLabel>\r\n                                {/* <Input autoFocus required /> */}\r\n                                {/* <Select\r\n                                    placeholder=\"Select a reason…\"\r\n                                    indicator={<KeyboardArrowDown />}\r\n                                    sx={{\r\n                                        // width: 240,\r\n                                        [`& .${selectClasses.indicator}`]: {\r\n                                            transition: '0.2s',\r\n                                            [`&.${selectClasses.expanded}`]: {\r\n                                                transform: 'rotate(-180deg)',\r\n                                            },\r\n                                        },\r\n                                    }}\r\n                                    name=\"reason\"\r\n                                    id=\"reason\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.reason}\r\n                                >\r\n                                    <Option value=\"spam\">Spam</Option>\r\n                                    <Option value=\"offensive\">Offensive</Option>\r\n                                    <Option value=\"inappropriate\">Inappropriate</Option>\r\n                                    <Option value=\"duplicate\">Duplicate</Option>\r\n                                    <Option value=\"other\">Other</Option>\r\n                                </Select> */}\r\n                                <Select\r\n                                    name=\"reason\"\r\n                                    id=\"reason\"\r\n                                    value={formik.values.reason}\r\n                                    onChange={formik.handleChange}\r\n                                   \r\n                                >\r\n                                  \r\n                                    <MenuItem value=\"spam\">Spam</MenuItem>\r\n                                    <MenuItem value=\"offensive\">Offensive</MenuItem>\r\n                                    <MenuItem value=\"inappropriate\">Inappropriate</MenuItem>\r\n                                    <MenuItem value=\"duplicate\">Duplicate</MenuItem>\r\n                                    <MenuItem value=\"other\">Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <FormLabel>Describe your reason</FormLabel>\r\n                                <Textarea required\r\n                                    placeholder=\"Discribe your reason here…\"\r\n                                    minRows={2}\r\n                                    name=\"comment\"\r\n                                    id=\"comment\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.comment}\r\n                                />\r\n                            </FormControl>\r\n                            <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end', pt: 2 }}>\r\n                                <Button variant=\"plain\" color=\"neutral\" onClick={() => setOpen(false)}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button type=\"submit\" variant=\"solid\" color=\"danger\"\r\n                                    disabled={!formik.values.reason || !formik.values.comment}\r\n                                >\r\n                                    Submit Report\r\n                                </Button>\r\n                            </Box>\r\n                        </Stack>\r\n                    </form>\r\n                </ModalDialog>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport Modal from '@mui/joy/Modal';\r\nimport ModalClose from '@mui/joy/ModalClose';\r\nimport Typography from '@mui/joy/Typography';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormik } from 'formik';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { apiForum } from 'api';\r\nimport MyCKEditor from 'utils/CKEditor';\r\n\r\nexport default function EditQuestion({ open, setOpen, title, description, id }) {\r\n    const [value, setValue] = React.useState(description);\r\n    const { userData } = useGlobalContext();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userData?.email,\r\n            title: title,\r\n        },\r\n        onSubmit: async (values, action) => {\r\n            values = { ...values, body: value };\r\n            // console.log(\"Edit Values: \", values);\r\n            try {\r\n                const res = await apiForum.put(`/v1/api/questions/${id}`, values);\r\n                if (res?.status === 200) {\r\n                    // console.log(\"Edit Res: \", res);\r\n                    setOpen(false);\r\n                    action.resetForm();\r\n                }\r\n            } catch (err) {\r\n                // console.log(err);\r\n                setOpen(false);\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-desc\"\r\n                open={open}\r\n                className={\"DESINED\"}\r\n                onClose={() => setOpen(false)}\r\n                sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n            >\r\n                <Sheet\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                        maxWidth: 800,\r\n                        width: \"100%\",\r\n                        borderRadius: 'md',\r\n                        p: 3,\r\n                        boxShadow: 'lg',\r\n                        maxHeight: \"98vh\",\r\n                    }}\r\n                >\r\n                    <ModalClose\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                            top: 'calc(-1/4 * var(--IconButton-size))',\r\n                            right: 'calc(-1/4 * var(--IconButton-size))',\r\n                            boxShadow: '0 2px 12px 0 rgba(0 0 0 / 0.2)',\r\n                            borderRadius: '50%',\r\n                            bgcolor: 'background.body',\r\n                        }}\r\n                    />\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        id=\"modal-title\"\r\n                        level=\"h4\"\r\n                        textColor=\"inherit\"\r\n                        fontWeight=\"lg\"\r\n                        mb={1}\r\n                    >\r\n                        Edit your question\r\n                    </Typography>\r\n                    {/* <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                                Make sure to use <code>aria-labelledby</code> on the modal dialog with an\r\n                                optional <code>aria-describedby</code> attribute.\r\n                            </Typography> */}\r\n                    <Typography id=\"modal-desc\" textColor=\"text.tertiary\">\r\n                        Title\r\n                    </Typography>\r\n                    <TextField\r\n                        multiline\r\n                        rows={1}\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        name='title'\r\n                        type=\"text\"\r\n                        placeholder='Ex- What is yuvamanthan? Can I participate?'\r\n                        fullWidth\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                    />\r\n                    <Typography id=\"modal-desc\" textColor=\"text.tertiary\" className=\"mt-3\">\r\n                        Description\r\n                    </Typography>\r\n                    <MyCKEditor content={value} setContent={setValue}/>\r\n                    <br />\r\n                    <div className='mt-4 d-flex align-items-center'>\r\n                        <div className=\"col controls\">\r\n                            <Button onClick={formik.handleSubmit} variant='outlined' className='text-capitalize bg-secondary text-white fw-light' color='success' >Submit</Button>\r\n                            <Button onClick={() => setOpen(false)} variant='outlined' color=\"danger\" className='mx-3 text-capitalize'>Cancel</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Sheet>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport { Divider } from '@mui/material';\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n});\r\n\r\nexport default function QuestionSkeleton() {\r\n\r\n    return (\r\n        <div className='border rounded-4 mb-4 p-5'>\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Box sx={{ margin: 1 }}>\r\n                    <Skeleton variant=\"circular\">\r\n                        <Avatar />\r\n                    </Skeleton>\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <Skeleton width=\"100%\">\r\n                        <Typography>.</Typography>\r\n                    </Skeleton>\r\n                </Box>\r\n            </Box>\r\n            <div>\r\n                <Typography component=\"div\" key={'h1'} variant={'h1'}>\r\n                    <Skeleton />\r\n                </Typography>\r\n                <Divider />\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Box sx={{ margin: 1 }}>\r\n                        <Skeleton variant=\"sqaure\">\r\n                            <Avatar />\r\n                        </Skeleton>\r\n                    </Box>\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <Skeleton width=\"100%\">\r\n                            <Typography>.</Typography>\r\n                        </Skeleton>\r\n                    </Box>\r\n                </Box>\r\n            </div>\r\n            {/* <Skeleton variant=\"rectangular\" width=\"100%\">\r\n          <div style={{ paddingTop: '57%' }} />\r\n        </Skeleton> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// export default function SkeletonChildren() {\r\n//   return (\r\n//     <Grid container spacing={8}>\r\n//       <Grid item xs>\r\n//         <QuestionSkeleton loading />\r\n//       </Grid>\r\n//       <Grid item xs>\r\n//         <QuestionSkeleton />\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// }","import React from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nconst MyCKEditor = ({ content, setContent }) => {\r\n    const handleEditorChange = (event, editor) => {\r\n        const data = editor.getData();\r\n        setContent(data);\r\n    };\r\n    return (\r\n        <div>\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content ? content : \"\"}\r\n                onChange={handleEditorChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCKEditor;\r\n"],"names":["ViewAnswer","_ref","layout","setLayout","id","question","setAnswerLength","answers","setAnswers","useState","showAnswer","setShowAnswer","scroll","setScroll","React","showWriteAnswerBox","setShowWriteAnswerBox","getAnswers","async","res","apiForum","get","concat","_res$data","_res$data2","_res$data2$results","status","data","results","length","console","log","error","response","useEffect","_jsx","children","Modal","open","onClose","undefined","ModalOverflow","_jsxs","ModalDialog","ModalClose","Typography","component","_Fragment","map","answer","Answers","WriteAnswer","questionId","showAnswerBoxHandler","_reply$auther","reply","fontSize","Link","color","fontWeight","textColor","auther","name","replies","ReplyList","_comment$auther","_comment$auther2","comment","viewReplies","setViewReplies","userData","useGlobalContext","setReplies","formik","useFormik","initialValues","email","commentId","replyText","onSubmit","values","action","post","resetForm","getReplies","_error$response","_error$response$data","message","_error$response2","_error$response2$data","ListItem","ListItemDecorator","sx","alignSelf","Avatar","size","src","profile_pic","ListItemContent","style","fontStyle","moment","created_at","fromNow","level","comment_text","className","underline","startDecorator","onClick","handleViewReplies","ReplyContainer","CardOverflow","p","display","IconButton","variant","ml","profile","height","width","Input","placeholder","flexGrow","mr","value","onChange","handleChange","onKeyDown","e","key","handleSubmit","disabled","role","ViewComments","_formik$values","commentList","itemType","setCommentLength","comments","setComments","answerId","commentText","getComments","_res$data3","_res$data3$comments","_res$data4","List","CommentListItem","_question$comments","_question$auther","_question$auther2","_question$auther3","_question$auther4","_question$auther5","_question$auther6","_question$auther7","_question$auther8","_question$comments2","showAnswerHandler","getQuestions","isAnswered","isSingle","alignment","setAlignment","showQuestionComments","setShowQuestionComments","showAnswerComments","setShowAnswerComments","upVote","setUpVote","downVote","setDownVote","viewDescription","setViewDescription","editOpen","setEditOpen","openReport","setOpenReport","commentLayout","setCommentLayout","anchorEl","setAnchorEl","commentLength","answerLength","Boolean","handleClose","handleVote","formData","voteType","getVotes","pop2","upvotes","downvotes","_question$votes","_question$votes2","votes","upVoteCount","downVoteCount","alt","delegate_country","delegate_designation","institute_name","Tooltip","title","event","currentTarget","MoreVertIcon","Menu","MenuListProps","PaperProps","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","EditTwoTone","marginRight","ReportTwoTone","to","slug","dangerouslySetInnerHTML","__html","body","cursor","handleViewDesc","ToggleButtonGroup","exclusive","handleAlignment","newAlignment","ToggleButton","ThumbUpTwoTone","ThumbDownTwoTone","Button","marginLeft","EditQuestion","setOpen","description","ReportContent","itemId","showComments","EditReply","put","err","justifyContent","alignItems","Sheet","maxWidth","borderRadius","boxShadow","top","right","bgcolor","mb","TextField","autoFocus","margin","minRows","maxRows","type","fullWidth","Divider","_reply$auther2","_reply$auther3","_reply$auther4","_reply$auther5","_reply$auther6","_reply$auther7","_reply$auther8","handleShowReplyBox","EditTwoToneIcon","DeleteTwoToneIcon","ReportTwoToneIcon","require","showReplyBox","Reply","first_name","last_name","EditComment","_comment$auther3","_comment$auther4","_comment$auther5","_comment$auther6","_comment$auther7","_comment$auther8","setShowReplyBox","showReplies","setShowReplies","handleReply","Replies","Comment","EditAnswer","setValue","_objectSpread","MyCKEditor","content","setContent","_answer$auther","_answer$auther2","_answer$auther3","_answer$auther4","_answer$votes","_answer$votes2","Chip","avatar","label","paddingLeft","ForumTwoTone","Comments","charactersLeft","inputProps","maxLength","helperText","endIcon","Send","isSubmitting","item_id","item_type","reason","setSubmitting","Report","Stack","spacing","FormControl","FormLabel","Select","Textarea","required","Box","gap","pt","maxHeight","multiline","rows","styled","QuestionSkeleton","Skeleton","CKEditor","editor","ClassicEditor","handleEditorChange","getData"],"sourceRoot":""}