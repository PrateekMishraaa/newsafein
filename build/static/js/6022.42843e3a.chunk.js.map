{"version":3,"file":"static/js/6022.42843e3a.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Box/boxClasses.js","../node_modules/@mui/system/esm/Box/Box.js","pages/Admin/pages/SingleState.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport PropTypes from 'prop-types';\nimport ClassNameGenerator from '@mui/utils/ClassNameGenerator';\nimport createBox from '../createBox';\nimport boxClasses from './boxClasses';\nconst Box = createBox({\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { Upload, YouTube } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { useFormik } from \"formik\";\r\nimport { pop2, Popup } from \"utils/Popup\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction SingleState() {\r\n  const { id } = useParams();\r\n  const ContectForm = useFormik({\r\n    initialValues: {\r\n      qoute: \"\",\r\n      qouteBy: \"\",\r\n      link: \"\",\r\n    },\r\n    onSubmit: async function (values, actions) {\r\n      Popup(\"loading...\");\r\n      console.log(\"ID\", id);\r\n      if ((values.qouteBy && values.qoute) || values.link) {\r\n        try {\r\n          const res = await apiJsonAuth.post(\r\n            `/public/adminState?state=${id}`,\r\n            values\r\n          );\r\n          if (res.status == 200) {\r\n            pop2.success({ title: \"Data Uploaded...\" })\r\n            actions.resetForm();\r\n            console.log(res);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          Popup(\"error\", err?.response?.data?.message);\r\n        }\r\n      } else {\r\n        pop2.warning({ title: \"All Fields Required!\" });\r\n      }\r\n    },\r\n  });\r\n  //   const VideoFormik = useFormik({\r\n  //     initialValues: {\r\n  //       videolink: \"\",\r\n  //       videotitle: \"\",\r\n  //     },\r\n  //     onSubmit: async function (values, actions) {\r\n  //       Popup(\"loading...\");\r\n  //       console.log(values, \"IDDD\");\r\n  //       if (values.videotitle && values.videolink) {\r\n  //         try {\r\n  //           const res = await apiAuth.post(`admin/institute-gallery/`, values);\r\n  //           if (res.status == 200) {\r\n  //             actions.resetForm();\r\n  //             setupdate(update + 1);\r\n  //           }\r\n  //         } catch (err) {\r\n  //           Popup(\"error\", err?.response?.data?.message);\r\n  //         }\r\n  //       } else {\r\n  //         pop2.warning({ title: \"please fill all the fields\" });\r\n  //       }\r\n  //     },\r\n  //   });\r\n  //   const GalleryFormik = useFormik({\r\n  //     initialValues: {\r\n  //       videolink: \"\",\r\n  //       videotitle: \"\",\r\n  //     },\r\n  //     onSubmit: async function (values, actions) {\r\n  //       Popup(\"loading...\");\r\n  //       console.log(values, \"IDDD\");\r\n  //       if (values.videotitle && values.videolink) {\r\n  //         try {\r\n  //           const res = await apiAuth.post(`admin/institute-gallery/`, values);\r\n  //           if (res.status == 200) {\r\n  //             actions.resetForm();\r\n  //             setupdate(update + 1);\r\n  //           }\r\n  //         } catch (err) {\r\n  //           Popup(\"error\", err?.response?.data?.message);\r\n  //         }\r\n  //       } else {\r\n  //         pop2.warning({ title: \"please fill all the fields\" });\r\n  //       }\r\n  //     },\r\n  //   });\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-center fs-4\">Student Login Page Content</h3>\r\n      <div className=\"container border rounded-4\">\r\n        <div\r\n          className=\" container-md  h-100 text-center item-center rounded-4 p-3\"\r\n          style={{ maxWidth: \"800px\" , }}\r\n        >\r\n          <Box>\r\n            <h5 className=\"fs-5 text-decoration-underline\">Add inspirational quotes </h5>\r\n            <FormControl fullWidth className=\"mx-auto\">\r\n              <TextField\r\n                rows={4}\r\n                multiline\r\n                value={ContectForm.values.qoute}\r\n                onChange={ContectForm.handleChange}\r\n                label=\"Add Qoute...\"\r\n                name=\"qoute\"\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n            <FormControl className=\"mx-auto mt-2\">\r\n              <TextField\r\n                label=\"Qoute Given By\"\r\n                value={ContectForm.values.qouteBy}\r\n                onChange={ContectForm.handleChange}\r\n                name=\"qouteBy\"\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n            <div className=\"m-2 \">\r\n              <Button\r\n                onClick={ContectForm.handleSubmit}\r\n                variant=\"outlined\"\r\n                endIcon={<Upload />}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </div>\r\n\r\n          </Box>\r\n        </div>\r\n        <div\r\n          className=\" container-md border rounded-5 shadow p-3 item-center mt-2 mb-5\"\r\n          style={{ maxWidth: \"800px\" }}\r\n        >\r\n          <Box>\r\n            <h5 className=\"fs-5 text-decoration-underline\">Add Youtube Video</h5>\r\n            <FormControl fullWidth className=\"mx-2 mt-2 px-2\">\r\n              <Tooltip\r\n                title=\"Double Click To Paste Link..\"\r\n                placement=\"bottom-start\"\r\n              >\r\n                <Input\r\n                  id={\"link\"}\r\n                  placeholder={\"Add Embed Link Here.\"}\r\n                  value={ContectForm.values.link}\r\n                  onChange={ContectForm.handleChange}\r\n                  name={\"link\"}\r\n                  onDoubleClick={(e) =>\r\n                    navigator.clipboard\r\n                      .readText()\r\n                      .then((link) => ContectForm.setFieldValue(\"link\", link))\r\n                  }\r\n                  variant={\"filled\"}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <YouTube fontSize=\"medium\" sx={{ color: \"red\" }} />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </Tooltip>\r\n            </FormControl>\r\n            <div className=\"container-sm text-center item-center mt-5\">\r\n              <Button\r\n                onClick={ContectForm.handleSubmit}\r\n                variant=\"outlined\"\r\n                endIcon={<Upload />}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"border rounded-4 p-3 mt-4\">\r\n        <h2 className=\"fs-3\">Add Youtube</h2>\r\n        <form onSubmit={Formik.handleSubmit}>\r\n          <div class=\"mb-3\">\r\n            <label for=\"videotitle\" class=\"form-label\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"videotitle\"\r\n              className=\"form-control \"\r\n              id=\"videotitle\"\r\n              value={VideoFormik.values.videotitle}\r\n              onChange={VideoFormik.handleChange}\r\n            />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"videolink\" class=\"form-label\">\r\n              Link\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"videolink\"\r\n              className=\"form-control \"\r\n              id=\"videolink\"\r\n              value={VideoFormik.values.videolink}\r\n              onChange={VideoFormik.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-warning\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"border rounded-4 p-3 mt-4\">\r\n        <h2 className=\"fs-3\">Add Image To Gallery</h2>\r\n        <form onSubmit={GalleryFormik.handleSubmit}>\r\n          <div class=\"mb-3\">\r\n            <label for=\"galleryimg\" class=\"form-label\">\r\n              Image\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"galleryimg\"\r\n              className=\"form-control pt-3\"\r\n              id=\"galleryimg\"\r\n              onChange={(e) => {\r\n                if (e.target.files.length) {\r\n                  GalleryFormik.setFieldValue(\"galleryimg\", e.target.files[0]);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"gallerytitle\" class=\"form-label\">\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"gallerytitle\"\r\n              className=\"form-control \"\r\n              id=\"gallerytitle\"\r\n              value={GalleryFormik.values.gallerytitle}\r\n              onChange={GalleryFormik.handleChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-warning\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleState;\r\n"],"names":["generateUtilityClasses","createBox","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate","id","useParams","ContectForm","useFormik","initialValues","qoute","qouteBy","link","onSubmit","async","values","actions","Popup","console","log","res","apiJsonAuth","post","concat","status","pop2","success","title","resetForm","err","_err$response","_err$response$data","response","data","message","warning","_jsxs","children","_jsx","className","style","maxWidth","Box","FormControl","fullWidth","TextField","rows","multiline","value","onChange","handleChange","label","name","variant","Button","onClick","handleSubmit","endIcon","Upload","Tooltip","placement","Input","placeholder","onDoubleClick","e","navigator","clipboard","readText","then","setFieldValue","startAdornment","InputAdornment","position","YouTube","fontSize","sx","color"],"sourceRoot":""}