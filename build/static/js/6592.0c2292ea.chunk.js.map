{"version":3,"file":"static/js/6592.0c2292ea.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/CheckBoxRounded.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Remove.js","pages/Admin/pages/StudentPoll.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-8.29 13.29c-.39.39-1.02.39-1.41 0L5.71 12.7a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41z\"\n}), 'CheckBoxRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { TextField, Tooltip } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { pop2, Popup } from \"utils/Popup\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { CheckBoxOutlineBlank, CheckBoxRounded, Close, Delete, Edit, Remove } from \"@mui/icons-material\";\r\nimport { useFormik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nfunction StudentPoll() {\r\n  const [options, setOptions] = React.useState({});\r\n  const [question, setQuestion] = React.useState();\r\n  const [count, setCount] = React.useState(2);\r\n  const [pollList, setPollList] = React.useState([]);\r\n  const [edit, setEdit] = useState();\r\n  const [showPoll, setShowPoll] = useState(false);\r\n  const rows = [];\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await apiJsonAuth.get(\"student/editPoll\");\r\n      if (response) {\r\n        setPollList(response?.data?.result);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handelpollEdit = async (id, todo, values) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Sure\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          const response = await apiJsonAuth.post(`student/editPoll?todo=${todo}`, {\r\n            id,\r\n            values,\r\n          });\r\n          if (response) {\r\n            toast.success(response?.data?.message);\r\n            fetchData();\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const uploadData = async (e) => {\r\n    try {\r\n      if (question && options) {\r\n        const response = await apiJsonAuth.put(\"/admin/createPoll\", {\r\n          question,\r\n          options: JSON.stringify(options),\r\n        });\r\n        // console.log(response);\r\n        if (response) {\r\n          Popup(\"success\", \"Poll Created..\");\r\n          e.target.reset();\r\n          fetchData();\r\n        }\r\n      } else {\r\n        pop2.warning({ title: \"All Input Fields Required!!\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  function handelChange(e) {\r\n    if (e.target.name === \"ques\") {\r\n      setQuestion(e.target.value);\r\n    } else {\r\n      setOptions({ ...options, [e?.target?.name]: e?.target?.value });\r\n    }\r\n  }\r\n  for (let i = 1; i <= count; i++) {\r\n    rows.push(\r\n      <div style={{ width: \"400px\" }}>\r\n        <TextField fullWidth className=\"form-control my-2 input-group rounded\" label={\"Option \" + i} required variant=\"outlined\" key={i} type=\"text\" name={\"option\" + i} onChange={handelChange} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const hideEditBar = (id) => {\r\n    document.getElementById(`edit${id}`).classList.add(\"d-none\");\r\n  };\r\n  const showEditBar = (id) => {\r\n    document.getElementById(`edit${id}`).classList.remove(\"d-none\");\r\n  };\r\n\r\n  const EditPollContent = ({ poll }) => {\r\n    const option = Object(JSON.parse(poll.options));\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        ques: poll.poll_ques,\r\n        role: poll.role,\r\n        option: option,\r\n      },\r\n      onSubmit: (values) => {\r\n        handelpollEdit(poll.id, \"UPDATE\", values).then(() => {\r\n          setEdit();\r\n        });\r\n      },\r\n    });\r\n    return (\r\n      <div className=\"card bg-gradient bg-opacity-75 postion-relative  m-1 p-2\">\r\n        <div className=\"mx-auto position-absolute end-0 top-0  d-flex w-10 justify-content-around mt-3\">\r\n          <Tooltip title=\"Close\" className=\"mx-2\">\r\n            <Close style={{ fontSize: \"25px\" }} type=\"button\" onClick={() => setEdit()} />\r\n          </Tooltip>\r\n        </div>\r\n        <Form className=\"container p-3\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"mb-2\">\r\n            <TextField required className=\"text-center\" fullWidth multiline maxRows={4} label=\"Question\" name=\"ques\" value={formik.values.ques} onChange={formik.handleChange} variant=\"outlined\" type=\"text\" />\r\n            <label htmlFor=\"role\" className=\"fomr-label mt-2\">\r\n              Role\r\n            </label>\r\n            <input required className=\"form-control\" id=\"role\" name=\"role\" value={formik.values.role} onChange={formik.handleChange} variant=\"outlined\" type=\"text\" />\r\n          </div>\r\n          <div>\r\n            <div>\r\n              {Object.values(option).map((opt, i) => {\r\n                return (\r\n                  <TextField\r\n                    className=\"fs-6 text-wrap mb-2\"\r\n                    label={\"Option \" + (i + 1)}\r\n                    required\r\n                    key={i}\r\n                    type=\"text\"\r\n                    name={\"option\" + i}\r\n                    onChange={(e) => {\r\n                      option[\"option\" + (i + 1)] = e.target.value;\r\n                    }}\r\n                    multiline\r\n                    maxRows={4}\r\n                    fullWidth\r\n                    size=\"sm\"\r\n                    variant=\"outlined\"\r\n                    defaultValue={opt}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"container text-center mt-2\">\r\n            <Button color=\"success\" variant=\"contained\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n          <h4>Manage Polls</h4>\r\n          <button className=\"btn btn-primary\" onClick={() => setShowPoll(true)}>\r\n            Add Poll\r\n          </button>\r\n        </div>\r\n        {/* Polls  */}\r\n        <div className=\"row row-cols-1 row-cols-lg-2 g-3\">\r\n          {pollList?.map((poll) => {\r\n            return (\r\n              <div className=\"col\">\r\n                {edit !== poll.id && (\r\n                  <div key={poll.id} className=\"card p-3 position-relative rounded-3 h-100\" onMouseOver={() => showEditBar(poll.id)} onMouseLeave={() => hideEditBar(poll.id)}>\r\n                    <div id={\"edit\" + poll.id} className=\" position-absolute end-0 border rounded-start d-none bg-light bg-gradient bg-opacity-75 shadow-lg\">\r\n                      <div className=\" position-static py-2\">\r\n                        <div className=\"m-2\">{poll?.status === \"ACTIVE\" ? <CheckBoxRounded sx={{ color: \"green\" }} onClick={() => handelpollEdit(poll.id, \"STATUS_INACTIVE\")} /> : <CheckBoxOutlineBlank sx={{ color: \"grey\" }} onClick={() => handelpollEdit(poll.id, \"STATUS_ACTIVE\")} />}</div>\r\n                        <div>\r\n                          <Edit className=\"m-2\" sx={{ color: \"black\" }} onClick={() => setEdit(poll.id)} />\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                          <Delete sx={{ color: \"red\" }} onClick={() => handelpollEdit(poll.id, \"DELETE\")} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <h6>{poll?.poll_ques}</h6>\r\n                      <small className=\"border p-1 rounded bg-light d-inline-block mb-2\">Roles : {poll?.role}</small>\r\n                    </div>\r\n                    {/* {console.log(Object.values(JSON.parse(poll.options)))} */}\r\n                    <div className=\"px-2\">\r\n                      {Object.values(JSON.parse(poll.options)).map((option, i) => {\r\n                        return (\r\n                          <p className=\"lh-1 fs-6 mb-2\" key={i}>\r\n                            <span>{i + 1 + \". \"}</span>\r\n                            {option}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div>{edit === poll.id && <EditPollContent poll={poll} />}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      {/* Add Poll Modal  */}\r\n      <Modal show={showPoll} onHide={() => setShowPoll(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Poll</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              uploadData(e);\r\n            }}>\r\n            <div className=\"input-group mb-2\">\r\n              <TextField required className=\"text-center\" fullWidth multiline rows={4} id=\"outlined-basic\" label=\"Enter Question Here!\" variant=\"outlined\" type=\"text\" name=\"ques\" onChange={handelChange} />\r\n            </div>\r\n            <div>\r\n              <div className=\"w-20 d-flex justify-content-center text-center item-center\">\r\n                <Button\r\n                  className=\"py-1 px-5 m-1 rounded rounded-pill\"\r\n                  onClick={() => {\r\n                    setCount(count + 1);\r\n                  }}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  disabled={count === 8}\r\n                  startIcon={<AddIcon />}>\r\n                  OPTION\r\n                </Button>\r\n                <Button\r\n                  className=\"py-1 px-5 m-1 rounded rounded-pill\"\r\n                  onClick={() => {\r\n                    setCount(count - 1);\r\n                    delete options[`option${count}`];\r\n                  }}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  disabled={count === 2}\r\n                  startIcon={<Remove />}>\r\n                  OPTION\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"rounded mt-2 d-flex justify-content-around flex-wrap px-2 mx-auto\">{rows}</div>\r\n            </div>\r\n            <div className=\"mx-auto d-flex justify-content-center\">\r\n              <button className=\"btn btn-success\" type=\"submit\">\r\n                Create Poll\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentPoll;\r\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","_jsx","options","setOptions","React","question","setQuestion","count","setCount","pollList","setPollList","edit","setEdit","useState","showPoll","setShowPoll","rows","async","fetchData","response","apiJsonAuth","get","_response$data","data","result","error","console","useEffect","handelpollEdit","id","todo","values","Swal","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","post","concat","_response$data2","toast","success","message","handelChange","e","_e$target","_e$target2","target","name","value","_objectSpread","i","push","style","width","children","TextField","fullWidth","className","label","required","variant","type","onChange","EditPollContent","_ref","poll","option","Object","JSON","parse","formik","useFormik","initialValues","ques","poll_ques","role","onSubmit","_jsxs","Tooltip","Close","fontSize","onClick","Form","handleSubmit","multiline","maxRows","handleChange","htmlFor","map","opt","size","defaultValue","Button","color","onMouseOver","showEditBar","document","getElementById","classList","remove","onMouseLeave","hideEditBar","add","status","CheckBoxRounded","sx","CheckBoxOutlineBlank","Edit","Delete","Modal","show","onHide","Header","closeButton","Title","Body","preventDefault","put","stringify","Popup","reset","pop2","warning","uploadData","disabled","startIcon","AddIcon","Remove"],"sourceRoot":""}