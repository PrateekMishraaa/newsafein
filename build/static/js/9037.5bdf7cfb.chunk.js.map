{"version":3,"file":"static/js/9037.5bdf7cfb.chunk.js","mappings":"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","sources":["../node_modules/react-toggle/dist/component/check.js","../node_modules/@mui/icons-material/Add.js","../node_modules/react-toggle/dist/component/index.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/react-toggle/dist/component/util.js","../node_modules/react-toggle/dist/component/x.js","utils/CKEditor.jsx","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js","pages/Admin/components/QuestionCard.jsx","pages/Admin/pages/AdminComplianceQuestion.jsx"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  return _react2.default.createElement(\n    'svg',\n    { width: '14', height: '11', viewBox: '0 0 14 11' },\n    _react2.default.createElement('path', { d: 'M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0', fill: '#fff', fillRule: 'evenodd' })\n  );\n};","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _check = require('./check');\n\nvar _check2 = _interopRequireDefault(_check);\n\nvar _x = require('./x');\n\nvar _x2 = _interopRequireDefault(_x);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Toggle = function (_PureComponent) {\n  _inherits(Toggle, _PureComponent);\n\n  function Toggle(props) {\n    _classCallCheck(this, Toggle);\n\n    var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleTouchEnd = _this.handleTouchEnd.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    _this.previouslyChecked = !!(props.checked || props.defaultChecked);\n    _this.state = {\n      checked: !!(props.checked || props.defaultChecked),\n      hasFocus: false\n    };\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.checked !== this.props.checked) {\n        // Disable linting rule here since this usage of setState inside\n        // componentDidUpdate is OK; see\n        // https://reactjs.org/docs/react-component.html#componentdidupdate\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ checked: !!this.props.checked });\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n      var checkbox = this.input;\n      if (event.target !== checkbox && !this.moved) {\n        this.previouslyChecked = checkbox.checked;\n        event.preventDefault();\n        checkbox.focus();\n        checkbox.click();\n        return;\n      }\n\n      var checked = this.props.hasOwnProperty('checked') ? this.props.checked : checkbox.checked;\n\n      this.setState({ checked: checked });\n    }\n  }, {\n    key: 'handleTouchStart',\n    value: function handleTouchStart(event) {\n      if (this.props.disabled) {\n        return;\n      }\n      this.startX = (0, _util.pointerCoord)(event).x;\n      this.activated = true;\n    }\n  }, {\n    key: 'handleTouchMove',\n    value: function handleTouchMove(event) {\n      if (!this.activated) return;\n      this.moved = true;\n\n      if (this.startX) {\n        var currentX = (0, _util.pointerCoord)(event).x;\n        if (this.state.checked && currentX + 15 < this.startX) {\n          this.setState({ checked: false });\n          this.startX = currentX;\n          this.activated = true;\n        } else if (currentX - 15 > this.startX) {\n          this.setState({ checked: true });\n          this.startX = currentX;\n          this.activated = currentX < this.startX + 5;\n        }\n      }\n    }\n  }, {\n    key: 'handleTouchEnd',\n    value: function handleTouchEnd(event) {\n      if (!this.moved) return;\n      var checkbox = this.input;\n      event.preventDefault();\n\n      if (this.startX) {\n        var endX = (0, _util.pointerCoord)(event).x;\n        if (this.previouslyChecked === true && this.startX + 4 > endX) {\n          if (this.previouslyChecked !== this.state.checked) {\n            this.setState({ checked: false });\n            this.previouslyChecked = this.state.checked;\n            checkbox.click();\n          }\n        } else if (this.startX - 4 < endX) {\n          if (this.previouslyChecked !== this.state.checked) {\n            this.setState({ checked: true });\n            this.previouslyChecked = this.state.checked;\n            checkbox.click();\n          }\n        }\n\n        this.activated = false;\n        this.startX = null;\n        this.moved = false;\n      }\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus(event) {\n      var onFocus = this.props.onFocus;\n\n\n      if (onFocus) {\n        onFocus(event);\n      }\n\n      this.setState({ hasFocus: true });\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur(event) {\n      var onBlur = this.props.onBlur;\n\n\n      if (onBlur) {\n        onBlur(event);\n      }\n\n      this.setState({ hasFocus: false });\n    }\n  }, {\n    key: 'getIcon',\n    value: function getIcon(type) {\n      var icons = this.props.icons;\n\n      if (!icons) {\n        return null;\n      }\n      return icons[type] === undefined ? Toggle.defaultProps.icons[type] : icons[type];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          _icons = _props.icons,\n          inputProps = _objectWithoutProperties(_props, ['className', 'icons']);\n\n      var classes = (0, _classnames2.default)('react-toggle', {\n        'react-toggle--checked': this.state.checked,\n        'react-toggle--focus': this.state.hasFocus,\n        'react-toggle--disabled': this.props.disabled\n      }, className);\n\n      return _react2.default.createElement(\n        'div',\n        { className: classes,\n          onClick: this.handleClick,\n          onTouchStart: this.handleTouchStart,\n          onTouchMove: this.handleTouchMove,\n          onTouchEnd: this.handleTouchEnd },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-toggle-track' },\n          _react2.default.createElement(\n            'div',\n            { className: 'react-toggle-track-check' },\n            this.getIcon('checked')\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'react-toggle-track-x' },\n            this.getIcon('unchecked')\n          )\n        ),\n        _react2.default.createElement('div', { className: 'react-toggle-thumb' }),\n        _react2.default.createElement('input', _extends({}, inputProps, {\n          ref: function ref(_ref) {\n            _this2.input = _ref;\n          },\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          className: 'react-toggle-screenreader-only',\n          type: 'checkbox' }))\n      );\n    }\n  }]);\n\n  return Toggle;\n}(_react.PureComponent);\n\nexports.default = Toggle;\n\n\nToggle.displayName = 'Toggle';\n\nToggle.defaultProps = {\n  icons: {\n    checked: _react2.default.createElement(_check2.default, null),\n    unchecked: _react2.default.createElement(_x2.default, null)\n  }\n};\n\nToggle.propTypes = {\n  checked: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  defaultChecked: _propTypes2.default.bool,\n  onChange: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  className: _propTypes2.default.string,\n  name: _propTypes2.default.string,\n  value: _propTypes2.default.string,\n  id: _propTypes2.default.string,\n  'aria-labelledby': _propTypes2.default.string,\n  'aria-label': _propTypes2.default.string,\n  icons: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.shape({\n    checked: _propTypes2.default.node,\n    unchecked: _propTypes2.default.node\n  })])\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pointerCoord = pointerCoord;\n// Copyright 2015-present Drifty Co.\n// http://drifty.com/\n// from: https://github.com/driftyco/ionic/blob/master/src/util/dom.ts\n\nfunction pointerCoord(event) {\n  // get coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (event) {\n    var changedTouches = event.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      return { x: touch.clientX, y: touch.clientY };\n    }\n    var pageX = event.pageX;\n    if (pageX !== undefined) {\n      return { x: pageX, y: event.pageY };\n    }\n  }\n  return { x: 0, y: 0 };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  return _react2.default.createElement(\n    'svg',\n    { width: '10', height: '10', viewBox: '0 0 10 10' },\n    _react2.default.createElement('path', { d: 'M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12', fill: '#fff', fillRule: 'evenodd' })\n  );\n};","import React from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nconst MyCKEditor = ({ content, setContent }) => {\r\n    const handleEditorChange = (event, editor) => {\r\n        const data = editor.getData();\r\n        setContent(data);\r\n    };\r\n    return (\r\n        <div>\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content ? content : \"\"}\r\n                onChange={handleEditorChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCKEditor;\r\n","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport { getChildRef } from '@restart/ui/utils';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: getChildRef(children),\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const handleHide = useEventCallback(onHide);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, FloatingLabel, Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SignaturePad from \"../../compliance/components/SignaturePad\";\r\nimport { apiAuth } from \"api\";\r\nimport MyCKEditor from \"utils/CKEditor\";\r\nconst QuestionCard = ({i,id,questionArray,getAllQuestionByCompliance}) => {\r\n    \r\n\r\n    const [options, setOptions] = useState([\"\"]);\r\n    const [category, setCategory] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n  \r\n    // Duplicates with \"edit\" prefix\r\n    const [editDescription, setEditDescription] = useState(\"\");\r\n    const [editQuestionType, setEditQuestionType] = useState(\"\");\r\n    const [editMediaType, setEditMediaType] = useState(\"\");\r\n    const [editHint, setEditHint] = useState(\"\");\r\n    const [editText, setEditText] = useState(\"\");\r\n  \r\n    const [editSelectedCategory, setEditSelectedCategory] = useState(\"\");\r\n    const [editSelectedCategoryId, setEditSelectedCategoryId] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n    // const [refreshOffcanvas, setRefreshOffcanvas] = useState(0);\r\n    const [questionId, setQuestionId] = useState(0);\r\n    const [editRequired, seteditRequired] = useState(false);\r\n    const [editImageRequired, seteditImageRequired] = useState(false);\r\n    const [editcommentRequired, seteditcommentRequired] = useState(false);\r\n    const [editfileRequired, seteditfileRequired] = useState(false);\r\n    const [editmaxfile, seteditmaxfile] = useState(null);\r\n    const [editmaximage, seteditmaximage] = useState(null);\r\n    const [isedit, setisedit] = useState(false);\r\n    const [number, setNumber] = useState(0);\r\n    const [images, setImages] = useState(null);\r\n    const [isSubQuesttion, setisSubQuesttion] = useState(false);\r\n    const [isSubQuesttion4option, setisSubQuesttion4option] = useState(false);\r\n    const [subQuestion, setSubQuestion] = useState([]);\r\n    const [index ,setIndex] = useState(null);\r\n    const [img, setImg] = useState(null);\r\n    const [formData, setFormData] = useState([{ img: \"\", description: \"\" }]);\r\n  \r\n    const handleAddInput = () => {\r\n      setFormData([...formData, { img: \"\", description: \"\" }]);\r\n    };\r\n  \r\n    const handleRemoveInput = (index) => {\r\n      const updatedData = [...formData];\r\n      updatedData.splice(index, 1);\r\n      setFormData(updatedData);\r\n    };\r\n\r\n    const handleInputChange = (index, event) => {\r\n      const { name, value } = event.target;\r\n      const updatedData = [...formData];\r\n      updatedData[index] = { ...updatedData[index], [name]: value };\r\n      setFormData(updatedData);\r\n    };\r\n\r\n\r\n    const handleSubQuesttion4option =(e, questionId, questionTypes,index)=>{\r\n      e.preventDefault();\r\n      const question =  questionArray.find((i)=>i.id ===questionId)\r\n      if (!editText) {\r\n        toast.dismiss();\r\n        toast.error(\"You have to Write Question\");\r\n        return;\r\n      }\r\n      \r\n      const isCorrect = options.find((i) => i.correct === true);\r\n      if (!isCorrect && (questionTypes === \"CheckBox\" || questionTypes === \"mcq\")) {\r\n        toast.dismiss();\r\n        toast.error(\"At least Choose 1 Correct Answer\");\r\n        return;\r\n      }\r\n      if (questionTypes === \"CheckBox\" || questionTypes === \"mcq\") {\r\n        const checkEmpty = options.find((i) => i.text === \"\");\r\n        if (checkEmpty) {\r\n          toast.dismiss();\r\n          toast.error(\"Can't send Blank Option\");\r\n          return;\r\n        }\r\n        if (options.length < 2) {\r\n          toast.dismiss();\r\n          toast.error(\"Add atleast 2 options\");\r\n          return;\r\n        }\r\n      }\r\n      let option = question.options;\r\n      \r\n      \r\n      // let tempArray =[ ...option[index]]\r\n      let tempQuestion = {\r\n        subQuestion4optionId:Date.now().toString(36) + Math.random().toString(36).substr(2),\r\n        text: editText,\r\n        questionId:questionId,\r\n        complianceId:id,\r\n        description: editDescription,\r\n        question_type: editQuestionType,\r\n        media_type: editMediaType,\r\n        options: options,\r\n        hint: editHint,\r\n        images_required: editImageRequired,\r\n        comment_required: editcommentRequired,\r\n        required: editRequired,\r\n        image_max: editmaximage,\r\n        files_required: false,\r\n        file_max: editmaxfile,\r\n        images: img,\r\n      };\r\n      option[index].sub_question = tempQuestion;\r\n      \r\n      \r\n      \r\n      axios\r\n        .put(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${questionId}`,\r\n          {\r\n            options: option,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(\"quesiont created:\", response.data.result);\r\n          setEditText(\"\");\r\n          // toast.dismiss();\r\n          setEditQuestionType(\"\");\r\n          toast.success(\"created successfully\");\r\n          setEditMediaType(\"\");\r\n          // Hide the modal\r\n          setEditHint(\"\");\r\n          seteditImageRequired(false);\r\n          seteditcommentRequired(false);\r\n          seteditRequired(false);\r\n          getAllQuestionByCompliance();\r\n          handleClose();\r\n          setOptions([]);\r\n  \r\n        });\r\n    }\r\n    \r\n    const handleDeleteSubQuestion4option = async (e, id,index) => {\r\n      e.preventDefault();\r\n      const question =  questionArray.find((i)=>i.id ===id)\r\n      console.log(question);\r\n      let option = question.options\r\n      console.log(option, \"thi si option\");\r\n      option[index].sub_question=null\r\n      console.log(index, \"this is index\")\r\n      try {\r\n        const response = await axios.put(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${id}`,{\r\n            options:option,\r\n          }\r\n        );\r\n        console.log(\"quesiont created:\", response.data.result);\r\n        // Reset the form\r\n        toast.dismiss();\r\n        toast.success(\"Question Delete successfully\");\r\n        // Hide the modal\r\n        getAllQuestionByCompliance();\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error creating compliance:\", error);\r\n      }\r\n    };\r\n    const handleDeleteSubQuestion = async (e, id,index) => {\r\n      e.preventDefault();\r\n      let tempSubQuestion = [...subQuestion]\r\n      tempSubQuestion.splice(index, 1);\r\n      setSubQuestion(tempSubQuestion);\r\n      try {\r\n        const response = await axios.put(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${id}`,{\r\n            sub_question:tempSubQuestion,\r\n          }\r\n        );\r\n        console.log(\"quesiont created:\", response.data.result);\r\n        // Reset the form\r\n        toast.dismiss();\r\n        toast.success(\"Question Delete successfully\");\r\n        // Hide the modal\r\n        getAllQuestionByCompliance();\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error creating compliance:\", error);\r\n      }\r\n     };\r\n    \r\n     const filechangeHandlerDescModal = async (index,event) => {\r\n      const file = event.target.files[0];\r\n      try {\r\n        const res = await apiAuth.post(\"/admin/temp\", { img: file });\r\n        const updatedData = [...formData];\r\n        updatedData[index] = {\r\n          ...updatedData[index],\r\n          img: res.data?.file?.Location, \r\n        };\r\n        setFormData(updatedData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n  \r\n      // setImages((prevImages) => [...prevImages, ...newImages]);\r\n    };\r\n    const uploadButtonClickHandlerIndex = (index,event) => {\r\n      event.preventDefault();\r\n      document.getElementById(`img${index}jod`).click();\r\n    };\r\n    \r\n    const handleDelete = async (e, id) => {\r\n      e.preventDefault();\r\n      try {\r\n        const response = await axios.delete(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${id}`\r\n        );\r\n        console.log(\"quesiont created:\", response.data.result);\r\n        // Reset the form\r\n        toast.dismiss();\r\n        toast.success(\"Question Delete successfully\");\r\n        // Hide the modal\r\n        getAllQuestionByCompliance();\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error creating compliance:\", error);\r\n      }\r\n    };\r\n    const handleSubmit = async (e, questionTypes) => {\r\n      e.preventDefault();\r\n  \r\n      if(!editSelectedCategory || !editSelectedCategoryId){\r\n        toast.dismiss();\r\n        toast.error(\"You have to Select Category\");\r\n        return;\r\n      }\r\n  \r\n  \r\n      if (!editText) {\r\n        toast.dismiss();\r\n        toast.error(\"You have to Write Question\");\r\n        return;\r\n      }\r\n      const isCorrect = options.find((i) => i.correct === true);\r\n      if (!isCorrect) {\r\n        toast.dismiss();\r\n        toast.error(\"Atleast Choose 1 Correct Answer\");\r\n        return;\r\n      }\r\n      if (questionTypes === \"CheckBox\" || questionTypes === \"mcq\") {\r\n        const checkEmpty = options.find((i) => i.text === \"\");\r\n        if (checkEmpty) {\r\n          toast.dismiss();\r\n          toast.error(\"Can't send Blank Option\");\r\n          return;\r\n        }\r\n        if (options.length < 2) {\r\n          toast.dismiss();\r\n          toast.error(\"Add atleast 2 options\");\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        const response = await axios.post(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question`,\r\n          {\r\n            complianceId: id,\r\n            text: editText,\r\n            description: editDescription,\r\n            question_type: editQuestionType,\r\n            media_type: editMediaType,\r\n            options: options,\r\n            category: editSelectedCategory,\r\n            categoryId: editSelectedCategoryId,\r\n            hint: editHint,\r\n            images_required: editImageRequired,\r\n            comment_required: editcommentRequired,\r\n            required: editRequired,\r\n            image_max: editmaximage,\r\n            files_required: false,\r\n            file_max: editmaxfile,\r\n            images: images,\r\n      desc_modal:formData,\r\n\r\n          }\r\n        );\r\n        console.log(\"quesiont created:\", response.data.result);\r\n        setEditText(\"\");\r\n        // toast.dismiss();\r\n        setEditQuestionType(\"\");\r\n        toast.success(\"created successfully\");\r\n        setEditMediaType(\"\");\r\n        // Hide the modal\r\n        setEditHint(\"\");\r\n        seteditImageRequired(false);\r\n        seteditcommentRequired(false);\r\n        seteditRequired(false);\r\n        getAllQuestionByCompliance();\r\n        handleClose();\r\n        setOptions([]);\r\n  \r\n      } catch (error) {\r\n        console.error(\"Error creating compliance:\", error);\r\n      }\r\n    };\r\n    const handleEdit = async (e, idd, questionTypes) => {\r\n      e.preventDefault();\r\n  \r\n      if (!editText) {\r\n        toast.dismiss();\r\n        toast.error(\"You have to Write Question\");\r\n        return;\r\n      }\r\n      const isCorrect = options.find((i) => i.correct === true);\r\n      if (!isCorrect && (questionTypes === \"CheckBox\" || questionTypes === \"mcq\")) {\r\n        toast.dismiss();\r\n        toast.error(\"At least Choose 1 Correct Answer\");\r\n        return;\r\n      }\r\n      if (questionTypes === \"CheckBox\" || questionTypes === \"mcq\") {\r\n        const checkEmpty = options.find((i) => i.text === \"\");\r\n        if (checkEmpty) {\r\n          toast.dismiss();\r\n          toast.error(\"Can't send Blank Option\");\r\n          return;\r\n        }\r\n        if (options.length < 2) {\r\n          toast.dismiss();\r\n          toast.error(\"Add atleast 2 options\");\r\n          return;\r\n        }\r\n      }\r\n      try {\r\n        const response = await axios.put(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${idd}`,\r\n          {\r\n            complianceId: id,\r\n            text: editText,\r\n            description: editDescription,\r\n            question_type: editQuestionType,\r\n            media_type: editMediaType,\r\n            options: options,\r\n            category: editSelectedCategory,\r\n            categoryId: editSelectedCategoryId,\r\n            hint: editHint,\r\n            images_required: editImageRequired,\r\n            comment_required: editcommentRequired,\r\n            required: editRequired,\r\n            image_max: editmaximage,\r\n            files_required: false,\r\n            file_max: editmaxfile,\r\n            images: img,\r\n            desc_modal:formData,\r\n          }\r\n        );\r\n        console.log(\"quesiont created:\", response.data.result);\r\n        // Reset the form\r\n        setEditText(\"\");\r\n        toast.dismiss();\r\n        setEditQuestionType(\"\");\r\n        toast.success(\"edit success\");\r\n        setEditMediaType(\"\");\r\n        // Hide the modal\r\n        setEditHint(\"\");\r\n        seteditImageRequired(false);\r\n        seteditcommentRequired(false);\r\n        seteditRequired(false);\r\n        getAllQuestionByCompliance();\r\n        handleClose();\r\n        setOptions([]);\r\n      } catch (error) {\r\n        console.error(\"Error creating compliance:\", error);\r\n      }\r\n    };\r\n    \r\n    const handleSubQuestion = (e, questionId, questionTypes) => {\r\n      e.preventDefault();\r\n      if (!editText) {\r\n        toast.dismiss();\r\n        toast.error(\"You have to Write Question\");\r\n        return;\r\n      }\r\n      const isCorrect = options.find((i) => i.correct === true);\r\n      if (!isCorrect) {\r\n        toast.dismiss();\r\n        toast.error(\"Atleast Choose 1 Correct Answer\");\r\n        return;\r\n      }\r\n      if (questionTypes === \"CheckBox\" || questionTypes === \"mcq\") {\r\n        const checkEmpty = options.find((i) => i.text === \"\");\r\n        if (checkEmpty) {\r\n          toast.dismiss();\r\n          toast.error(\"Can't send Blank Option\");\r\n          return;\r\n        }\r\n        if (options.length < 2) {\r\n          toast.dismiss();\r\n          toast.error(\"Add atleast 2 options\");\r\n          return;\r\n        }\r\n      }\r\n      let tempArray = [...subQuestion];\r\n      let tempQuestion = {\r\n        text: editText,\r\n        description: editDescription,\r\n        question_type: editQuestionType,\r\n        media_type: editMediaType,\r\n        options: options,\r\n        subQuestionId:Date.now().toString(36) + Math.random().toString(36).substr(2),\r\n        hint: editHint,\r\n        images_required: editImageRequired,\r\n        comment_required: editcommentRequired,\r\n        required: editRequired,\r\n        image_max: editmaximage,\r\n        files_required: false,\r\n        file_max: editmaxfile,\r\n        images: images,\r\n      };\r\n      tempArray.push(tempQuestion);\r\n      setSubQuestion(tempArray);\r\n  \r\n      axios\r\n        .put(\r\n          `${process.env.REACT_APP_API_BASE_URL}admin/compliance_question/${questionId}`,\r\n          {\r\n            sub_question: tempArray,\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(\"quesiont created:\", response.data.result);\r\n          setEditText(\"\");\r\n          // toast.dismiss();\r\n          setEditQuestionType(\"\");\r\n          toast.success(\"created successfully\");\r\n          setEditMediaType(\"\");\r\n          // Hide the modal\r\n          setEditHint(\"\");\r\n          seteditImageRequired(false);\r\n          seteditcommentRequired(false);\r\n          seteditRequired(false);\r\n          getAllQuestionByCompliance();\r\n          handleClose();\r\n          setOptions([]);\r\n  \r\n        });\r\n    };\r\n    \r\n    const filechangeHandler = (event) => {\r\n      apiAuth\r\n        .post(\"/admin/temp\", { img: event.target.files[0] })\r\n        .then((res) => {\r\n          setImg(res.data?.file?.Location);\r\n        })\r\n        .catch((error) => console.log(error));\r\n      const file = event.target.files[0];\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setImages({...images,\r\n        file: file,\r\n        name: file.name,\r\n        link: imageUrl,\r\n      });\r\n  \r\n      // setImages((prevImages) => [...prevImages, ...newImages]);\r\n    };\r\n    \r\n    const deleteImage = () => {\r\n      setImg('')\r\n    };\r\n    \r\n    \r\n    \r\n    const uploadButtonClickHandler = (event) => {\r\n      event.preventDefault();\r\n      document.getElementById(\"img\").click();\r\n    };\r\n    \r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n    \r\n    const increaseNumber = () => {\r\n      setNumber(number + 1);\r\n    };\r\n    \r\n    const decreaseNumber = () => {\r\n      setNumber(number - 1);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n      setShow(false);\r\n      clearDataOffcanvas();\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    \r\n    const handleOptionChange = (index, value) => {\r\n      setOptions((prevOptions) => {\r\n        const updatedOptions = [...prevOptions];\r\n        updatedOptions[index] = {\r\n          ...updatedOptions[index],\r\n          text: value,\r\n          risk: false,\r\n          riskText: \"\",\r\n          score: 0,\r\n        };\r\n        return updatedOptions;\r\n      });\r\n    };\r\n    const handleScoreChange = (index, value) => {\r\n      setOptions((prevOptions) => {\r\n        const updatedOptions = [...prevOptions];\r\n        updatedOptions[index] = {\r\n          ...updatedOptions[index],\r\n          score: value,\r\n        };\r\n        console.log(\"updated option\", updatedOptions, value);\r\n        return updatedOptions;\r\n      });\r\n    };\r\n    const handleRishTxtChange = (index, value) => {\r\n      setOptions((prevOptions) => {\r\n        const updatedOptions = [...prevOptions];\r\n        updatedOptions[index] = {\r\n          ...updatedOptions[index],\r\n          riskText: value,\r\n          risk: true,\r\n        };\r\n        return updatedOptions;\r\n      });\r\n    };\r\n    const handleNumberChange = (index, value) =>{\r\n      setOptions((prevOptions)=>{\r\n        const updatedOptions = [...prevOptions];\r\n        updatedOptions[index] = {\r\n          ...updatedOptions[index],value:value\r\n        }\r\n        return updatedOptions\r\n      })\r\n    }\r\n    \r\n    const handleCorrectChange = (index, isChecked) => {\r\n      setOptions((prevOptions) => {\r\n        const updatedOptions = [...prevOptions];\r\n        updatedOptions[index] = {\r\n          ...updatedOptions[index],\r\n          correct: isChecked,\r\n        };\r\n        return updatedOptions;\r\n      });\r\n    };\r\n    const handleAddOption = () => {\r\n      if (options.length > 0 && options[options.length - 1].text === \"\") {\r\n        return; // Don't add option if last option's text is empty\r\n      }\r\n      setOptions([...options, { text: \"\", correct: false }]);\r\n    };\r\n    \r\n    const handleRemoveOption = (index) => {\r\n      const updatedOptions = [...options];\r\n      updatedOptions.splice(index, 1); // Remove option at the specified index\r\n      setOptions(updatedOptions);\r\n    };\r\n  \r\n    // const getAllQuestionByCompliance = () => {\r\n    //   axios\r\n    //     .get(\r\n    //       process.env.REACT_APP_API_BASE_URL +\r\n    //         \"admin/compliance_question/compliance/\" +\r\n    //         id\r\n    //     )\r\n    //     .then((response) => {\r\n    //       console.log(\"this is all question\", response.data.result);\r\n    //       setQuestionArray(response.data.result);\r\n    //     })\r\n    //     .catch(() => {\r\n    //       toast.dismiss();\r\n    //       toast.error(\"something went wrong\");\r\n    //     });\r\n    // };\r\n  \r\n    const getAllCategoriesByComplianceId = () => {\r\n      axios\r\n        .get(\r\n          process.env.REACT_APP_API_BASE_URL +\r\n            \"admin/compliance_category/compliance/\" +\r\n            id\r\n        )\r\n        .then((response) => {\r\n          setCategory(response.data.result);\r\n        });\r\n    };\r\n  \r\n    const getEditDataSubQues = (q) => {\r\n      console.log(\"inside the subquestion\");\r\n      setEditSelectedCategoryId(q.categoryId);\r\n      setQuestionId(q.id);\r\n    };\r\n  \r\n    const getEditData = (q) => {\r\n      setEditDescription(q.description);\r\n      setEditText(q.text);\r\n      setEditQuestionType(q.question_type);\r\n      setEditMediaType(q.media_type);\r\n      setEditSelectedCategoryId(q.categoryId);\r\n      // Hide the modal\r\n      setQuestionId(q.id);\r\n      setEditHint(q.hint);\r\n  \r\n      seteditImageRequired(q.images_required);\r\n      seteditcommentRequired(q.comment_required);\r\n      seteditRequired(q.comment_required);\r\n      // handleClose()\r\n      setEditSelectedCategory(q.category);\r\n      setOptions(q.options);\r\n      seteditmaxfile(q.file_max);\r\n      seteditmaximage(q.image_max);\r\n      // setNumber(0);\r\n      seteditfileRequired(q.files_required);\r\n    };\r\n  \r\n    const clearDataOffcanvas = () => {\r\n      setEditDescription(\"\");\r\n      setEditText(\"\");\r\n      // toast.dismiss();\r\n      setEditQuestionType(\"\");\r\n      setEditMediaType(\"\");\r\n      // Hide the modal\r\n      setQuestionId(null);\r\n      setEditHint(\"\");\r\n      setEditSelectedCategoryId(null);\r\n      seteditImageRequired(false);\r\n      seteditcommentRequired(false);\r\n      seteditRequired(false);\r\n      // handleClose()\r\n      setEditSelectedCategory(\"\");\r\n      setOptions([]);\r\n      seteditmaxfile(null);\r\n      seteditmaximage(null);\r\n      setNumber(0);\r\n      seteditfileRequired(false);\r\n      setisSubQuesttion(false);\r\n      setisedit(false);\r\n      setisSubQuesttion4option(false);\r\n      setImages(null)\r\n    };\r\n  \r\n    const handleSelection = (e) => {\r\n      if (e.target.value === \"YesNo\") {\r\n        setOptions([\r\n          { text: \"Yes\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n          { text: \"No\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n        ]);\r\n      } else if (e.target.value === \"YesNONa\") {\r\n        setOptions([\r\n          { text: \"Yes\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n          { text: \"No\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n          { text: \"NA\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n        ]);\r\n      } else if (e.target.value === \"mcq\" || e.target.value === \"CheckBox\") {\r\n        setOptions([{ text: \"\", correct: false, risk: false, riskText: \"\" }]);\r\n      } else if(e.target.value ==='Number'){\r\n        setOptions([\r\n          {text:\"Minimum\",value:0, risk:false, riskText:\"\", score:0}, \r\n          {text:\"Maximum\",value:0, risk:false, riskText:\"\", score:0}\r\n  \r\n        ])\r\n      }\r\n      \r\n      else {\r\n        setOptions([{ text: \"\", correct: false, risk: false, riskText: \"\" }]);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // fetchTemplateInfo();\r\n      // getAllQuestionByCompliance();\r\n      getAllCategoriesByComplianceId();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n                {questionArray.length > 0 ? (\r\n                  questionArray\r\n                    .filter((question) => question.categoryId === i.id)\r\n                    .map((question, index) => {\r\n                      let count =0\r\n\r\n                      return (\r\n                        <div className=\"mt-4\" key={index}>\r\n                          <Card\r\n                            style={{\r\n                              minHeight: \"100px\",\r\n                              background: \"#e8edf8\",\r\n                              boxShadow:\" rgba(0, 0, 0, 0.3) 0px 0px 25px -5px\",\r\n                            }}\r\n                            className=\"question-card\"\r\n                          >\r\n                            <Card.Body>\r\n                              <div className=\"d-flex\">\r\n                              <span> Q{index+1}.</span>\r\n                <div dangerouslySetInnerHTML={{ __html: question.text }} />\r\n\r\n                              </div>\r\n                              <div\r\n                                className=\"text-capitalize \"\r\n                                style={{\r\n                                  marginTop: \"18px\",\r\n                                  marginBottom:\"12px\"\r\n                                }}\r\n                              >\r\n                                {question.question_type === \"YesNo\" ? (\r\n                                  <div >\r\n                                    <input\r\n                                      className=\"mr-4\"\r\n                                      type=\"radio\"\r\n                                      name={question.id}\r\n                                    />\r\n                                    <span\r\n                                      className=\"text-capitalize \"\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                    >\r\n                                      Yes\r\n                                    <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(0);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                    </span>\r\n\r\n\r\n                                    <input\r\n                                      className=\"mr-4\"\r\n                                      type=\"radio\"\r\n                                      name={question.id}\r\n                                    />\r\n                                    <span\r\n                                      className=\"text-capitalize \"\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                    >\r\n                                      No\r\n                                      <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(1);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                    </span>\r\n                                  </div>\r\n                                ) : question.question_type === \"YesNONa\" ? (\r\n                                  <div>\r\n                                    <input\r\n                                      className=\"mr-4\"\r\n                                      type=\"radio\"\r\n                                      name={question.id}\r\n                                    />\r\n                                    <span\r\n                                      className=\"text-capitalize \"\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                    >\r\n                                      Yes\r\n                                      <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(0);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                    </span>\r\n\r\n                                    <input\r\n                                      className=\"mr-4\"\r\n                                      type=\"radio\"\r\n                                      name={question.id}\r\n                                    />\r\n                                    <span\r\n                                      className=\"text-capitalize \"\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                    >\r\n                                      No\r\n                                      <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(1);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                    </span>\r\n                                    <input\r\n                                      className=\"mr-4\"\r\n                                      type=\"radio\"\r\n                                      name={question.id}\r\n                                    />\r\n                                    <span\r\n                                      className=\"text-capitalize \"\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                    >\r\n                                      NA\r\n                                      <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(2);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                    </span>\r\n                                  </div>\r\n                                ) : question.question_type === \"Long\" ||\r\n                                  question.question_type === \"Short\" ? (\r\n                                  <div>\r\n                                    <textarea\r\n                                      className=\"form-control\"\r\n                                      style={{ height: \"70px\" }}\r\n                                      id=\"description\"\r\n                                      rows=\"3\"\r\n                                      placeholder=\"Enter Answer\"\r\n                                      // value={\"\"}\r\n                                      onChange={\"\"}\r\n                                    ></textarea>\r\n                                  </div>\r\n                                ) : question.question_type === \"Number\" ? (\r\n                                  <div className=\"d-flex \">\r\n                                    <button\r\n                                      style={{ marginRight: \"12px\" }}\r\n                                      className=\"btn btn-sm btn-success mr-4\"\r\n                                      onClick={decreaseNumber}\r\n                                    >\r\n                                      -\r\n                                    </button>\r\n                                    <input\r\n                                      className=\"text-align-center\"\r\n                                      style={{\r\n                                        textAlign: \"center\",\r\n                                        width: \"67px\",\r\n                                      }}\r\n                                      type=\"number\"\r\n                                      value={number}\r\n                                      onChange={(e) =>\r\n                                        setNumber(parseInt(e.target.value))\r\n                                      }\r\n                                    />\r\n                                    <button\r\n                                      style={{ marginLeft: \"12px\" }}\r\n                                      className=\"btn btn-sm btn-success ml-4\"\r\n                                      onClick={increaseNumber}\r\n                                    >\r\n                                      +\r\n                                    </button>\r\n                                  </div>\r\n                                ) : question.question_type === \"Signature\" ? (\r\n                                  <div>\r\n                                    <SignaturePad/>\r\n                                  </div>\r\n                                ) : null}\r\n                                {question.options.length > 0\r\n                                  ? question.options.map((ans, ansIndex) => {\r\n                                      return (\r\n                                        <div\r\n                                          className=\"d-inline mr-3\"\r\n                                          style={{ marginRight: \"12px\" }}\r\n                                        >\r\n                                          {question.question_type ===\r\n                                            \"CheckBox\" ||\r\n                                          question.question_type === \"mcq\" ? (\r\n                                            <div className=\"d-inline\">\r\n                                              <input\r\n                                                type=\"radio\"\r\n                                                name={question.id}\r\n                                              />\r\n                                              <span\r\n                                                key={ansIndex}\r\n                                                className=\"text-capitalize \"\r\n                                              >\r\n                                                {ans.text}\r\n                                                <AddIcon  onClick={() => {\r\n                                    handleShow();\r\n                                    setIndex(ansIndex);\r\n                                    setisSubQuesttion4option(true);\r\n                                    setQuestionId(question.id);\r\n                                    getEditDataSubQues(question);\r\n                                  }}/>\r\n                                              </span>\r\n                                            </div>\r\n                                          ) : null}\r\n                                        </div>\r\n                                      );\r\n                                    })\r\n                                  : \"no answer\"}\r\n                              </div>\r\n\r\n                           \r\n\r\n                              <div className=\"d-flex justify-content-end\">\r\n                               \r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleShow();\r\n                                    // refreshOffcanvasComponent();\r\n                                    setQuestionId(question.id);\r\n                                    setisedit(true);\r\n                                    setisSubQuesttion(false);\r\n                                    getEditData(question);\r\n                                    setSubQuestion(question.sub_question);\r\n                                  }}\r\n                                  style={{ marginRight: \"12px\" }}\r\n                                >\r\n                                  <Edit />{\" \"}\r\n                                </span>\r\n\r\n                                <span\r\n                                  onClick={(e) => handleDelete(e, question.id)}\r\n                                >\r\n                                  <Delete />{\" \"}\r\n                                </span>\r\n                              </div>\r\n                             { question?.images && \r\n                             <Card onClick={()=>window.location.href = question.images}\r\n                              style={{width:\"500px\" , height:'200px', cursor:'pointer'}}>\r\n                                <Card.Body style={{height:'100%'}}>\r\n                                  <img style={{height:'100%', width:'100%', objectFit:'cover'}}\r\n                                   src={question.images}\r\n                                    alt={\"file\"} />\r\n                                </Card.Body>\r\n                              </Card>\r\n                              }\r\n                            </Card.Body>\r\n                          </Card>\r\n                          {question.sub_question?.length? <h4>SubQuestion</h4>:null}\r\n                          {\r\n                            //sub question start here\r\n                            \r\n                            question.sub_question?.map((ques, indexa) => {\r\n                              return (\r\n                                <div key={indexa}>\r\n                                  <Card\r\n                                    style={{\r\n                                      minHeight: \"100px\",\r\n                                      background: \"#e8edf8\",\r\n                                      boxShadow:\r\n                                        \" rgba(0, 0, 0, 0.3) 0px 0px 25px -5px\",\r\n                                    }}\r\n                                    className=\"question-card\"\r\n                                  >\r\n                                    <Card.Body>\r\n                                      <div\r\n                                        style={{ fontSize: \"19px\" }}\r\n                                        className=\"text-capitalize\"\r\n                                      >\r\n                                        {ques.text}\r\n                                      </div>\r\n                                      <div\r\n                                        className=\"text-capitalize \"\r\n                                        style={{\r\n                                          marginTop: \"18px\",\r\n                                        }}\r\n                                      >\r\n                                        {ques.question_type === \"YesNo\" ? (\r\n                                          <div>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              Yes\r\n                                            </span>\r\n\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              No\r\n                                            </span>\r\n                                          </div>\r\n                                        ) : ques.question_type ===\r\n                                          \"YesNONa\" ? (\r\n                                          <div>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              Yes\r\n                                            </span>\r\n\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              No\r\n                                            </span>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              NA\r\n                                            </span>\r\n                                          </div>\r\n                                        ) : ques.question_type === \"Long\" ||\r\n                                          ques.question_type === \"Short\" ? (\r\n                                          <div>\r\n                                            <textarea\r\n                                              className=\"form-control\"\r\n                                              style={{ height: \"70px\" }}\r\n                                              id=\"description\"\r\n                                              rows=\"3\"\r\n                                              placeholder=\"Enter Answer\"\r\n                                              value={\"\"}\r\n                                              onChange={\"\"}\r\n                                            ></textarea>\r\n                                          </div>\r\n                                        ) : ques.question_type ===\r\n                                          \"Number\" ? (\r\n                                          <div className=\"d-flex \">\r\n                                            <button\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                              className=\"btn btn-sm btn-success mr-4\"\r\n                                              onClick={decreaseNumber}\r\n                                            >\r\n                                              -\r\n                                            </button>\r\n                                            <input\r\n                                              className=\"text-align-center\"\r\n                                              style={{\r\n                                                textAlign: \"center\",\r\n                                                width: \"67px\",\r\n                                              }}\r\n                                              type=\"number\"\r\n                                              value={number}\r\n                                              onChange={(e) =>\r\n                                                setNumber(\r\n                                                  parseInt(e.target.value)\r\n                                                )\r\n                                              }\r\n                                            />\r\n                                            <button\r\n                                              style={{ marginLeft: \"12px\" }}\r\n                                              className=\"btn btn-sm btn-success ml-4\"\r\n                                              onClick={increaseNumber}\r\n                                            >\r\n                                              +\r\n                                            </button>\r\n                                          </div>\r\n                                        ) : ques.question_type ===\r\n                                          \"Signature\" ? (\r\n                                          <div>\r\n                                            signature\r\n                                          </div>\r\n                                        ) : null}\r\n\r\n                    {/* option for mcq and checkbox */}\r\n\r\n                                        {ques.options.length > 0\r\n                                          ? ques.options.map(\r\n                                              (ans, ansIndex) => {\r\n                                                return (\r\n                                                  <div\r\n                                                    className=\"d-inline mr-3\"\r\n                                                    style={{\r\n                                                      marginRight: \"12px\",\r\n                                                    }}\r\n                                                  >\r\n                                                    {ques.question_type ===\r\n                                                      \"CheckBox\" ||\r\n                                                    ques.question_type ===\r\n                                                      \"mcq\" ? (\r\n                                                      <div>\r\n                                                        <input\r\n                                                          type=\"radio\"\r\n                                                          name={index}\r\n                                                        />\r\n                                                        <span\r\n                                                          key={ansIndex}\r\n                                                          className=\"text-capitalize \"\r\n                                                        >\r\n                                                          {ans.text}\r\n                                                        </span>\r\n                                                      </div>\r\n                                                    ) : null}\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          : \"no options\"}\r\n                                      </div>\r\n\r\n\r\n                                      <div className=\"row mb-4\">\r\n                                        {question.images?.map(\r\n                                          (image, index) => {\r\n                                            return (\r\n                                              <div className=\"col-4 mb-3\">\r\n                                                <Card>\r\n                                                  <Card.Body>\r\n                                                    <div\r\n                                                      className=\"d-flex justify-content-between\"\r\n                                                      key={index}\r\n                                                    >\r\n                                                      <div\r\n                                                        style={{\r\n                                                          overflow: \"hidden\",\r\n                                                          height: \"240px\",\r\n                                                        }}\r\n                                                        className=\"d-flex justify-content-around\"\r\n                                                      >\r\n                                                        <img\r\n                                                          src={image.link}\r\n                                                          alt={image.name}\r\n                                                        />\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  </Card.Body>\r\n                                                </Card>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        )}\r\n                                      </div>\r\n\r\n                                      <div className=\"d-flex justify-content-end\">\r\n                                        <span\r\n                                          onClick={(e) =>\r\n                                            handleDeleteSubQuestion(e, question.id, index)\r\n                                          }\r\n                                        >\r\n                                          <Delete />{\" \"}\r\n                                        </span>\r\n                                      </div>\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          }\r\n                          {/* {question.options.find((i) => i.sub_question) && <span>Sub Question for {index+1}</span>} */}\r\n\r\n\r\n                          {question.options.map((option,indexb)=>{\r\n                            // subquestion 4 option start here\r\n                            return <>\r\n                              { option.sub_question &&\r\n                                <div className=\"mt-3\" key={indexb} style={{transform:\"scale(.9)\"}}>\r\n                                  <Card\r\n                                    style={{\r\n                                      minHeight: \"70px\",\r\n                                      background: \"#ffdada\",\r\n                                      boxShadow:\r\n                                        \" rgba(0, 0, 0, 0.3) 0px 0px 25px -5px\",\r\n                                    }}\r\n                                    className=\"question-card\"\r\n                                  >\r\n                                  {/* subquestion body */}\r\n                                    <Card.Body>\r\n                                      <div\r\n                                        style={{ fontSize: \"19px\" }}\r\n                                        className=\"text-capitalize\"\r\n                                      >\r\n                                        Q{index+1}{String.fromCharCode(97 + count++)}. {option.sub_question.text}\r\n                                      </div>\r\n                                      <div\r\n                                        className=\"text-capitalize \"\r\n                                        style={{\r\n                                          marginTop: \"18px\",\r\n                                        }}\r\n                                      >\r\n                                        {option.sub_question.question_type === \"YesNo\" ? (\r\n                                          <div>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              Yes\r\n                                            </span>\r\n\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              No\r\n                                            </span>\r\n                                          </div>\r\n                                        ) : option.sub_question.question_type ===\r\n                                          \"YesNONa\" ? (\r\n                                          <div>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              Yes\r\n                                            </span>\r\n\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              No\r\n                                            </span>\r\n                                            <input\r\n                                              className=\"mr-4\"\r\n                                              type=\"radio\"\r\n                                              name={index}\r\n                                            />\r\n                                            <span\r\n                                              className=\"text-capitalize \"\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                            >\r\n                                              NA\r\n                                            </span>\r\n                                          </div>\r\n                                        ) : option.sub_question.question_type === \"Long\" ||\r\n                                        option.sub_question.question_type === \"Short\" ? (\r\n                                          <div>\r\n                                            <textarea\r\n                                              className=\"form-control\"\r\n                                              style={{ height: \"70px\" }}\r\n                                              id=\"description\"\r\n                                              rows=\"3\"\r\n                                              placeholder=\"Enter Answer\"\r\n                                              value={\"\"}\r\n                                              // onChange={\"\"}\r\n                                            ></textarea>\r\n                                          </div>\r\n                                        ) : option.sub_question.question_type ===\r\n                                          \"Number\" ? (\r\n                                          <div className=\"d-flex \">\r\n                                            <button\r\n                                              style={{ marginRight: \"12px\" }}\r\n                                              className=\"btn btn-sm btn-success mr-4\"\r\n                                              onClick={decreaseNumber}\r\n                                            >\r\n                                              -\r\n                                            </button>\r\n                                            <input\r\n                                              className=\"text-align-center\"\r\n                                              style={{\r\n                                                textAlign: \"center\",\r\n                                                width: \"67px\",\r\n                                              }}\r\n                                              type=\"number\"\r\n                                              value={number}\r\n                                              onChange={(e) =>\r\n                                                setNumber(\r\n                                                  parseInt(e.target.value)\r\n                                                )\r\n                                              }\r\n                                            />\r\n                                            <button\r\n                                              style={{ marginLeft: \"12px\" }}\r\n                                              className=\"btn btn-sm btn-success ml-4\"\r\n                                              onClick={increaseNumber}\r\n                                            >\r\n                                              +\r\n                                            </button>\r\n                                          </div>\r\n                                        ) : option.sub_question.question_type ===\r\n                                          \"Date\" ? (\r\n                                          <div>\r\n                                            <label htmlFor=\"dateInput\">\r\n                                              Select a date:\r\n                                            </label>\r\n                                            <input\r\n                                              type=\"date\"\r\n                                              id=\"dateInput\"\r\n                                              value={selectedDate}\r\n                                              onChange={handleDateChange}\r\n                                            />\r\n                                          </div>\r\n                                        ) : null}\r\n                                        {option.sub_question.options.length > 0\r\n                                          ? option.sub_question.options.map(\r\n                                              (ans, ansIndex) => {\r\n                                                return (\r\n                                                  <div\r\n                                                    className=\"d-inline mr-3\"\r\n                                                    style={{\r\n                                                      marginRight: \"12px\",\r\n                                                    }}\r\n                                                  >\r\n                                                    {option.sub_question.question_type ===\r\n                                                      \"CheckBox\" ||\r\n                                                      option.sub_question.question_type ===\r\n                                                      \"mcq\" ? (\r\n                                                      <div>\r\n                                                        <input\r\n                                                          type=\"radio\"\r\n                                                          name={index}\r\n                                                        />\r\n                                                        <span\r\n                                                          key={ansIndex}\r\n                                                          className=\"text-capitalize \"\r\n                                                        >\r\n                                                          {ans.text}\r\n                                                        </span>\r\n                                                      </div>\r\n                                                    ) : null}\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          : \"no answer\"}\r\n                                      </div>\r\n\r\n                                    {option?.sub_question?.images && \r\n                                      <Card onClick={()=>window.location.href = option?.sub_question.images} style={{width:\"500px\" , height:'200px', cursor:'pointer'}}>\r\n                                        <Card.Body style={{height:'100%'}}>\r\n                                          <img style={{height:'100%', width:'100%', objectFit:'cover'}} src={option?.sub_question.images} alt={\"files\"} />\r\n                                        </Card.Body>\r\n                                      </Card>\r\n                                     }\r\n\r\n                                      <div className=\"d-flex justify-content-end\">\r\n                                        <span\r\n                                          onClick={(e) =>\r\n                                            handleDeleteSubQuestion4option(e, question.id, indexb)\r\n                                          }\r\n                                        >\r\n                                          <Delete />{\" \"}\r\n                                        </span>\r\n                                      </div>\r\n                                      \r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                 </div>\r\n                              }\r\n                            </>\r\n                          })}\r\n                        </div>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <div>No questions</div>\r\n                )}\r\n\r\n                <Offcanvas\r\n        style={{ width: \"825px\" }}\r\n        show={show}\r\n        onHide={handleClose}\r\n        placement=\"end\"\r\n      >\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>\r\n            <h4>\r\n              {isedit\r\n                ? \"Edit Question\"\r\n                : isSubQuesttion\r\n                ? \"Add Sub-Question\"\r\n                : isSubQuesttion4option\r\n                ?\"Add Sub-Question for Option\"\r\n                : \"Add Question\"}\r\n            </h4>\r\n          </Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body style={{ width: \"100%\" }}>\r\n          <div className=\"container\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                if (isedit) {\r\n                  handleEdit(e, questionId, editQuestionType);\r\n                } else if (isSubQuesttion) {\r\n                  handleSubQuestion(e, questionId, editQuestionType);\r\n                } \r\n                  else if(isSubQuesttion4option){\r\n                    handleSubQuesttion4option(e, questionId, editQuestionType, index);\r\n                  }\r\n                  else {\r\n                  handleSubmit(e, editQuestionType);\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\" row rounded-3 p-2 mb-3\"\r\n                  style={{\r\n                    background: \"#ffd3b624\",\r\n                  }}\r\n                >\r\n                  {!isSubQuesttion ? (\r\n                    <div className=\"form-group mb-3 col-6\">\r\n                      <h6 htmlFor=\"category\">Category * :</h6>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        id=\"category\"\r\n                        value={\r\n                          editSelectedCategoryId ? editSelectedCategoryId : \"\"\r\n                        }\r\n                        onChange={(e) => {\r\n                          const categoryId = e.target.value;\r\n                          setEditSelectedCategoryId(categoryId);\r\n                          const selectedCategory = category.find(\r\n                            (option) => option.id === parseInt(categoryId)\r\n                          );\r\n                          setEditSelectedCategory(\r\n                            selectedCategory ? selectedCategory.title : \"\"\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"\">{\"Select Category\"}</option>\r\n                        {category.map((option) => (\r\n                          <option key={option.id} value={option.id}>\r\n                            {option.title}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  ) : null}\r\n                  {\r\n                    <div className=\"form-group col-6\">\r\n                      <h6 htmlFor=\"questionType\">Question Type *:</h6>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        id=\"questionType\"\r\n                        value={editQuestionType}\r\n                        onChange={(e) => {\r\n                          setEditQuestionType(e.target.value);\r\n                          handleSelection(e);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Question Type *</option>\r\n\r\n                        <option value=\"YesNONa\">Yes No Na</option>\r\n                        <option value=\"YesNo\">Yes No</option>\r\n\r\n                        <option value=\"mcq\">Multiple Choice</option>\r\n                        <option value=\"CheckBox\">Check Box</option>\r\n                        <option value=\"Number\">Number</option>\r\n                        <option value=\"Long\">Long Text</option>\r\n                        <option value=\"Short\">Short Text</option>\r\n                        <option value=\"Date\">Date</option>\r\n                        <option value=\"Time\">Time</option>\r\n                        <option value=\"Upload\">Upload</option>\r\n                        <option value=\"Signature\">Signature</option>\r\n                      </select>\r\n                    </div>\r\n                  }\r\n                  <div className=\"form-group col-12 mb-3\">\r\n                    <h6 htmlFor=\"text\">Question * :</h6>\r\n                    <MyCKEditor content={editText} setContent={setEditText} placeholder=\"Content goes here...\" />\r\n\r\n                  </div>\r\n                  <div className=\"form-group col-12 mb-4\">\r\n                    <h6 htmlFor=\"description\">Description:</h6>\r\n                    \r\n                    <MyCKEditor content={editDescription} setContent={setEditDescription} placeholder=\"Content goes here...\" />\r\n                  </div>\r\n                  <div className=\"col-7 mt-3 mb-3\">\r\n                    <button\r\n                      className=\"btn px-2 py-1 btn-outline-primary btn-sm mb-3\"\r\n                      onClick={uploadButtonClickHandler}\r\n                    >\r\n                      Upload Image \r\n                    </button>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"img\"\r\n                      name=\"files[]\"\r\n                      accept=\".png, .jpg, .jpeg\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={filechangeHandler}\r\n                    />\r\n                    {img && (\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <div\r\n                              style={{ overflow: \"hidden\", height: \"53px\" }}\r\n                              className=\"d-flex justify-content-around\"\r\n                            >\r\n                              <img\r\n                                src={img}\r\n                                alt={images.name}\r\n                                style={{ height: \"50px\" }}\r\n                              />\r\n                              <p\r\n                                style={{\r\n                                  margin: \"0 0 0 12px\",\r\n                                  overflow: \"hidden\",\r\n                                  textOverflow: \"ellipsis\",\r\n                                  whiteSpace: \"nowrap\",\r\n                                  maxWidth: \"350px\",\r\n                                }}\r\n                              >\r\n                                {images?.name?.length > 28\r\n                                  ? `${images.name.substring(0, 28)}...`\r\n                                  : images.name}\r\n                              </p>\r\n                            </div>\r\n                            <div>\r\n                              <button\r\n                                style={{}}\r\n                                className=\"ml-3 px-2 py-1  btn btn-outline-danger btn-sm\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  deleteImage();\r\n                                }}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"card mb-4 border-0 rounded-3\"\r\n                  style={{\r\n                    background: \"#0003ff14\",\r\n                  }}\r\n                >\r\n                  <h6 className=\"mb-2 mt-3\">Add Canvas Modal :</h6>\r\n                  <div className=\"form-group card-body \">\r\n                    <div>\r\n                      {formData.map((data, index) => (\r\n                        <Card className=\"mb-4\">\r\n                          <Card.Body>\r\n                            <div key={index} className=\"row\">\r\n                              <div className=\"col-6 mb-4\">\r\n                                <button\r\n                                  className=\"btn px-2 py-1 btn-outline-primary btn-sm\"\r\n                                  onClick={(e) =>\r\n                                    uploadButtonClickHandlerIndex(index, e)\r\n                                  }\r\n                                >\r\n                                  upload image\r\n                                </button>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id={`img${index}jod`}\r\n                                  name=\"files[]\"\r\n                                  accept=\".png, .jpg, .jpeg\"\r\n                                  style={{ display: \"none\" }}\r\n                                  onChange={(e) => {\r\n                                    filechangeHandlerDescModal(index, e);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              {formData[index].img && (\r\n                                <div className=\"col-6\">\r\n                                  <img src={formData[index].img} alt={\"img\"} />\r\n                                </div>\r\n                              )}\r\n                              <div className=\"col-12 mb-4\">\r\n                                <textarea\r\n                                  className=\"form-control\"\r\n                                  name=\"description\"\r\n                                  value={data.description}\r\n                                  onChange={(e) => handleInputChange(index, e)}\r\n                                  style={{\r\n                                    resize: \"none\",\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-5\">\r\n                                {formData.length > 1 && (\r\n                                  <button\r\n                                    className=\"btn px-2 py-1 btn-outline-danger btn-sm\"\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      handleRemoveInput(index);\r\n                                    }}\r\n                                  >\r\n                                    Remove\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      ))}\r\n\r\n                      <button\r\n                        className=\"btn px-2 py-1 btn-outline-success btn-sm\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleAddInput();\r\n                        }}\r\n                      >\r\n                        Add More\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group col-3\">\r\n                                        <h6 htmlFor=\"mediaType\">Media Type:</h6>\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control\"\r\n                                          id=\"mediaType\"\r\n                                          placeholder=\"Enter media type\"\r\n                                          value={editMediaType}\r\n                                          onChange={(e) => setEditMediaType(e.target.value)}\r\n                                        />\r\n                                      </div> */}\r\n                <div\r\n                  className=\"card border-0 rounded-3 mb-3\"\r\n                  style={{ background: \"#ff8a8a33\" }}\r\n                >\r\n                  <div className=\"card-body\">\r\n                    <div className=\" mt-4 d-flex justify-content-around align-item-center form-group col-12 \">\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          style={{ transform: \"scale(0.8)\" }}\r\n                          id=\"toggleSwitch\"\r\n                          checked={editRequired}\r\n                          onChange={() => seteditRequired(!editRequired)}\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Mandatory Question\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editcommentRequired}\r\n                          onChange={() =>\r\n                            seteditcommentRequired(!editcommentRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Comment Required\r\n                        </span>\r\n                      </div>\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editImageRequired}\r\n                          onChange={() =>\r\n                            seteditImageRequired(!editImageRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Image Required\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editfileRequired}\r\n                          onChange={() =>\r\n                            seteditfileRequired(!editfileRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Files Required\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-6 d-flex\">\r\n                        {editImageRequired ? (\r\n                          <input\r\n                            type=\"Number\"\r\n                            className=\"form-control\"\r\n                            id=\"maxFile\"\r\n                            placeholder=\"Max Image\"\r\n                            value={editmaxfile}\r\n                            onChange={(e) => seteditmaxfile(e.target.value)}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {editfileRequired ? (\r\n                          <input\r\n                            type=\"Number\"\r\n                            className=\"form-control\"\r\n                            id=\"maxFile\"\r\n                            placeholder=\"Max File\"\r\n                            value={editmaximage}\r\n                            onChange={(e) => seteditmaximage(e.target.value)}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* option start here */}\r\n                {/* options for mcq and checkbox */}\r\n                {(editQuestionType && editQuestionType === \"mcq\") ||\r\n                (editQuestionType && editQuestionType === \"CheckBox\") ? (\r\n                  <div className=\"form-group col-12\">\r\n                    <h6>Options:</h6>\r\n\r\n                    {options.map((option, index) => (\r\n                      <Card className=\"mb-3\" style={{ background: \"#f1f1ff\" }}>\r\n                        <Card.Body>\r\n                          <div key={index} className=\"row align-items-center\">\r\n                            <div className=\"col-8\">\r\n                              <input\r\n                                placeholder=\"Enter Options\"\r\n                                className=\"form-control mb-3\"\r\n                                type=\"text\"\r\n                                value={option.text}\r\n                                onChange={(event) =>\r\n                                  handleOptionChange(index, event.target.value)\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-1 \">\r\n                              <label>\r\n                                <Form.Check\r\n                                  type={\"checkbox\"}\r\n                                  checked={option.correct}\r\n                                  onChange={(event) =>\r\n                                    handleCorrectChange(\r\n                                      index,\r\n                                      event.target.checked\r\n                                    )\r\n                                  }\r\n                                />\r\n                                Correct\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                              <input\r\n                                className=\"form-control mb-3\"\r\n                                placeholder=\"Enter Score\"\r\n                                type=\"number\"\r\n                                value={option.score}\r\n                                onChange={(event) =>\r\n                                  handleScoreChange(index, event.target.value)\r\n                                }\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"col-8\">\r\n                              <textarea\r\n                                style={{\r\n                                  height: \"45px\",\r\n                                }}\r\n                                className=\"form-control mb-3\"\r\n                                id=\"description\"\r\n                                rows=\"5\"\r\n                                placeholder=\"Enter Risk\"\r\n                                value={option.riskText}\r\n                                onChange={(e) =>\r\n                                  handleRishTxtChange(index, e.target.value)\r\n                                }\r\n                              ></textarea>\r\n                            </div>\r\n\r\n                            {index > 0 ? (\r\n                              <div className=\"col-1\">\r\n                                <button\r\n                                  className=\"btn btn-sm btn-primary\"\r\n                                  type=\"button\"\r\n                                  onClick={() => handleRemoveOption(index)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ))}\r\n                    <button\r\n                      className=\"btn btn-sm btn-primary mt-2 mb-3\"\r\n                      type=\"button\"\r\n                      onClick={handleAddOption}\r\n                    >\r\n                      Add Option\r\n                    </button>\r\n                  </div>\r\n                ) : (editQuestionType && editQuestionType === \"YesNo\") ||\r\n                  (editQuestionType && editQuestionType === \"YesNONa\") ? (\r\n                  <div className=\"col-12\">\r\n                    <h6>Options:</h6>\r\n\r\n                    {options.length > 0\r\n                      ? options.map((option, index) => {\r\n                          return (\r\n                            <Card\r\n                              className=\"mb-3\"\r\n                              style={{ background: \"#f1f1ff\" }}\r\n                            >\r\n                              <Card.Body>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-8\">\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      readOnly\r\n                                      type=\"text\"\r\n                                      value={option.text}\r\n                                      onChange={(event) =>\r\n                                        handleOptionChange(\r\n                                          index,\r\n                                          event.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-1 \">\r\n                                    <label>\r\n                                      <Form.Check\r\n                                        type={\"checkbox\"}\r\n                                        checked={option.correct}\r\n                                        onChange={(event) =>\r\n                                          handleCorrectChange(\r\n                                            index,\r\n                                            event.target.checked\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      Correct\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"col-3 mb-3\">\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"number\"\r\n                                      placeholder=\"Enter Score\"\r\n                                      value={option.score}\r\n                                      onChange={(event) => {\r\n                                        handleScoreChange(\r\n                                          index,\r\n                                          event.target.value\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-12 \">\r\n                                    <textarea\r\n                                      style={{\r\n                                        height: \"45px\",\r\n                                      }}\r\n                                      className=\"form-control\"\r\n                                      id=\"description\"\r\n                                      rows=\"3\"\r\n                                      placeholder=\"Enter Risk\"\r\n                                      value={option.riskText}\r\n                                      onChange={(e) =>\r\n                                        handleRishTxtChange(\r\n                                          index,\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    ></textarea>\r\n                                  </div>\r\n                                </div>\r\n                              </Card.Body>\r\n                            </Card>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </div>\r\n                ) : editQuestionType && editQuestionType === \"Number\" ? (\r\n                  <div className=\"col-12\">\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <div>\r\n                          <h5>Data Validation</h5>\r\n                        </div>\r\n                        <div className=\"row justify-content-between\">\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel\r\n                              label=\"Minimum Number\"\r\n                              className=\"mb-3\"\r\n                            >\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Minimum Number\"\r\n                                onChange={(e) => {\r\n                                  handleNumberChange(0, e.target.value);\r\n                                  // setMinNumber(e.target.value)\r\n                                  // console.log(e.target.value)\r\n                                }}\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel label=\"Maximum Number\">\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Maximum Number\"\r\n                                onChange={(e) =>\r\n                                  handleNumberChange(1, e.target.value)\r\n                                }\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel label=\"Score\">\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Score\"\r\n                                onChange={(e) => {\r\n                                  handleScoreChange(0, e.target.value);\r\n                                  handleScoreChange(1, e.target.value);\r\n                                }}\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                ) : (editQuestionType && editQuestionType === \"Long\") ||\r\n                  (editQuestionType && editQuestionType === \"Short\") ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-5\">\r\n                      {/* continue adding long and short here */}\r\n                      <FloatingLabel label=\"Score\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          placeholder=\"Score\"\r\n                          onChange={(e) => {\r\n                            handleScoreChange(0, e.target.value);\r\n                            // handleScoreChange(1,e.target.value)\r\n                          }}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </div>\r\n                  </div>\r\n                ) : editQuestionType && editQuestionType === \"Signature\" ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-5\">\r\n                      {/* continue adding long and short here */}\r\n                      <FloatingLabel label=\"Score\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          placeholder=\"Score\"\r\n                          onChange={(e) => {\r\n                            handleScoreChange(0, e.target.value);\r\n                            // handleScoreChange(1,e.target.value)\r\n                          }}\r\n                        />\r\n                      </FloatingLabel> \r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"form p-2 group col-12 rounded-3 border-0 \" style={{\r\n                  background:'#d3d3d34a'\r\n                }}>\r\n                  <h6 htmlFor=\"hint\">Hint:</h6>\r\n                  \r\n                    <MyCKEditor content={editHint} setContent={setEditHint} placeholder=\"Content goes here...\" />\r\n\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"col-9\"></div>\r\n                <button\r\n                  type=\"submit \"\r\n                  className=\"btn btn-sm btn-success mt-4 col-3\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n              </div>\r\n  )\r\n}\r\n\r\nexport default QuestionCard\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, FloatingLabel, Form, Spinner } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport QuestionCard from \"../components/QuestionCard\";\r\nimport { apiAuth, apiJson } from \"api\";\r\nimport MyCKEditor from \"utils/CKEditor\";\r\nconst AdminComplianceQuestion = () => {\r\n  let { id } = useParams();\r\n  const [options, setOptions] = useState([\"\"]);\r\n  const [questionArray, setQuestionArray] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n\r\n  // Duplicates with \"edit\" prefix\r\n  const [editDescription, setEditDescription] = useState(\"\");\r\n  const [editQuestionType, setEditQuestionType] = useState(\"\");\r\n  const [editHint, setEditHint] = useState(\"\");\r\n  const [editText, setEditText] = useState(\"\");\r\n\r\n  const [editSelectedCategory, setEditSelectedCategory] = useState(\"\");\r\n  const [editSelectedCategoryId, setEditSelectedCategoryId] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [editRequired, seteditRequired] = useState(false);\r\n  const [editImageRequired, seteditImageRequired] = useState(false);\r\n  const [editcommentRequired, seteditcommentRequired] = useState(false);\r\n  const [editfileRequired, seteditfileRequired] = useState(false);\r\n  const [editmaxfile, seteditmaxfile] = useState(null);\r\n  const [editmaximage, seteditmaximage] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n  const [img, setImg] = useState(null);\r\n  const [isSubQuesttion, setisSubQuesttion] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [formData, setFormData] = useState([{ img: \"\", description: \"\" }]);\r\n\r\n  const handleInputChange = (index, event) => {\r\n    const { name, value } = event.target;\r\n    const updatedData = [...formData];\r\n    updatedData[index] = { ...updatedData[index], [name]: value };\r\n    setFormData(updatedData);\r\n  };\r\n\r\n  const handleAddInput = () => {\r\n    setFormData([...formData, { img: \"\", description: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveInput = (index) => {\r\n    const updatedData = [...formData];\r\n    updatedData.splice(index, 1);\r\n    setFormData(updatedData);\r\n  };\r\n\r\n  const handleSubmit = async (e, questionTypes) => {\r\n    e.preventDefault();\r\n    if (!editSelectedCategory || !editSelectedCategoryId) {\r\n      toast.dismiss();\r\n      toast.error(\"You have to Select Category\");\r\n      return;\r\n    }\r\n\r\n    if (!editText) {\r\n      toast.dismiss();\r\n      toast.error(\"You have to Write Question\");\r\n      return;\r\n    }\r\n\r\n    const isCorrect = options.find((i) => i.correct === true);\r\n    if (\r\n      !isCorrect &&\r\n      (questionTypes === \"CheckBox\" || questionTypes === \"mcq\")\r\n    ) {\r\n      toast.dismiss();\r\n      toast.error(\"At least Choose 1 Correct Answer\");\r\n      return;\r\n    }\r\n\r\n    if (questionTypes === \"CheckBox\" || questionTypes === \"mcq\") {\r\n      const checkEmpty = options.find((i) => i.text === \"\");\r\n      if (checkEmpty) {\r\n        toast.dismiss();\r\n        toast.error(\"Can't send Blank Option\");\r\n        return;\r\n      }\r\n      if (options.length < 2) {\r\n        toast.dismiss();\r\n        toast.error(\"Add at least 2 options\");\r\n        return;\r\n      }\r\n    }\r\n    const data = {\r\n      complianceId: id,\r\n      text: editText,\r\n      description: editDescription,\r\n      question_type: editQuestionType,\r\n      // media_type: editMediaType,\r\n      options: options,\r\n      category: editSelectedCategory,\r\n      categoryId: editSelectedCategoryId,\r\n      hint: editHint,\r\n      images_required: editImageRequired,\r\n      comment_required: editcommentRequired,\r\n      required: editRequired,\r\n      image_max: editmaximage,\r\n      files_required: false,\r\n      file_max: editmaxfile,\r\n      images: img,\r\n      desc_modal: formData,\r\n      // img:img,},\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await apiJson.post(\"admin/compliance_question\", data);\r\n      // console.log('question created:', response.data.result);\r\n      setEditText(\"\");\r\n      setEditQuestionType(\"\");\r\n      toast.success(\"created successfully\");\r\n      // setEditMediaType(\"\");\r\n      setEditHint(\"\");\r\n      seteditImageRequired(false);\r\n      seteditcommentRequired(false);\r\n      seteditRequired(false);\r\n      getAllQuestionByCompliance();\r\n      handleClose();\r\n      clearDataOffcanvas();\r\n      setOptions([]);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Error creating compliance:\", error);\r\n    }\r\n  };\r\n\r\n  const filechangeHandler = (event) => {\r\n    apiAuth\r\n      .post(\"/admin/temp\", { img: event.target.files[0] })\r\n      .then((res) => {\r\n        setImg(res.data?.file?.Location);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    const file = event.target.files[0];\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setImages({...images,\r\n      file: file,\r\n      name: file.name,\r\n      link: imageUrl,\r\n    });\r\n\r\n    // setImages((prevImages) => [...prevImages, ...newImages]);\r\n  };\r\n\r\n  const filechangeHandlerDescModal = async (index, event) => {\r\n    const file = event.target.files[0];\r\n    try {\r\n      const res = await apiAuth.post(\"/admin/temp\", { img: file });\r\n      const updatedData = [...formData];\r\n      updatedData[index] = {\r\n        ...updatedData[index],\r\n        img: res.data?.file?.Location,\r\n      };\r\n      setFormData(updatedData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    // setImages((prevImages) => [...prevImages, ...newImages]);\r\n  };\r\n\r\n  const deleteImage = (index) => {\r\n    setImg('')\r\n  };\r\n\r\n  //   const file = event.target.files[0];\r\n  //   setImage(file);\r\n\r\n  //   if (file) {\r\n  //     convertToLink(file);\r\n  //   }\r\n  // };\r\n\r\n  // const convertToLink = (file) => {\r\n  //   const imageUrl = URL.createObjectURL(file);\r\n  //   setImageLink(imageUrl);\r\n  // };\r\n\r\n  const uploadButtonClickHandler = (event) => {\r\n    event.preventDefault();\r\n    document.getElementById(\"img\").click();\r\n  };\r\n  const uploadButtonClickHandlerIndex = (index, event) => {\r\n    event.preventDefault();\r\n    document.getElementById(`img${index}jod`).click();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    clearDataOffcanvas();\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    setOptions((prevOptions) => {\r\n      const updatedOptions = [...prevOptions];\r\n      updatedOptions[index] = {\r\n        ...updatedOptions[index],\r\n        text: value,\r\n        risk: false,\r\n        riskText: \"\",\r\n        score: 0,\r\n      };\r\n      return updatedOptions;\r\n    });\r\n  };\r\n  const handleScoreChange = (index, value) => {\r\n    setOptions((prevOptions) => {\r\n      const updatedOptions = [...prevOptions];\r\n      updatedOptions[index] = {\r\n        ...updatedOptions[index],\r\n        score: value,\r\n      };\r\n      // console.log(\"updated option\", updatedOptions, value);\r\n      return updatedOptions;\r\n    });\r\n  };\r\n\r\n  const handleNumberChange = (index, value) => {\r\n    setOptions((prevOptions) => {\r\n      const updatedOptions = [...prevOptions];\r\n      updatedOptions[index] = {\r\n        ...updatedOptions[index],\r\n        value: value,\r\n      };\r\n      return updatedOptions;\r\n    });\r\n  };\r\n  const handleRishTxtChange = (index, value) => {\r\n    setOptions((prevOptions) => {\r\n      const updatedOptions = [...prevOptions];\r\n      updatedOptions[index] = {\r\n        ...updatedOptions[index],\r\n        riskText: value,\r\n        risk: true,\r\n      };\r\n      return updatedOptions;\r\n    });\r\n  };\r\n\r\n  const handleCorrectChange = (index, isChecked) => {\r\n    setOptions((prevOptions) => {\r\n      const updatedOptions = [...prevOptions];\r\n      updatedOptions[index] = {\r\n        ...updatedOptions[index],\r\n        correct: isChecked,\r\n      };\r\n      return updatedOptions;\r\n    });\r\n  };\r\n  const handleAddOption = () => {\r\n    if (options.length > 0 && options[options.length - 1].text === \"\") {\r\n      return; // Don't add option if last option's text is empty\r\n    }\r\n    setOptions([...options, { text: \"\", correct: false }]);\r\n  };\r\n\r\n  const handleRemoveOption = (index) => {\r\n    const updatedOptions = [...options];\r\n    updatedOptions.splice(index, 1); // Remove option at the specified index\r\n    setOptions(updatedOptions);\r\n  };\r\n\r\n  const getAllQuestionByCompliance = () => {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_BASE_URL +\r\n          \"admin/compliance_question/compliance/\" +\r\n          id\r\n      )\r\n      .then((response) => {\r\n        // console.log(\"this is all question\", response.data.result);\r\n        setQuestionArray(response.data.result);\r\n      })\r\n      .catch(() => {\r\n        toast.dismiss();\r\n        toast.error(\"something went wrong\");\r\n      });\r\n  };\r\n\r\n  const getAllCategoriesByComplianceId = () => {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_BASE_URL +\r\n          \"admin/compliance_category/compliance/\" +\r\n          id\r\n      )\r\n      .then((response) => {\r\n        setCategory(response.data.result);\r\n      });\r\n  };\r\n\r\n  const clearDataOffcanvas = () => {\r\n    setEditDescription(\"\");\r\n    setEditText(\"\");\r\n    // toast.dismiss();\r\n    setEditQuestionType(\"\");\r\n    // setEditMediaType(\"\");\r\n    // Hide the modal\r\n    setEditHint(\"\");\r\n    setEditSelectedCategoryId(null);\r\n    seteditImageRequired(false);\r\n    seteditcommentRequired(false);\r\n    seteditRequired(false);\r\n    // handleClose()\r\n    setEditSelectedCategory(\"\");\r\n    setOptions([]);\r\n    seteditmaxfile(null);\r\n    seteditmaximage(null);\r\n    seteditfileRequired(false);\r\n    setisSubQuesttion(false);\r\n    // setisedit(false);\r\n    setImages(null);\r\n    // setisSubQuesttion4option(false);\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    if (e.target.value === \"YesNo\") {\r\n      setOptions([\r\n        { text: \"Yes\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n        { text: \"No\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n      ]);\r\n    } else if (e.target.value === \"YesNONa\") {\r\n      setOptions([\r\n        { text: \"Yes\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n        { text: \"No\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n        { text: \"NA\", correct: false, risk: false, riskText: \"\", score: 0 },\r\n      ]);\r\n    } else if (e.target.value === \"mcq\" || e.target.value === \"CheckBox\") {\r\n      setOptions([{ text: \"\", correct: false, risk: false, riskText: \"\" }]);\r\n    } else if (e.target.value === \"Number\") {\r\n      setOptions([\r\n        { text: \"Minimum\", value: 0, risk: false, riskText: \"\", score: 0 },\r\n        { text: \"Maximum\", value: 0, risk: false, riskText: \"\", score: 0 },\r\n      ]);\r\n    } else if (e.target.value === \"Long\" || e.target.value === \"Short\") {\r\n      setOptions([{ text: \"Long\", risk: false, riskText: \"\", score: 0 }]);\r\n    } else {\r\n      setOptions([{ text: \"\", risk: false, riskText: \"\", score: 0 }]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // fetchTemplateInfo();\r\n    getAllQuestionByCompliance();\r\n    getAllCategoriesByComplianceId();\r\n  }, []);\r\n  return (\r\n    <div style={{ margin: \"34px\" }}>\r\n      <button\r\n        className=\"btn btn-sm btn-primary\"\r\n        onClick={() => {\r\n          handleShow();\r\n          // refreshOffcanvasComponent()\r\n          // setisedit(false);\r\n\r\n          setisSubQuesttion(false);\r\n        }}\r\n      >\r\n        Add Question\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <div>\r\n        {category?.map((i) => (\r\n          <div>\r\n            {/* <hr /> */}\r\n            <h4>{i.title}</h4>\r\n            <hr></hr>\r\n            <div>\r\n              <QuestionCard\r\n                i={i}\r\n                questionArray={questionArray}\r\n                getAllQuestionByCompliance={getAllQuestionByCompliance}\r\n                id={id}\r\n              />\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Offcanvas\r\n        style={{ width: \"825px\" }}\r\n        show={show}\r\n        onHide={handleClose}\r\n        placement=\"end\"\r\n      >\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>\r\n            <h4>{\"Add Question\"}</h4>\r\n          </Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body style={{ width: \"100%\" }}>\r\n          <div className=\"container\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                // if (isedit) {\r\n                //   handleEdit(e, questionId, editQuestionType);\r\n                // } else if (isSubQuesttion) {\r\n                //   handleSubQuestion(e, questionId, editQuestionType);\r\n                // }\r\n                // else if(isSubQuesttion4option){\r\n                //   handleSubQuesttion4option(e, questionId, editQuestionType, index);\r\n                // }\r\n                // else {\r\n                handleSubmit(e, editQuestionType);\r\n                // }\r\n              }}\r\n            >\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\" row rounded-3 p-2 mb-3\"\r\n                  style={{\r\n                    background: \"#ffd3b624\",\r\n                  }}\r\n                >\r\n                  {!isSubQuesttion ? (\r\n                    <div className=\"form-group mb-3 col-6\">\r\n                      <h6 htmlFor=\"category\">Category * :</h6>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        id=\"category\"\r\n                        value={\r\n                          editSelectedCategoryId ? editSelectedCategoryId : \"\"\r\n                        }\r\n                        onChange={(e) => {\r\n                          const categoryId = e.target.value;\r\n                          setEditSelectedCategoryId(categoryId);\r\n                          const selectedCategory = category.find(\r\n                            (option) => option.id === parseInt(categoryId)\r\n                          );\r\n                          setEditSelectedCategory(\r\n                            selectedCategory ? selectedCategory.title : \"\"\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"\">{\"Select Category\"}</option>\r\n                        {category.map((option) => (\r\n                          <option key={option.id} value={option.id}>\r\n                            {option.title}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  ) : null}\r\n                  {\r\n                    <div className=\"form-group col-6\">\r\n                      <h6 htmlFor=\"questionType\">Question Type *:</h6>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        id=\"questionType\"\r\n                        value={editQuestionType}\r\n                        onChange={(e) => {\r\n                          setEditQuestionType(e.target.value);\r\n                          handleSelection(e);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Question Type *</option>\r\n\r\n                        <option value=\"YesNONa\">Yes No Na</option>\r\n                        <option value=\"YesNo\">Yes No</option>\r\n\r\n                        <option value=\"mcq\">Multiple Choice</option>\r\n                        <option value=\"CheckBox\">Check Box</option>\r\n                        <option value=\"Number\">Number</option>\r\n                        <option value=\"Long\">Long Text</option>\r\n                        <option value=\"Short\">Short Text</option>\r\n                        <option value=\"Date\">Date</option>\r\n                        <option value=\"Time\">Time</option>\r\n                        <option value=\"Upload\">Upload</option>\r\n                        <option value=\"Signature\">Signature</option>\r\n                      </select>\r\n                    </div>\r\n                  }\r\n                  <div className=\"form-group col-12 mb-3\">\r\n                    <h6 htmlFor=\"text\">Question * :</h6>\r\n                    <MyCKEditor content={editText} setContent={setEditText} placeholder=\"Content goes here...\" />\r\n\r\n                  </div>\r\n                  <div className=\"form-group col-12 mb-4\">\r\n                    <h6 htmlFor=\"description\">Description:</h6>\r\n                    \r\n                    <MyCKEditor content={editDescription} setContent={setEditDescription} placeholder=\"Content goes here...\" />\r\n                  </div>\r\n                  <div className=\"col-7 mt-3 mb-3\">\r\n                    <button\r\n                      className=\"btn px-2 py-1 btn-outline-primary btn-sm mb-3\"\r\n                      onClick={uploadButtonClickHandler}\r\n                    >\r\n                      Upload Image\r\n                    </button>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"img\"\r\n                      name=\"files[]\"\r\n                      accept=\".png, .jpg, .jpeg\"\r\n                      style={{ display: \"none\" }}\r\n                      onChange={filechangeHandler}\r\n                    />\r\n                    {img && (\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <div\r\n                              style={{ overflow: \"hidden\", height: \"53px\" }}\r\n                              className=\"d-flex justify-content-around\"\r\n                            >\r\n                              <img\r\n                                src={img}\r\n                                alt={images.name}\r\n                                style={{ height: \"50px\" }}\r\n                              />\r\n                              <p\r\n                                style={{\r\n                                  margin: \"0 0 0 12px\",\r\n                                  overflow: \"hidden\",\r\n                                  textOverflow: \"ellipsis\",\r\n                                  whiteSpace: \"nowrap\",\r\n                                  maxWidth: \"350px\",\r\n                                }}\r\n                              >\r\n                                {images?.name?.length > 28\r\n                                  ? `${images.name.substring(0, 28)}...`\r\n                                  : images.name}\r\n                              </p>\r\n                            </div>\r\n                            <div>\r\n                              <button\r\n                                style={{}}\r\n                                className=\"ml-3 px-2 py-1  btn btn-outline-danger btn-sm\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  deleteImage();\r\n                                }}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"card mb-4 border-0 rounded-3\"\r\n                  style={{\r\n                    background: \"#0003ff14\",\r\n                  }}\r\n                >\r\n                  <h6 className=\"mb-2 mt-3\">Add Canvas Modal :</h6>\r\n                  <div className=\"form-group card-body \">\r\n                    <div>\r\n                      {formData.map((data, index) => (\r\n                        <Card className=\"mb-4\">\r\n                          <Card.Body>\r\n                            <div key={index} className=\"row\">\r\n                              <div className=\"col-6 mb-4\">\r\n                                <button\r\n                                  className=\"btn px-2 py-1 btn-outline-primary btn-sm\"\r\n                                  onClick={(e) =>\r\n                                    uploadButtonClickHandlerIndex(index, e)\r\n                                  }\r\n                                >\r\n                                  upload image\r\n                                </button>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id={`img${index}jod`}\r\n                                  name=\"files[]\"\r\n                                  accept=\".png, .jpg, .jpeg\"\r\n                                  style={{ display: \"none\" }}\r\n                                  onChange={(e) => {\r\n                                    filechangeHandlerDescModal(index, e);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              {formData[index].img && (\r\n                                <div className=\"col-6\">\r\n                                  <img src={formData[index].img} alt={\"img\"} />\r\n                                </div>\r\n                              )}\r\n                              <div className=\"col-12 mb-4\">\r\n                                <textarea\r\n                                  className=\"form-control\"\r\n                                  name=\"description\"\r\n                                  value={data.description}\r\n                                  onChange={(e) => handleInputChange(index, e)}\r\n                                  style={{\r\n                                    resize: \"none\",\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-5\">\r\n                                {formData.length > 1 && (\r\n                                  <button\r\n                                    className=\"btn px-2 py-1 btn-outline-danger btn-sm\"\r\n                                    variant=\"danger\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      handleRemoveInput(index);\r\n                                    }}\r\n                                  >\r\n                                    Remove\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      ))}\r\n\r\n                      <button\r\n                        className=\"btn px-2 py-1 btn-outline-success btn-sm\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleAddInput();\r\n                        }}\r\n                      >\r\n                        Add More\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group col-3\">\r\n                                        <h6 htmlFor=\"mediaType\">Media Type:</h6>\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"form-control\"\r\n                                          id=\"mediaType\"\r\n                                          placeholder=\"Enter media type\"\r\n                                          value={editMediaType}\r\n                                          onChange={(e) => setEditMediaType(e.target.value)}\r\n                                        />\r\n                                      </div> */}\r\n                <div\r\n                  className=\"card border-0 rounded-3 mb-3\"\r\n                  style={{ background: \"#ff8a8a33\" }}\r\n                >\r\n                  <div className=\"card-body\">\r\n                    <div className=\" mt-4 d-flex justify-content-around align-item-center form-group col-12 \">\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          style={{ transform: \"scale(0.8)\" }}\r\n                          id=\"toggleSwitch\"\r\n                          checked={editRequired}\r\n                          onChange={() => seteditRequired(!editRequired)}\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Mandatory Question\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editcommentRequired}\r\n                          onChange={() =>\r\n                            seteditcommentRequired(!editcommentRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Comment Required\r\n                        </span>\r\n                      </div>\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editImageRequired}\r\n                          onChange={() =>\r\n                            seteditImageRequired(!editImageRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Image Required\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div style={{ transform: \"scale(0.8)\" }}>\r\n                        <Toggle\r\n                          id=\"toggleSwitch\"\r\n                          checked={editfileRequired}\r\n                          onChange={() =>\r\n                            seteditfileRequired(!editfileRequired)\r\n                          }\r\n                        />\r\n                        <span className=\"d-block\" htmlFor=\"toggleSwitch\">\r\n                          Files Required\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-6 d-flex\">\r\n                        {editImageRequired ? (\r\n                          <input\r\n                            type=\"Number\"\r\n                            className=\"form-control\"\r\n                            id=\"maxFile\"\r\n                            placeholder=\"Max Image\"\r\n                            value={editmaxfile}\r\n                            onChange={(e) => seteditmaxfile(e.target.value)}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {editfileRequired ? (\r\n                          <input\r\n                            type=\"Number\"\r\n                            className=\"form-control\"\r\n                            id=\"maxFile\"\r\n                            placeholder=\"Max File\"\r\n                            value={editmaximage}\r\n                            onChange={(e) => seteditmaximage(e.target.value)}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* option start here */}\r\n                {/* options for mcq and checkbox */}\r\n                {(editQuestionType && editQuestionType === \"mcq\") ||\r\n                (editQuestionType && editQuestionType === \"CheckBox\") ? (\r\n                  <div className=\"form-group col-12\">\r\n                    <h6>Options:</h6>\r\n\r\n                    {options.map((option, index) => (\r\n                      <Card className=\"mb-3\" style={{ background: \"#f1f1ff\" }}>\r\n                        <Card.Body>\r\n                          <div key={index} className=\"row align-items-center\">\r\n                            <div className=\"col-8\">\r\n                              <input\r\n                                placeholder=\"Enter Options\"\r\n                                className=\"form-control mb-3\"\r\n                                type=\"text\"\r\n                                value={option.text}\r\n                                onChange={(event) =>\r\n                                  handleOptionChange(index, event.target.value)\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-1 \">\r\n                              <label>\r\n                                <Form.Check\r\n                                  type={\"checkbox\"}\r\n                                  checked={option.correct}\r\n                                  onChange={(event) =>\r\n                                    handleCorrectChange(\r\n                                      index,\r\n                                      event.target.checked\r\n                                    )\r\n                                  }\r\n                                />\r\n                                Correct\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                              <input\r\n                                className=\"form-control mb-3\"\r\n                                placeholder=\"Enter Score\"\r\n                                type=\"number\"\r\n                                value={option.score}\r\n                                onChange={(event) =>\r\n                                  handleScoreChange(index, event.target.value)\r\n                                }\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"col-8\">\r\n                              <textarea\r\n                                style={{\r\n                                  height: \"45px\",\r\n                                }}\r\n                                className=\"form-control mb-3\"\r\n                                id=\"description\"\r\n                                rows=\"5\"\r\n                                placeholder=\"Enter Risk\"\r\n                                value={option.riskText}\r\n                                onChange={(e) =>\r\n                                  handleRishTxtChange(index, e.target.value)\r\n                                }\r\n                              ></textarea>\r\n                            </div>\r\n\r\n                            {index > 0 ? (\r\n                              <div className=\"col-1\">\r\n                                <button\r\n                                  className=\"btn btn-sm btn-primary\"\r\n                                  type=\"button\"\r\n                                  onClick={() => handleRemoveOption(index)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ))}\r\n                    <button\r\n                      className=\"btn btn-sm btn-primary mt-2 mb-3\"\r\n                      type=\"button\"\r\n                      onClick={handleAddOption}\r\n                    >\r\n                      Add Option\r\n                    </button>\r\n                  </div>\r\n                ) : (editQuestionType && editQuestionType === \"YesNo\") ||\r\n                  (editQuestionType && editQuestionType === \"YesNONa\") ? (\r\n                  <div className=\"col-12\">\r\n                    <h6>Options:</h6>\r\n\r\n                    {options.length > 0\r\n                      ? options.map((option, index) => {\r\n                          return (\r\n                            <Card\r\n                              className=\"mb-3\"\r\n                              style={{ background: \"#f1f1ff\" }}\r\n                            >\r\n                              <Card.Body>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-8\">\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      readOnly\r\n                                      type=\"text\"\r\n                                      value={option.text}\r\n                                      onChange={(event) =>\r\n                                        handleOptionChange(\r\n                                          index,\r\n                                          event.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-1 \">\r\n                                    <label>\r\n                                      <Form.Check\r\n                                        type={\"checkbox\"}\r\n                                        checked={option.correct}\r\n                                        onChange={(event) =>\r\n                                          handleCorrectChange(\r\n                                            index,\r\n                                            event.target.checked\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      Correct\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"col-3 mb-3\">\r\n                                    <input\r\n                                      className=\"form-control\"\r\n                                      type=\"number\"\r\n                                      placeholder=\"Enter Score\"\r\n                                      value={option.score}\r\n                                      onChange={(event) => {\r\n                                        handleScoreChange(\r\n                                          index,\r\n                                          event.target.value\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-12 \">\r\n                                    <textarea\r\n                                      style={{\r\n                                        height: \"45px\",\r\n                                      }}\r\n                                      className=\"form-control\"\r\n                                      id=\"description\"\r\n                                      rows=\"3\"\r\n                                      placeholder=\"Enter Risk\"\r\n                                      value={option.riskText}\r\n                                      onChange={(e) =>\r\n                                        handleRishTxtChange(\r\n                                          index,\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    ></textarea>\r\n                                  </div>\r\n                                </div>\r\n                              </Card.Body>\r\n                            </Card>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </div>\r\n                ) : editQuestionType && editQuestionType === \"Number\" ? (\r\n                  <div className=\"col-12\">\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <div>\r\n                          <h5>Data Validation</h5>\r\n                        </div>\r\n                        <div className=\"row justify-content-between\">\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel\r\n                              label=\"Minimum Number\"\r\n                              className=\"mb-3\"\r\n                            >\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Minimum Number\"\r\n                                onChange={(e) => {\r\n                                  handleNumberChange(0, e.target.value);\r\n                                  // setMinNumber(e.target.value)\r\n                                  // console.log(e.target.value)\r\n                                }}\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel label=\"Maximum Number\">\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Maximum Number\"\r\n                                onChange={(e) =>\r\n                                  handleNumberChange(1, e.target.value)\r\n                                }\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n                          <div className=\"col-5\">\r\n                            <FloatingLabel label=\"Score\">\r\n                              <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Score\"\r\n                                onChange={(e) => {\r\n                                  handleScoreChange(0, e.target.value);\r\n                                  handleScoreChange(1, e.target.value);\r\n                                }}\r\n                              />\r\n                            </FloatingLabel>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </div>\r\n                ) : (editQuestionType && editQuestionType === \"Long\") ||\r\n                  (editQuestionType && editQuestionType === \"Short\") ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-5\">\r\n                      {/* continue adding long and short here */}\r\n                      <FloatingLabel label=\"Score\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          placeholder=\"Score\"\r\n                          onChange={(e) => {\r\n                            handleScoreChange(0, e.target.value);\r\n                            // handleScoreChange(1,e.target.value)\r\n                          }}\r\n                        />\r\n                      </FloatingLabel>\r\n                    </div>\r\n                  </div>\r\n                ) : editQuestionType && editQuestionType === \"Signature\" ? (\r\n                  <div className=\"row mb-3\">\r\n                    <div className=\"col-5\">\r\n                      {/* continue adding long and short here */}\r\n                      <FloatingLabel label=\"Score\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          placeholder=\"Score\"\r\n                          onChange={(e) => {\r\n                            handleScoreChange(0, e.target.value);\r\n                            // handleScoreChange(1,e.target.value)\r\n                          }}\r\n                        />\r\n                      </FloatingLabel> \r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"form p-2 group col-12 rounded-3 border-0 \" style={{\r\n                  background:'#d3d3d34a'\r\n                }}>\r\n                  <h6 htmlFor=\"hint\">Hint:</h6>\r\n                  \r\n                    <MyCKEditor content={editHint} setContent={setEditHint} placeholder=\"Content goes here...\" />\r\n\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"col-9\"></div>\r\n                <button\r\n                  type=\"submit \"\r\n                  className=\"btn btn-sm btn-success mt-4 col-3\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          {isLoading && (\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n                zIndex: 9999,\r\n              }}\r\n              className=\"loader-overlay\"\r\n            >\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </div>\r\n          )}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminComplianceQuestion;\r\n"],"names":["Object","defineProperty","exports","value","obj","_react","require","_react2","__esModule","default","createElement","width","height","viewBox","d","fill","fillRule","_interopRequireDefault","_createSvgIcon","_jsxRuntime","jsx","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_classnames2","_propTypes2","_check2","_x2","_util","Toggle","_PureComponent","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleClick","bind","handleTouchStart","handleTouchMove","handleTouchEnd","handleFocus","handleBlur","previouslyChecked","checked","defaultChecked","state","hasFocus","subClass","superClass","create","constructor","setPrototypeOf","_inherits","prevProps","setState","event","disabled","checkbox","input","moved","preventDefault","focus","click","startX","pointerCoord","x","activated","currentX","endX","onFocus","onBlur","type","icons","undefined","defaultProps","_this2","_props","className","inputProps","keys","indexOf","_objectWithoutProperties","classes","onClick","onTouchStart","onTouchMove","onTouchEnd","getIcon","ref","_ref","PureComponent","displayName","unchecked","propTypes","bool","onChange","func","string","name","id","oneOfType","shape","node","createSvgIcon","_jsx","changedTouches","touch","clientX","y","clientY","pageX","pageY","content","setContent","children","CKEditor","editor","ClassicEditor","data","handleEditorChange","getData","isReactNative","global","navigator","product","document","useLayoutEffect","useEffect","matchersByWindow","WeakMap","getMatcher","query","targetWindow","matchers","get","Map","set","mql","matchMedia","refCount","media","useMediaQuery","window","matches","setMatches","useState","handleChange","addListener","removeListener","delete","breakpointValues","names","and","next","concat","getMaxQuery","breakpoint","Math","min","getNext","breakpointOrMap","direction","breakpointMap","useMemo","entries","reduce","getMinQuery","JSON","stringify","createBreakpointHook","xs","sm","md","lg","xl","xxl","_excluded","OffcanvasBody","React","bsPrefix","as","Component","useBootstrapPrefix","_objectSpread","classNames","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","in","inProp","mountOnEnter","unmountOnExit","appear","TransitionWrapper","addEndListener","transitionEndListener","childRef","getChildRef","status","innerProps","EXITING","OffcanvasHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH5","divWithClassName","OffcanvasTitle","DialogTransition","BackdropTransition","Fade","Offcanvas","ariaLabelledby","placement","responsive","show","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","renderStaticNode","modalManager","useRef","showOffcanvas","setShowOffcanvas","handleHide","useEventCallback","hideResponsiveOffcanvas","useBreakpoint","modalContext","renderBackdrop","useCallback","backdropProps","renderDialog","dialogProps","_jsxs","_Fragment","ModalContext","Provider","BaseModal","style","visibility","_len","args","Array","_key","_len2","_key2","current","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","Body","Header","Title","_images$name","questionArray","getAllQuestionByCompliance","options","setOptions","category","setCategory","selectedDate","setSelectedDate","editDescription","setEditDescription","editQuestionType","setEditQuestionType","editMediaType","setEditMediaType","editHint","setEditHint","editText","setEditText","editSelectedCategory","setEditSelectedCategory","editSelectedCategoryId","setEditSelectedCategoryId","setShow","questionId","setQuestionId","editRequired","seteditRequired","editImageRequired","seteditImageRequired","editcommentRequired","seteditcommentRequired","editfileRequired","seteditfileRequired","editmaxfile","seteditmaxfile","editmaximage","seteditmaximage","isedit","setisedit","number","setNumber","images","setImages","isSubQuesttion","setisSubQuesttion","isSubQuesttion4option","setisSubQuesttion4option","subQuestion","setSubQuestion","index","setIndex","img","setImg","formData","setFormData","description","handleDateChange","date","increaseNumber","decreaseNumber","handleClose","clearDataOffcanvas","handleShow","handleOptionChange","prevOptions","updatedOptions","text","risk","riskText","score","handleScoreChange","console","log","handleRishTxtChange","handleNumberChange","handleCorrectChange","isChecked","correct","getEditDataSubQues","q","categoryId","axios","process","then","response","result","filter","question","map","_question$sub_questio","_question$sub_questio2","count","Card","minHeight","background","boxShadow","dangerouslySetInnerHTML","__html","marginTop","marginBottom","question_type","marginRight","AddIcon","rows","placeholder","textAlign","e","parseInt","marginLeft","SignaturePad","ans","ansIndex","media_type","hint","images_required","comment_required","file_max","image_max","files_required","sub_question","Edit","async","toast","dismiss","success","error","handleDelete","Delete","location","href","cursor","objectFit","src","alt","ques","indexa","_question$images","fontSize","image","overflow","link","tempSubQuestion","splice","put","handleDeleteSubQuestion","option","indexb","_option$sub_question","transform","String","fromCharCode","htmlFor","find","handleDeleteSubQuestion4option","onSubmit","idd","questionTypes","isCorrect","checkEmpty","complianceId","required","desc_modal","handleEdit","handleSubQuestion","tempArray","tempQuestion","subQuestionId","Date","now","toString","random","substr","push","handleSubQuesttion4option","subQuestion4optionId","post","handleSubmit","selectedCategory","title","handleSelection","MyCKEditor","getElementById","accept","display","apiAuth","files","res","_res$data2","_res$data2$file","file","Location","catch","imageUrl","URL","createObjectURL","margin","textOverflow","whiteSpace","maxWidth","substring","uploadButtonClickHandlerIndex","_res$data","_res$data$file","updatedData","filechangeHandlerDescModal","handleInputChange","resize","variant","handleRemoveInput","Form","Check","handleRemoveOption","handleAddOption","readOnly","FloatingLabel","label","Control","AdminComplianceQuestion","useParams","setQuestionArray","isLoading","setIsLoading","QuestionCard","apiJson","position","top","left","justifyContent","alignItems","backgroundColor","zIndex","Spinner","animation"],"sourceRoot":""}