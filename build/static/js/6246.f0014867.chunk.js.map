{"version":3,"file":"static/js/6246.f0014867.chunk.js","mappings":"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","sources":["pages/courseplayer/components/sidepanel/CourseContentItem.jsx","pages/courseplayer/components/sidepanel/CourseCertificationButton.jsx","pages/courseplayer/components/CourseSidePanel.jsx","pages/course/CourseReview.jsx","pages/course/CourseDescriptions.jsx","pages/courseplayer/CoursePlayerContainer.jsx"],"sourcesContent":["import { PictureAsPdfTwoTone, QuizTwoTone, VideoCameraBackTwoTone } from \"@mui/icons-material\";\r\nimport { ButtonBase } from \"@mui/material\";\r\nimport { apiAuth } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst typeWiseIcon = (type) => {\r\n  switch (type) {\r\n    case 1:\r\n      return <VideoCameraBackTwoTone sx={{ color: \"blue\", fontSize: 20 }} />;\r\n    case 2:\r\n      return <PictureAsPdfTwoTone sx={{ color: \"red\", fontSize: 20 }} />;\r\n    case 3:\r\n      return <QuizTwoTone sx={{ color: \"green\", fontSize: 20 }} />;\r\n  }\r\n};\r\n\r\nconst CourseContentItem = ({ sectionId, active, progress, activeContentId, setActiveContentId, setActiveSession }) => {\r\n  const [sectionContent, setSectionContent] = useState([]);\r\n  const FetchSectionContent = async () => {\r\n    const res = await apiAuth.get(`v2/course/play/${sectionId}/content`);\r\n    if (res?.data?.status === \"success\") {\r\n      setSectionContent(res?.data?.result);\r\n    }\r\n  };\r\n  const SelectActiveSession = () => {\r\n    sectionContent.forEach((ele) => {\r\n      if (ele?.seriesId === activeContentId) {\r\n        setActiveSession(sectionId);\r\n      }\r\n    });\r\n  };\r\n  const HandleClick = (topicId, sectionId) => {\r\n    setActiveContentId(topicId);\r\n    setActiveSession(sectionId);\r\n  };\r\n  useEffect(() => {\r\n    FetchSectionContent();\r\n  }, []);\r\n  useEffect(() => {\r\n    SelectActiveSession();\r\n  }, [activeContentId]);\r\n  return (\r\n    <ul className=\"module-sublist ps-0 mb-0\">\r\n      {sectionContent?.map((topic, index) => (\r\n        <li key={index} className={activeContentId == topic.seriesId ? \"rounded active\" : \"rounded\"} style={{ cursor: \"pointer\" }}>\r\n          <ButtonBase className=\"p-3 border rounded-0 p-relative d-flex align-items-center justify-content-start text-start w-100\" onClick={() => HandleClick(topic.seriesId, sectionId)}>\r\n            {typeWiseIcon(topic?.vd_type)}\r\n            <span className=\"ms-1\">{topic?.series_title} </span>\r\n            {progress?.includes(topic.seriesId) ? (\r\n              <img\r\n                src=\"https://cdn-icons-png.flaticon.com/512/1634/1634264.png\"\r\n                alt=\"\"\r\n                style={{\r\n                  height: \"25px\",\r\n                  position: \"absolute\",\r\n                  right: \"0\",\r\n                  top: \"0\",\r\n                }}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ButtonBase>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CourseContentItem;\r\n","import { BadgeTwoTone, CheckCircleTwoTone, Dashboard } from '@mui/icons-material';\r\nimport { apiJsonAuth } from 'api';\r\nimport { useGlobalContext } from 'global/context';\r\nimport { Popup } from 'utils/Popup';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CourseCertificationButton = ({ courseDetail, progress }) => {\r\n    const { userData, token } = useGlobalContext();\r\n    const [isGenerating, setIsGenerating] = useState(false);\r\n    const [certAvail, setCertAvail] = useState(false);\r\n    const navigate = useNavigate();\r\n    //Generating the certificate\r\n    const generateCertificate = async () => {\r\n        setIsGenerating(true);\r\n        Popup(\"loading\", \"Please wait\", \"Applying for the Certificate \");\r\n        try {\r\n            let formdata = { courseId: courseDetail?.courseId, studentId: userData.id, };\r\n            const res = await apiJsonAuth.post(\"/course/certificate\", formdata, {\r\n                headers: {\r\n                    Authorization: token,\r\n                },\r\n            });\r\n            if (res.status == 200) {\r\n                console.log(\"OK 200!!!!\");\r\n                // isGenerating(false);\r\n                // navigate(`/dashboard/certificate/${courseId}`);\r\n                Popup(\"success\", \"Applied Successfully\", res?.data?.message);\r\n\r\n                // again check for certificate \r\n                console.log(\"again show the checkCertificate\")\r\n                setCertAvail(true)\r\n            }\r\n        } catch (err) {\r\n            if (err?.response?.status === 409) {\r\n                console.log(\"NOT OK 409!!!!\");\r\n                // navigate(\"/dashboard/certificate/\" + courseId);\r\n                Popup(\"warning\", \"Already Applied\", err?.response?.data?.message);\r\n            } else {\r\n                console.log(\"NOT OK!!!!\");\r\n                Popup(\"error\", err?.response?.data?.message);\r\n            }\r\n        }\r\n    };\r\n    //Check Certification\r\n    const CheckCertificate = async () => {\r\n        console.log('course=>> ', courseDetail)\r\n        try {\r\n            let response = await apiJsonAuth.get(`/course/certificate/check?courseId=${courseDetail?.courseId}&studentId=${userData.id}`);\r\n            console.log(\"=>>>>\", response)\r\n            if (response.status == 200) {\r\n                if (response?.data?.result?.checked) {\r\n                    setCertAvail(true);\r\n                    console.log(\"inside this=>>>>====\")\r\n                }\r\n            }\r\n        } catch (error) {\r\n            Popup(error?.response?.data?.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if(courseDetail){\r\n            CheckCertificate();\r\n        }\r\n    }, [courseDetail]);\r\n    return (\r\n        <div>\r\n       { \r\n        progress?.length == courseDetail?.contentCount &&\r\n            <>\r\n                    {certAvail ? (\r\n                        <div\r\n                            className={\"rounded btn-bg-green-grad active\"}\r\n                            onClick={() => navigate(\"/dashboard/certificate/\" + courseDetail?.courseId)}\r\n                            style={{ cursor: \"pointer\" }}\r\n                        >\r\n                            <div className=\"p-3 py-4 border text-dark fw-bold fs-6 rounded-0 \">\r\n                                <BadgeTwoTone />\r\n                                &nbsp;&nbsp; Download Certificate\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={isGenerating ? \"bg-light\" : \"bg-light-maroon-grad\"} onClick={() => !isGenerating && generateCertificate()} style={{ cursor: \"pointer\" }}>\r\n                            <div className=\"p-3 py-4 border text-dark fw-bold fs-6 rounded-0 \">\r\n                                {isGenerating ? <span className=\"text-success\">\r\n                                    <CheckCircleTwoTone />\r\n                                    &nbsp;&nbsp; Applied Successfully\r\n                                </span> :\r\n                                    <>\r\n                                        <BadgeTwoTone />\r\n                                        &nbsp;&nbsp; Apply For Certificate\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className={\"rounded text-primary\"}\r\n                        onClick={() => navigate(\"/dashboard/\")}\r\n                        style={{ cursor: \"pointer\" }}\r\n                    >\r\n                        <div className=\"p-3 py-4 border text-dark fw-bold fs-6 rounded-0 \">\r\n                            <Dashboard />\r\n                            &nbsp;&nbsp; Dashboard\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseCertificationButton","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@mui/material\";\r\nimport { DescriptionOutlined, Facebook, Instagram, LinkedIn, LiveHelpOutlined, PictureAsPdf, PictureAsPdfOutlined, QuestionMark, Quiz, QuizOutlined, Twitter, VideoCameraBack, VideoCameraBackOutlined, YouTube } from \"@mui/icons-material\";\r\nimport { apiAuth } from \"api\";\r\nimport CourseContentItem from \"./sidepanel/CourseContentItem\";\r\nimport CourseCertificationButton from \"./sidepanel/CourseCertificationButton\";\r\n\r\nconst typeWiseIconCount = (type, count) => {\r\n  if (count) {\r\n    switch (type) {\r\n      case 1:\r\n        return (\r\n          <small className=\"fw-semibold bg-white rounded-1 lh-0 p-1 shadow-sm me-1 d-inline-flex text-secondary\">\r\n            {count}&nbsp;\r\n            <VideoCameraBackOutlined sx={{ fontSize: 18 }} />\r\n          </small>\r\n        );\r\n      case 2:\r\n        return (\r\n          <small className=\"fw-semibold bg-white rounded-1 lh-0 p-1 shadow-sm me-1 d-inline-flex text-secondary\">\r\n            {count}&nbsp;\r\n            <DescriptionOutlined sx={{ fontSize: 18 }} />\r\n          </small>\r\n        );\r\n      case 3:\r\n        return (\r\n          <small className=\"fw-semibold bg-white rounded-1 lh-0 p-1 shadow-sm me-1 d-inline-flex text-secondary\">\r\n            {count}&nbsp;\r\n            <LiveHelpOutlined sx={{ fontSize: 18 }} />\r\n          </small>\r\n        );\r\n      default:\r\n        return \"\";\r\n    }\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n\r\nconst CourseSidePanel = ({ courseDetail, progress, activeContentId, setActiveContentId, activeSession, setActiveSession }) => {\r\n  // const [progress, setProgress] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const fetchSections = async (courseId) => {\r\n    const res = await apiAuth.get(`/v2/course/play/${courseId}/sections`);\r\n    if (res?.data?.status === \"success\") {\r\n      setSections(res?.data?.result);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (courseDetail?.courseId) {\r\n      fetchSections(courseDetail?.courseId);\r\n    }\r\n  }, [courseDetail?.courseId]);\r\n  return (\r\n    <div>\r\n      <div className=\"container pt-0 px-0 pb-5\">\r\n        <div className=\"p-3\">\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <h5 className=\" text-secondary fw-bold\">Course Modules</h5>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"d-flex align-items-center justify-content-between \">\r\n              <span className=\"fs-5 fw-semibold\">\r\n                {courseDetail?.section_completed === courseDetail?.contentCount ? (\r\n                  <b className=\"text-success fw-semibold\">\r\n                    <i className=\"bi bi-check-circle-fill\"></i> Course Completed\r\n                  </b>\r\n                ) : (\r\n                  \"Progress\"\r\n                )}\r\n              </span>\r\n              <span className=\"\">\r\n                {courseDetail?.section_completed ? courseDetail?.section_completed : 0}/{courseDetail?.contentCount}\r\n              </span>\r\n            </div>\r\n            <div className=\"progress mt-2\" role=\"progressbar\" aria-label=\"Example with label\" style={{ height: \"7px\" }}>\r\n              <div\r\n                className=\"progress-bar p-0\"\r\n                style={{\r\n                  width: `${(courseDetail?.section_completed * 100) / courseDetail?.contentCount}%`,\r\n                }}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"coursemodules border-top\">\r\n          <div className=\"accordion accordion-flush\" id=\"courseModuleAccordian\">\r\n            {sections?.map((section, index) => (\r\n              <div className=\"accordion-item p-0 mt-0\" key={index}>\r\n                <h2 className=\"accordion-header\">\r\n                  <button className={`accordion-button ${Boolean(activeSession == section.sectionId) && \"enter\"} py-2 shadow-sm rounded border bg-white text-dark ${Boolean(activeSession == section.sectionId) ? \"\" : \"collapsed\"}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={\"#course-module-\" + section.sectionId}>\r\n                    <div>\r\n                      <div className=\"fs-6 mb-1\">{section?.section_title}</div>\r\n                      <span className=\"text-secondary\">\r\n                        {typeWiseIconCount(1, section?.videoCount)}\r\n                        {typeWiseIconCount(2, section?.pdfCount)}\r\n                        {typeWiseIconCount(3, section?.quizCount)}\r\n                      </span>\r\n                    </div>\r\n                  </button>\r\n                </h2>\r\n                <div id={\"course-module-\" + section.sectionId} className={Boolean(activeSession == section.sectionId) ? \"accordion-collapse collapse show\" : \"accordion-collapse collapse\"}>\r\n                  <CourseContentItem sectionId={section?.sectionId} progress={progress} setActiveContentId={setActiveContentId} activeContentId={activeContentId} setActiveSession={setActiveSession} />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <CourseCertificationButton courseDetail={courseDetail} progress={progress} />\r\n        <div className=\"p-3\">\r\n          <div className=\"d-flex align-items-center justify-content-center\">\r\n            <Avatar alt={courseDetail?.author} src={\"/android-chrome-192x192.png\"} sx={{ width: 66, height: 66 }} className=\"me-4\" />\r\n            <h5 className=\" \">{courseDetail?.author}</h5>\r\n          </div>\r\n          <div className=\"text-center\">{/* <h6> Us </h6> */}</div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <IconButton href=\"https://www.facebook.com/profile.php?id=100089167461647&mibextid=ZbWKwL\" target={\"_blank\"} className=\"m-1 bg-white shadow-sm border border-light\">\r\n              <Facebook sx={{ color: \"blue\" }} />\r\n            </IconButton>\r\n            <IconButton href=\"https://twitter.com/Yuvamanthan_org\" target={\"_blank\"} className=\"m-1 bg-white shadow-sm border border-light\">\r\n              <Twitter sx={{ color: \"skyblue\" }} />\r\n            </IconButton>\r\n            <IconButton href=\"https://www.linkedin.com/in/yuva-manthan-09aa2025b/\" target={\"_blank\"} className=\"m-1 bg-white shadow-sm border border-light\">\r\n              <LinkedIn sx={{ color: \"blue\" }} />\r\n            </IconButton>\r\n            <IconButton href=\"https://www.instagram.com/yuvamanthan_org/\" target={\"_blank\"} className=\"m-1 bg-white shadow-sm border border-light\">\r\n              <Instagram sx={{ color: \"tomato\" }} />\r\n            </IconButton>\r\n            <IconButton href=\"https://www.youtube.com/@yuvamanthan_\" target={\"_blank\"} className=\"m-1 bg-white shadow-sm border border-light\">\r\n              <YouTube sx={{ color: \"red\" }} />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseSidePanel;\r\n","import { TextField } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React, { useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Box from \"@mui/material/Box\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { useFormik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\nimport { apiAuth, apiJsonAuth } from \"api\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport moment from \"moment\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CourseReview = ({ courseId }) => {\r\n  const { userData, token } = useGlobalContext();\r\n  const [value, setValue] = React.useState(0);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [hover, setHover] = React.useState(-1);\r\n  const [reviewCount, setReviewCount] = React.useState(2);\r\n  const labels = {\r\n    0.5: \"Useless\",\r\n    1: \"Useless+\",\r\n    1.5: \"Poor\",\r\n    2: \"Poor+\",\r\n    2.5: \"Ok\",\r\n    3: \"Ok+\",\r\n    3.5: \"Good\",\r\n    4: \"Good+\",\r\n    4.5: \"Excellent\",\r\n    5: \"Excellent+\",\r\n  };\r\n  function getLabelText(value) {\r\n    return `${value} Star${value !== 1 ? \"s\" : \"\"}, ${labels[value]}`;\r\n  }\r\n  const fetchReview = async () => {\r\n    if (courseId && token) {\r\n      const reviewData = await apiJsonAuth.get(`/course/review?courseId=${courseId}`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n      setReviews(reviewData.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchReview();\r\n  }, [courseId, token]);\r\n\r\n  // Bsic Formik\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n    onSubmit: async (values, { resetForm }) => {\r\n      Swal.fire({\r\n        width: 300,\r\n        title: \"Loading...\",\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n       \r\n      }\r\n      );\r\n      const formData = new FormData();\r\n      formData.append(\"title\", values.title);\r\n      formData.append(\"description\", values.description);\r\n      formData.append(\"rating\", value);\r\n      formData.append(\"courseId\", courseId);\r\n      formData.append(\"userId\", userData?.id);\r\n      try {\r\n        const res = await apiAuth.post(`/course/review`, formData, {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          Swal.fire({\r\n            title: res.data.message,\r\n            icon: \"success\",\r\n            width: 400,\r\n          });\r\n          resetForm();\r\n      fetchReview()\r\n\r\n        }\r\n      } catch (error) {\r\n        if (error) {\r\n          if (error.response.status === 409) {\r\n            Swal.fire({\r\n              width: 400,\r\n              title: error.response.data.message ? error.response.data.message : \"Something Went Wrong Check  your Network Connection\",\r\n              icon: \"warning\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              width: 400,\r\n              title: error.response.data.message ? error.response.data.message : \"Something Went Wrong Check  your Network Connection\",\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      {/* Review Form  */}\r\n      <div className=\"container-fluid p-0\">\r\n        <form onSubmit={Formik.handleSubmit}>\r\n          <div className=\"align-items-start\">\r\n            <div className=\"\">\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"warning\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={Formik.values.title}\r\n                onChange={Formik.handleChange}\r\n                error={Formik.touched.title && Boolean(Formik.errors.title)}\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"warning\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Write a Review for Course\"\r\n                value={Formik.values.description}\r\n                onChange={Formik.handleChange}\r\n                error={Formik.touched.description && Boolean(Formik.errors.description)}\r\n                className=\"mt-2\"\r\n                multiline\r\n                rows={4}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">\r\n              <div className=\"p-2\">\r\n                <StyledBadge overlap=\"circular\" anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }} variant=\"dot\">\r\n                  <Avatar\r\n                    alt={userData?.email}\r\n                    src={process.env.REACT_APP_API_BASE_URL + userData?.profile}\r\n                    sx={{ width: 46, height: 46, background: \"orange\" }}\r\n                    className=\"shadow-lg\"\r\n                  />\r\n                </StyledBadge>\r\n              </div>\r\n              <div className=\"p-2\">\r\n                <Box\r\n                  sx={{\r\n                    width: 300,\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Rating\r\n                    name=\"hover-feedback\"\r\n                    value={value}\r\n                    precision={1}\r\n                    getLabelText={getLabelText}\r\n                    onChange={(event, newValue) => {\r\n                      setValue(newValue);\r\n                    }}\r\n                    onChangeActive={(event, newHover) => {\r\n                      setHover(newHover);\r\n                    }}\r\n                    emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                  />\r\n                  {value !== null && <Box sx={{ ml: 2 }}>{labels[hover !== -1 ? hover : value]}</Box>}\r\n                </Box>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"warning\" className=\"mt-3\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      {/* Reviews Grid  */}\r\n\r\n      {/* Student Reviews */}\r\n      {reviews.length > 0 && (\r\n        <div className=\"container StudentReviews pt-5\">\r\n          <h4 sx={{ alineText: \"center\", borderBottom: 1 }}>\r\n             Reviews <span>[{reviews.length}]</span>\r\n          </h4>\r\n          <div>\r\n            {reviews.slice(0, reviewCount).map((rws) => {\r\n              return (\r\n                <Card sx={{ my: 2, pt: 2 }} className=\"border rounded-3\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mx: 5, mb: 2 }}>\r\n                    <h6>{rws.title}</h6>\r\n                    <p className=\"fs-6\">{rws.description}</p>\r\n                    {rws?.created_at && moment(rws?.created_at).startOf(\"min\").fromNow()}\r\n                  </Typography>\r\n                  <Rating\r\n                    sx={{ mx: 5 }}\r\n                    name=\"text-feedback\"\r\n                    value={rws.rating}\r\n                    readOnly\r\n                    precision={0.5}\r\n                    emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\r\n                  />\r\n                  <div className=\"px-3\">\r\n                    <CardHeader\r\n                      sx={{ borderRadius: 3 }}\r\n                      avatar={\r\n                        <Avatar src={process.env.REACT_APP_API_BASE_URL + rws?.profile} sx={{ bgcolor: \"skyblue\" }}>\r\n                          {/* {rws.title[0]} */}\r\n                        </Avatar>\r\n                      }\r\n                      title={rws?.first_name + \" \" + rws?.last_name}\r\n                      subheader={\r\n                        <div>\r\n                          <span>{rws?.institution_name}</span>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })}\r\n            {reviewCount < reviews.length && (\r\n              <Button\r\n                onClick={() => {\r\n                  setReviewCount(reviews.length - reviewCount < 20 ? reviews.length : reviewCount + 20);\r\n                }}\r\n              >\r\n                More...\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseReview;\r\n","import React from \"react\";\r\nimport CourseReview from \"./CourseReview\";\r\n\r\nconst CourseDescriptions = ({ course }) => {\r\n  function createMarkup(data) {\r\n    return { __html: data };\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {/* top view  */}\r\n      <div className=\"row pt-2 pt-lg-4 align-items-center\">\r\n        <div className=\"col-11\">\r\n          <h1 className=\"\">{course?.course_name}</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"border-top pb-3 pb-lg-4\">\r\n        <ul\r\n          className=\"nav nav-pills-design-4 nav-pills\"\r\n          id=\"myTab\"\r\n          role=\"tablist\"\r\n        >\r\n          <li className=\"nav-item px-0 ms-0\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link active py-2 rounded-0\"\r\n              id=\"home-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#home\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n            >\r\n              Description\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item px-0 ms-0\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link py-2 rounded-0\"\r\n              id=\"home-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#learn\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n            >\r\n              What will you learn\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item ms-0\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"profile-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#profile\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n            >\r\n              Reviews\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <div className=\"tab-content p-0\">\r\n          <div\r\n            className=\"tab-pane active\"\r\n            id=\"home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"home-tab\"\r\n            tabIndex=\"0\"\r\n          >\r\n            <div className=\"py-4\">\r\n              <div className=\"quill-ls text-dark\" dangerouslySetInnerHTML={createMarkup(course?.desc)} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"tab-pane\"\r\n            id=\"learn\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"home-tab\"\r\n            tabIndex=\"0\"\r\n          >\r\n            <div className=\"py-4\">\r\n              <div className=\"quill-ls text-dark\" dangerouslySetInnerHTML={createMarkup(course?.learn)} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"tab-pane p-0\"\r\n            id=\"profile\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"profile-tab\"\r\n            tabIndex=\"0\"\r\n          >\r\n            <div className=\"py-4\">\r\n              <CourseReview courseId={course?.courseId} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseDescriptions;\r\n","import { apiAuth, apiJsonAuth } from \"api\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Outlet, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport CourseSidePanel from \"./components/CourseSidePanel\";\r\nimport CourseDescriptions from \"pages/course/CourseDescriptions\";\r\n\r\nconst CoursePlayerContainer = () => {\r\n  const { token } = useGlobalContext();\r\n  const [progress, setProgress] = useState(null);\r\n  const [activeContentId, setActiveContentId] = useState(null);\r\n  const [activeSession, setActiveSession] = useState(null);\r\n  const [courseDetail, setCourseDetail] = useState();\r\n  const { courseId } = useParams();\r\n  const [stopFetchNext, setStopFetchNext] = useState(false);\r\n  //Fetch Course Data\r\n  const getCourse = async (courseId) => {\r\n    try {\r\n      if (courseId) {\r\n        const res = await apiAuth.get(`v2/course/play/${courseId}`, { headers: { Authorization: token } });\r\n        if (res?.data?.status == \"success\") {\r\n          setCourseDetail(res?.data?.result);\r\n          setProgress(JSON.parse(res?.data?.result?.section_progress)?.progress);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      let msg = error?.response?.data?.message ? error?.response?.data?.message : \"Something Went Wrong Check  your Network Connection\";\r\n      toast.error(msg);\r\n    }\r\n  };\r\n  // StopFetch Next For a Delay\r\n  const fetchNextStop = (time) => {\r\n    setStopFetchNext(true);\r\n    clearTimeout();\r\n    setTimeout(() => {\r\n      setStopFetchNext(false);\r\n    }, time * 1000);\r\n  };\r\n  // Fetch Next Course\r\n  const fetchNextContent = async (courseId, id) => {\r\n    try {\r\n      if (!stopFetchNext) {\r\n        const res = await apiAuth.get(`v2/course/play/content/next?courseId=${courseId ? courseId : \"\"}&currentContentId=${id ? id : \"\"}`, { headers: { Authorization: token } });\r\n        if (res?.data?.status == \"success\") {\r\n          setActiveContentId(res?.data?.nextContentId);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      let msg = error.response.data.message ? error.response.data.message : \"Something Went Wrong Check  your Network Connection\";\r\n      toast.error(msg);\r\n    }\r\n  };\r\n  //Function for Post Progress\r\n  async function postProgress(seriesId) {\r\n    try {\r\n      if (!progress.includes(seriesId)) {\r\n        const res = await apiJsonAuth.post(\"v2/course/updateprogress\", { enrollmentId: courseDetail?.enrollmentId, seriesId }, { headers: { Authorization: token } });\r\n        if (res.status == 200) {\r\n          toast.dismiss();\r\n          toast.success(\"Section Marked as Completed\");\r\n          let newIcreasedSection_completed = Number(courseDetail?.section_completed) + 1;\r\n          setCourseDetail({ ...courseDetail, section_completed: newIcreasedSection_completed });\r\n          setProgress([...progress, seriesId]);\r\n        }\r\n      } else {\r\n        fetchNextContent(courseDetail?.courseId, seriesId);\r\n      }\r\n    } catch (error) {\r\n      toast.dismiss();\r\n      toast.error(error.response.data.message ? error.response.data.message : \"Something Went Wrong Check Your Internet Connnection\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (progress?.length && courseDetail) {\r\n      let n = progress.length - 1;\r\n      fetchNextContent(courseDetail?.courseId, progress[n]);\r\n    } else {\r\n      if (courseDetail) {\r\n        fetchNextContent(courseDetail?.courseId);\r\n      }\r\n    }\r\n  }, [progress]);\r\n  useEffect(() => {\r\n    getCourse(courseId);\r\n  }, [courseId]);\r\n  return (\r\n    <div className=\"container-fluid px-0 border-top\">\r\n      <div className=\"row g-0\">\r\n        <div className=\"col-12 col-md-9 col-xxl-9\">\r\n          <Outlet context={{ courseDetail, progress, setProgress, activeContentId, setActiveContentId, fetchNextContent, postProgress, fetchNextStop }} />\r\n          <CourseDescriptions course={courseDetail} />\r\n        </div>\r\n        <div className=\"col-12 col-lg-3 col-xxl-3 border-start\">\r\n          <CourseSidePanel courseDetail={courseDetail} progress={progress} setProgress={setProgress} activeContentId={activeContentId} setActiveContentId={setActiveContentId} activeSession={activeSession} setActiveSession={setActiveSession} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoursePlayerContainer;\r\n"],"names":["typeWiseIcon","type","_jsx","VideoCameraBackTwoTone","sx","color","fontSize","PictureAsPdfTwoTone","QuizTwoTone","_ref","sectionId","active","progress","activeContentId","setActiveContentId","setActiveSession","sectionContent","setSectionContent","useState","useEffect","async","_res$data","res","apiAuth","get","concat","_res$data2","data","status","result","FetchSectionContent","forEach","ele","seriesId","className","children","map","topic","index","style","cursor","_jsxs","ButtonBase","onClick","HandleClick","topicId","vd_type","series_title","includes","src","alt","height","position","right","top","courseDetail","userData","token","useGlobalContext","isGenerating","setIsGenerating","certAvail","setCertAvail","navigate","useNavigate","console","log","response","apiJsonAuth","courseId","id","_response$data","_response$data$result","checked","error","_error$response","_error$response$data","Popup","message","CheckCertificate","length","contentCount","_Fragment","BadgeTwoTone","formdata","studentId","post","headers","Authorization","err","_err$response","_err$response2","_err$response2$data","_err$response3","_err$response3$data","generateCertificate","CheckCircleTwoTone","Dashboard","typeWiseIconCount","count","VideoCameraBackOutlined","DescriptionOutlined","LiveHelpOutlined","activeSession","sections","setSections","fetchSections","section_completed","role","width","section","Boolean","section_title","videoCount","pdfCount","quizCount","CourseContentItem","CourseCertificationButton","Avatar","author","IconButton","href","target","Facebook","Twitter","LinkedIn","Instagram","YouTube","StyledBadge","styled","Badge","theme","backgroundColor","boxShadow","palette","background","paper","left","borderRadius","animation","border","content","transform","opacity","_ref2","value","setValue","React","reviews","setReviews","hover","setHover","reviewCount","setReviewCount","labels","fetchReview","reviewData","Formik","useFormik","initialValues","title","description","onSubmit","values","_ref3","resetForm","Swal","didOpen","formData","FormData","append","icon","handleSubmit","TextField","fullWidth","variant","name","label","onChange","handleChange","touched","errors","required","multiline","rows","overlap","anchorOrigin","vertical","horizontal","email","process","profile","Box","display","alignItems","Rating","precision","getLabelText","event","newValue","onChangeActive","newHover","emptyIcon","StarIcon","ml","Button","alineText","borderBottom","slice","rws","Card","my","pt","Typography","mx","mb","created_at","moment","startOf","fromNow","rating","readOnly","CardHeader","avatar","bgcolor","first_name","last_name","subheader","institution_name","course","createMarkup","__html","course_name","tabIndex","dangerouslySetInnerHTML","desc","learn","CourseReview","CoursePlayerContainer","setProgress","setCourseDetail","useParams","stopFetchNext","setStopFetchNext","fetchNextContent","_res$data4","_res$data5","nextContentId","msg","toast","n","_JSON$parse","_res$data3","_res$data3$result","JSON","parse","section_progress","_error$response2","_error$response2$data","getCourse","Outlet","context","postProgress","enrollmentId","dismiss","success","newIcreasedSection_completed","Number","_objectSpread","fetchNextStop","time","clearTimeout","setTimeout","CourseDescriptions","CourseSidePanel"],"sourceRoot":""}