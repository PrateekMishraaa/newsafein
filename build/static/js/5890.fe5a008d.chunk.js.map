{"version":3,"file":"static/js/5890.fe5a008d.chunk.js","mappings":"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","sources":["pages/dashboard/components/institute/setting/InstituteProfilePic.jsx","hooks/useCurrentLocation.jsx","pages/dashboard/components/institute/setting/InstituteBasicDetails.jsx"],"sourcesContent":["import { Avatar, Divider } from \"@mui/material\";\r\nimport { apiAuth } from \"api\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport React from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport useError from \"hooks/useError\";\r\nimport { Popup } from \"utils/Popup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { InsertPhotoOutlined } from \"@mui/icons-material\";\r\n\r\nconst InstituteProfilePic = () => {\r\n  const { ErrorResponder } = useError();\r\n  const { token } = useGlobalContext();\r\n  const [details] = useOutletContext();\r\n  const [profile, setProfile] = React.useState(null);\r\n  const profileValidate = (e) => {\r\n    if (e.target?.files[0]?.size < 5000000) {\r\n      setProfile(e.target.files[0]);\r\n    } else {\r\n      if (e.target?.files[0]) {\r\n        e.target.value = null;\r\n        Popup(\"warning\", \"Exceed Logo size Limit!! \\n Size Limit : 5 MB \");\r\n      }\r\n    }\r\n  };\r\n  // Profile Photo upload\r\n  async function uploadPhoto(e) {\r\n    e.preventDefault();\r\n    toast.loading(\"Please wait...\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", profile);\r\n    if (token) {\r\n      try {\r\n        const res = await apiAuth.put(\r\n          `/institute/profile?update_type=logo`,\r\n          formData,\r\n          {\r\n            headers: {\r\n              Authorization: token,\r\n            },\r\n          }\r\n        );\r\n        if (res.status === 200) {\r\n          toast.dismiss();\r\n          toast.success(res.data.message);\r\n        }\r\n      } catch (error) {\r\n        ErrorResponder(error);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row row-cols-1 row-cols-lg-2 mb-3 g-2\">\r\n        <div className=\"col\">\r\n          <h6>Profile Picture</h6>\r\n        </div>\r\n        <div className=\"col\">\r\n          <form\r\n            onSubmit={uploadPhoto}\r\n            className=\"d-flex align-items-center justify-content-between\"\r\n          >\r\n            <Avatar\r\n              alt=\"profile\"\r\n              name=\"profilepic\"\r\n              className=\"rounded\"\r\n              src={profile ? URL.createObjectURL(profile) : details?.logo}\r\n              sx={{ width: 80, height: 80 }}\r\n            />\r\n            <div className=\"d-flex align-items-center justify-content-start\">\r\n              <IconButton color=\"success\" size=\"lg\" component=\"label\">\r\n                <input\r\n                  hidden\r\n                  name=\"profile\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  type=\"file\"\r\n                  onChange={profileValidate}\r\n                />\r\n                <InsertPhotoOutlined />\r\n              </IconButton>\r\n              <button\r\n                className=\"btn btn-outline-success ms-1 rounded-3 fw-semibold\"\r\n                type=\"submit\"\r\n              >\r\n                Upload Logo\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstituteProfilePic;\r\n","import { apiJson } from \"api\";\r\nimport { pop2 } from \"utils/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst useCurrentLocation = () => {\r\n  // Fetch Current Location\r\n  const [states, setStates] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  let [liveState, setLiveState] = useState(null);\r\n  let [liveDistrict, setLiveDistrict] = useState(null);\r\n  let [liveCountry, setLiveCountry] = useState(null);\r\n  let [livePostalCode, setLivePostalcode] = useState(null);\r\n  const [currentAddress, setCurrentAddress] = useState(\"\");\r\n  const [findingLocation, setFindingLocation] = useState(false);\r\n  const [coords, setCoords] = useState(null);\r\n\r\n  //Fetch Coordinates\r\n  const fetchCoordinates = () => {\r\n    window?.navigator?.geolocation?.getCurrentPosition((geolocation) => {\r\n      const coordinates = geolocation?.coords;\r\n      setCoords(coordinates);\r\n    });\r\n  };\r\n  // Fetch Address\r\n  const fetchAddress = (coordinates) => {\r\n    const apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\r\n    Geocode.setApiKey(apiKey);\r\n    Geocode.setLanguage(\"en\");\r\n    Geocode.setRegion(\"IN\");\r\n    Geocode.setLocationType(\"ROOFTOP\");\r\n    Geocode.enableDebug();\r\n    if (coordinates) {\r\n      Geocode.fromLatLng(coordinates.latitude, coordinates.longitude).then(\r\n        (response) => {\r\n          let address = response.results[0].formatted_address;\r\n          response.results[0].address_components.forEach((values, index) => {\r\n            if (values.types[0].toLowerCase() === \"postal_code\") {\r\n              address = address.replace(values.long_name, \"\");\r\n              setLivePostalcode(values.long_name);\r\n            }\r\n            if (values.types[0].toLowerCase() === \"country\") {\r\n              address = address.replace(values.long_name, \"\");\r\n              setLiveCountry(values.long_name);\r\n            }\r\n            if (values.types[0].toLowerCase() === \"administrative_area_level_3\") {\r\n              address = address.replace(values.long_name, \"\");\r\n              setLiveDistrict(values.long_name);\r\n            }\r\n            if (values.types[0].toLowerCase() === \"administrative_area_level_1\") {\r\n              address = address.replace(values.long_name, \"\");\r\n              setLiveState(values.long_name);\r\n            }\r\n            address = address.replace(\",  ,\", \"\").trim();\r\n          });\r\n          setCurrentAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      setFindingLocation(false);\r\n    }\r\n  };\r\n  //Fetch States List\r\n  const fetchStates = async () => {\r\n    try {\r\n      const res = await apiJson.get(\"/public/stateanddistrict\");\r\n      if (res.status === 200) {\r\n        setStates(res?.data?.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      pop2.warning({ title: \"Registeration is not available right now. Please try again\" });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchStates();\r\n    fetchCoordinates();\r\n  }, []);\r\n  useEffect(() => {\r\n    fetchAddress(coords);\r\n  }, [coords]);\r\n  // End Current Location\r\n  return { findingLocation, liveState, liveDistrict, liveCountry, livePostalCode, currentAddress, states };\r\n};\r\n\r\nexport default useCurrentLocation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport { apiAuth } from \"api\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { FormHelperText, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport useError from \"hooks/useError\";\r\nimport {jwtDecode} from \"jwt-decode\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  LinkedIn,\r\n  Twitter,\r\n  YouTube,\r\n} from \"@mui/icons-material\";\r\nimport * as Yup from \"yup\";\r\nimport { InputAdornment } from \"@mui/material\";\r\nimport useCurrentLocation from \"hooks/useCurrentLocation\";\r\nimport InstituteProfilePic from \"./InstituteProfilePic\";\r\n\r\nconst additionalDetailsSchema = new Yup.object().shape({\r\n  title: Yup.string().max(10).required(\"Title is Required\"),\r\n  first_name: Yup.string().max(100).required(\"First Name is Required\"),\r\n  last_name: Yup.string().max(100).required(\"Last Name is Required\"),\r\n  email: Yup.string().email().required(\"Email is required\"),\r\n  contact: Yup.string()\r\n    .required(\"Phone Number is Required\")\r\n    .matches(/^[0-9]{10}$/, \"Invalid Mobile Number\"),\r\n  fb: Yup.string()\r\n    .matches(\r\n      /(?:www.facebook.com|www.fb.com|facebook.com|fb.com)/,\r\n      \"facebook profile url must match www.facebook.com\"\r\n    )\r\n    .notRequired(),\r\n  twitter: Yup.string()\r\n    .matches(\r\n      /(?:twitter.com|www.twitter.com)/,\r\n      \"twitter profile url must match www.twitter.com\"\r\n    )\r\n    .notRequired(),\r\n  insta: Yup.string()\r\n    .matches(\r\n      /(?:instagram.com|www.instagram.com)/,\r\n      \"Instagram profile url must match www.instagram.com\"\r\n    )\r\n    .notRequired(),\r\n  lkd: Yup.string()\r\n    .matches(\r\n      /(?:linkedin.com|www.linkedin.com)/,\r\n      \"Linkedin profile url must match www.linkedin.com\"\r\n    )\r\n    .notRequired(),\r\n  ytb: Yup.string()\r\n    .matches(\r\n      /(?:youtube.com|www.youtube.com)/,\r\n      \"Youtube profile url must match www.youtube.com\"\r\n    )\r\n    .notRequired(),\r\n  institution_name: Yup.string().required(\"Institution name is required\"),\r\n  bio: Yup.string()\r\n    .max(350, \"Too long! ( max 350 characters )\")\r\n    .required(\"Bio is required\"),\r\n  institution_address: Yup.string().required(\"Institution Address is required\"),\r\n  state: Yup.string().max(200).required(\"State is required\"),\r\n  pincode: Yup.string()\r\n    .required(\"Pin code is Required\")\r\n    .matches(/^[0-9]{6}$/, \"Invalid Pin code\"),\r\n});\r\n\r\nconst InstituteBasicDetails = () => {\r\n  const { ErrorResponder } = useError();\r\n  const { token } = useGlobalContext();\r\n  const [details, fetchDetails] = useOutletContext();\r\n  const tokendata = localStorage.getItem('token',token)\r\n  const [decodedToken, setDecodedToken] = useState(null);\r\n\r\n  // JWT Token decode with proper error handling\r\n  useEffect(() => {\r\n    const tokendata = localStorage.getItem('token') || token;\r\n    \r\n    if (tokendata) {\r\n      try {\r\n        const decoded = jwtDecode(tokendata);\r\n        console.log(\"Decoded token details:\", decoded);\r\n        setDecodedToken(decoded);\r\n      } catch (error) {\r\n        console.error(\"Error decoding JWT token:\", error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n\r\n  \r\n\r\n  // Bsic Formik\r\n const basicFormik = useFormik({\r\n    initialValues: {\r\n      title: details?.title || \"Mr.\",\r\n      first_name: details?.first_name || decodedToken?.data?.first_name || \"\",\r\n      middle_name: details?.middle_name || \"\",\r\n      last_name: details?.last_name || decodedToken?.data?.last_name || \"\",\r\n       contact: details?.contact || decodedToken?.data?.contact || \"\",\r\n      email: details?.email || decodedToken?.data?.email || \"\",\r\n      fb: details?.fb || \"\",\r\n      twitter: details?.twitter || \"\",\r\n      insta: details?.insta || \"\",\r\n      lkd: details?.lkd || \"\",\r\n      ytb: details?.ytb || \"\",\r\n      institution_name: details?.institution_name || decodedToken?.data?.institution_name || \"\",\r\n     bio: details?.bio || decodedToken?.data?.about_institute || \"\",\r\n      institution_address: details?.institution_address || decodedToken?.data?.institution_address || \"\",\r\n      state: details?.state || \"\",\r\n      district: details?.district || \"\",\r\n      pincode: details?.pincode || \"\",\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: additionalDetailsSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      console.log(values, \"====>>>val\");\r\n      Swal.fire({\r\n        width: 300,\r\n        title: \"Loading...\",\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n      const newBio = values.bio.replaceAll(\"'\", \"'\");\r\n      const formData = new FormData();\r\n      formData.append(\"title\", values.title);\r\n      formData.append(\"first_name\", values.first_name);\r\n      formData.append(\"middle_name\", values.middle_name);\r\n      formData.append(\"last_name\", values.last_name);\r\n      formData.append(\"contact\", values.contact);\r\n      formData.append(\"fb\", values.fb);\r\n      formData.append(\"twitter\", values.twitter);\r\n      formData.append(\"insta\", values.insta);\r\n      formData.append(\"lkd\", values.lkd);\r\n      formData.append(\"ytb\", values.ytb);\r\n      formData.append(\"institution_name\", values.institution_name);\r\n      formData.append(\"bio\", newBio);\r\n      formData.append(\"institution_address\", values.institution_address);\r\n      formData.append(\"state\", values.state);\r\n      formData.append(\"district\", values.district);\r\n      formData.append(\"pincode\", values.pincode);\r\n      \r\n      const currentToken = localStorage.getItem('token') || token;\r\n      if (currentToken) {\r\n        try {\r\n          const res = await apiAuth.put(\r\n            `/institute/profile?update_type=basic`,\r\n            formData,\r\n            {\r\n              headers: {\r\n                Authorization: currentToken,\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            Swal.fire({\r\n              title: res.data.message,\r\n              icon: \"success\",\r\n              width: 400,\r\n            });\r\n            resetForm();\r\n            fetchDetails();\r\n          }\r\n        } catch (error) {\r\n          ErrorResponder(error);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (decodedToken?.data) {\r\n      // Update form values with token data if details are not available\r\n      if (!details?.first_name && decodedToken.data.first_name) {\r\n        basicFormik.setFieldValue(\"first_name\", decodedToken.data.first_name);\r\n      }\r\n      if (!details?.last_name && decodedToken.data.last_name) {\r\n        basicFormik.setFieldValue(\"last_name\", decodedToken.data.last_name);\r\n      }\r\n      if (!details?.contact && decodedToken.data.contact) {\r\n      basicFormik.setFieldValue(\"contact\", decodedToken.data.contact);\r\n    }\r\n      if (!details?.email && decodedToken.data.email) {\r\n        basicFormik.setFieldValue(\"email\", decodedToken.data.email);\r\n      }\r\n      if (!details?.institution_name && decodedToken.data.institution_name) {\r\n        basicFormik.setFieldValue(\"institution_name\", decodedToken.data.institution_name);\r\n      }\r\n      if (!details?.institution_address && decodedToken.data.institution_address) {\r\n        basicFormik.setFieldValue(\"institution_address\", decodedToken.data.institution_address);\r\n      }\r\n    }\r\n  }, [decodedToken, details]);\r\n\r\n  const [districts, setDistricts] = useState([]);\r\n\r\n  const { states } = useCurrentLocation();\r\n\r\n  const handleStateIndexChange = async (stateValue) => {\r\n    if (stateValue?.length && states?.length) {\r\n      let index = await states?.findIndex(\r\n        (state) => state?.state?.toLowerCase() === stateValue.toLowerCase()\r\n      );\r\n      setDistricts(states[index]?.District);\r\n\r\n      return index;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleStateIndexChange(basicFormik?.values?.state);\r\n  }, [basicFormik?.values?.state, states]);\r\n\r\n  useEffect(() => {\r\n    if (details?.title) {\r\n      basicFormik.setFieldValue(\"title\", details?.title);\r\n    }\r\n  }, [details]);\r\n  return (\r\n    <>\r\n      {/* <SimpleBreadCrumb page={\"Edit Profile\"} /> */}\r\n      {/* <div className=\"py-4 container\" style={{ maxWidth: 700 }}> */}\r\n      <InstituteProfilePic />\r\n      <form onSubmit={basicFormik.handleSubmit}>\r\n        <div className=\"row row-cols-1 row-cols-lg-2 g-2 gy-4\">\r\n          <div className=\"col\">\r\n            <h6>Full Name</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row cols-1 row-cols-lg-2 g-2\">\r\n              <div className=\"col-12 col-lg-2\">\r\n                <select\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  className=\"form-select h-100 py-3\"\r\n                  label=\"Title\"\r\n                  value={basicFormik.values.title}\r\n                  onChange={basicFormik.handleChange}\r\n                  required\r\n                >\r\n                  <option value={\"Mr.\"}>Mr.</option>\r\n                  <option value={\"Ms.\"}>Ms.</option>\r\n                  <option value={\"Miss\"}>Miss</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-12 col-lg-5\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"first_name\"\r\n                  name=\"first_name\"\r\n                  label=\"First Name\"\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={basicFormik.values.first_name}\r\n                  // onChange={basicFormik.handleChange}\r\n                  disabled\r\n                  error={\r\n                    basicFormik.touched.first_name &&\r\n                    Boolean(basicFormik.errors.first_name)\r\n                  }\r\n                  required\r\n                  helperText={\r\n                    basicFormik.touched.first_name &&\r\n                    basicFormik.errors.first_name\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-lg-5\">\r\n                <TextField\r\n                  fullWidth\r\n                  required\r\n                  id=\"last_name\"\r\n                  name=\"last_name\"\r\n                  label=\"Last Name\"\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={basicFormik.values.last_name}\r\n                  disabled\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.last_name &&\r\n                    Boolean(basicFormik.errors.last_name)\r\n                  }\r\n                  helperText={\r\n                    basicFormik.touched.last_name &&\r\n                    basicFormik.errors.last_name\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Contact  */}\r\n          <div className=\"col\">\r\n            <h6>Contact Number</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              id=\"contact\"\r\n              name=\"contact\"\r\n              label=\"Contact\"\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={basicFormik.values.contact}\r\n              onChange={basicFormik.handleChange}\r\n              error={\r\n                basicFormik.touched.contact &&\r\n                Boolean(basicFormik.errors.contact)\r\n              }\r\n              helperText={\r\n                basicFormik.touched.contact && basicFormik.errors.contact\r\n              }\r\n            />\r\n          </div>\r\n          {/* Email  */}\r\n          <div className=\"col\">\r\n            <h6>Email</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={basicFormik.values.email}\r\n              onChange={basicFormik.handleChange}\r\n              error={\r\n                basicFormik.touched.email && Boolean(basicFormik.errors.email)\r\n              }\r\n              disabled={true}\r\n              helperText={basicFormik.touched.email && basicFormik.errors.email}\r\n            />\r\n          </div>\r\n          {/* About  */}\r\n          <div className=\"col\">\r\n            <h6>About</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              label=\"Bio\"\r\n              multiline\r\n              rows={4}\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n             value={basicFormik.values.bio}\r\n             disabled\r\n              onChange={basicFormik.handleChange}\r\n              error={basicFormik.touched.bio && Boolean(basicFormik.errors.bio)}\r\n              helperText={basicFormik.touched.bio && basicFormik.errors.bio}\r\n            />\r\n            {basicFormik?.values?.bio?.length} Characters ({\" \"}\r\n            {350 - basicFormik?.values?.bio?.length} left)\r\n          </div>\r\n          {/* School name  */}\r\n          <div className=\"col\">\r\n            <h6>School Name</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"institution_name\"\r\n              name=\"institution_name\"\r\n              label=\"School Name\"\r\n              multiline\r\n              rows={3}\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={basicFormik.values.institution_name}\r\n              disabled\r\n              onChange={basicFormik.handleChange}\r\n              error={\r\n                basicFormik.touched.institution_name &&\r\n                Boolean(basicFormik.errors.institution_name)\r\n              }\r\n              helperText={\r\n                basicFormik.touched.institution_name &&\r\n                basicFormik.errors.institution_name\r\n              }\r\n            />\r\n          </div>\r\n          {/* School Address  */}\r\n          <div className=\"col\">\r\n            <h6>School Address</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row g-2\">\r\n              <div className=\"col-12\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"institution_address\"\r\n                  name=\"institution_address\"\r\n                  label=\"School Address\"\r\n                  multiline\r\n                  rows={3}\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={basicFormik.values.institution_address}\r\n                  disabled\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.institution_address &&\r\n                    Boolean(basicFormik.errors.institution_address)\r\n                  }\r\n                  helperText={\r\n                    basicFormik.touched.institution_address &&\r\n                    basicFormik.errors.institution_address\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-lg-6\">\r\n                <FormControl fullWidth>\r\n                  <label>\r\n                    Select State <b className=\"text-danger\">*</b>\r\n                  </label>\r\n                  <select\r\n                    id=\"state\"\r\n                    name=\"state\"\r\n                    className=\"form-select py-3\"\r\n                    onChange={basicFormik?.handleChange}\r\n                    value={basicFormik?.values?.state}\r\n                  >\r\n                    {states?.map((state, i) => {\r\n                      return (\r\n                        <option key={i} value={state?.state}>\r\n                          {state?.state}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </FormControl>\r\n                <FormHelperText className=\"text-danger\">\r\n                  {basicFormik?.touched?.state && basicFormik?.errors?.state}\r\n                </FormHelperText>\r\n              </div>\r\n              <div className=\"col-12 col-lg-6\">\r\n                <FormControl fullWidth>\r\n                  <label>\r\n                    Select District <b className=\"text-danger\">*</b>\r\n                  </label>\r\n                  <select\r\n                    id=\"district\"\r\n                    name=\"district\"\r\n                    className=\"form-select py-3\"\r\n                    value={basicFormik?.values?.district}\r\n                    onChange={basicFormik?.handleChange}\r\n                  >\r\n                    {districts?.map((district, i) => {\r\n                      return (\r\n                        <option key={i} value={district?.district}>\r\n                          {district?.district}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <FormHelperText className=\"text-danger\">\r\n                    {basicFormik?.touched.district &&\r\n                      basicFormik?.errors.district}\r\n                  </FormHelperText>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\"col-12 col-lg-6\">\r\n                <span>\r\n                  Pincode <b className=\"text-danger\">*</b>\r\n                </span>\r\n                <TextField\r\n                  id=\"pincode\"\r\n                  name=\"pincode\"\r\n                  fullWidth\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={basicFormik?.values?.pincode}\r\n                  onChange={basicFormik?.handleChange}\r\n                  error={\r\n                    basicFormik?.errors?.pincode &&\r\n                    basicFormik?.touched?.pincode\r\n                  }\r\n                  type=\"number\"\r\n                  helperText={\r\n                    basicFormik?.touched?.pincode &&\r\n                    basicFormik?.errors?.pincode\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Social Link */}\r\n          <div className=\"col\">\r\n            <h5>Social Links</h5>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row row-cols-1 row-cols-lg-2 g-3\">\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"fb\"\r\n                  name=\"fb\"\r\n                  label=\"Facebook\"\r\n                  size=\"large\"\r\n                  type={\"url\"}\r\n                  value={basicFormik.values.fb}\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.fb && Boolean(basicFormik.errors.fb)\r\n                  }\r\n                  helperText={basicFormik.touched.fb && basicFormik.errors.fb}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Facebook sx={{ color: \"blue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"twitter\"\r\n                  name=\"twitter\"\r\n                  label=\"Twitter\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={basicFormik.values.twitter}\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.twitter &&\r\n                    Boolean(basicFormik.errors.twitter)\r\n                  }\r\n                  helperText={\r\n                    basicFormik.touched.twitter && basicFormik.errors.twitter\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Twitter sx={{ color: \"skyblue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"insta\"\r\n                  name=\"insta\"\r\n                  label=\"Instagram\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={basicFormik.values.insta}\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.insta &&\r\n                    Boolean(basicFormik.errors.insta)\r\n                  }\r\n                  helperText={\r\n                    basicFormik.touched.insta && basicFormik.errors.insta\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Instagram sx={{ color: \"red\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"lkd\"\r\n                  name=\"lkd\"\r\n                  label=\"LinkedIn\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={basicFormik.values.lkd}\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.lkd && Boolean(basicFormik.errors.lkd)\r\n                  }\r\n                  helperText={basicFormik.touched.lkd && basicFormik.errors.lkd}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <LinkedIn sx={{ color: \"blue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"ytb\"\r\n                  name=\"ytb\"\r\n                  label=\"Youtube\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={basicFormik.values.ytb}\r\n                  onChange={basicFormik.handleChange}\r\n                  error={\r\n                    basicFormik.touched.ytb && Boolean(basicFormik.errors.ytb)\r\n                  }\r\n                  helperText={basicFormik.touched.ytb && basicFormik.errors.ytb}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <YouTube sx={{ color: \"red\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"col-12 col-lg-6\">\r\n            <Button\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n              className=\"rounded\"\r\n              size=\"large\"\r\n              type=\"submit\" // Make sure type is set to \"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </form>\r\n      {/* </div> */}\r\n      {/* <div className=\"mt-5\">\r\n        <InstituteAdditionalDetails />\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstituteBasicDetails;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useFormik } from \"formik\";\r\n// import Button from \"@mui/material/Button\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import FormControl from \"@mui/material/FormControl\";\r\n// import { apiAuth } from \"api\";\r\n// import { useGlobalContext } from \"global/context\";\r\n// import { FormHelperText } from \"@mui/material\";\r\n// import Swal from \"sweetalert2\";\r\n// import { useOutletContext } from \"react-router-dom\";\r\n// import useError from \"hooks/useError\";\r\n// import {jwtDecode} from \"jwt-decode\"; // ✅ FIXED\r\n// import {\r\n//   Facebook,\r\n//   Instagram,\r\n//   LinkedIn,\r\n//   Twitter,\r\n//   YouTube,\r\n// } from \"@mui/icons-material\";\r\n// import * as Yup from \"yup\";\r\n// import { InputAdornment } from \"@mui/material\";\r\n// import useCurrentLocation from \"hooks/useCurrentLocation\";\r\n// import InstituteProfilePic from \"./InstituteProfilePic\";\r\n\r\n// // ✅ Validation Schema\r\n// const additionalDetailsSchema = Yup.object().shape({\r\n//   title: Yup.string().max(10).required(\"Title is Required\"),\r\n//   first_name: Yup.string().max(100).required(\"First Name is Required\"),\r\n//   last_name: Yup.string().max(100).required(\"Last Name is Required\"),\r\n//   email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\r\n//   contact: Yup.string()\r\n//     .required(\"Phone Number is Required\")\r\n//     .matches(/^[0-9]{10}$/, \"Phone number must be 10 digits\"),\r\n//   fb: Yup.string()\r\n//     .matches(/^https?:\\/\\/(www\\.)?(facebook\\.com|fb\\.com)\\/.+/, \"Invalid Facebook URL\")\r\n//     .notRequired(),\r\n//   twitter: Yup.string()\r\n//     .matches(/^https?:\\/\\/(www\\.)?twitter\\.com\\/.+/, \"Invalid Twitter URL\")\r\n//     .notRequired(),\r\n//   insta: Yup.string()\r\n//     .matches(/^https?:\\/\\/(www\\.)?instagram\\.com\\/.+/, \"Invalid Instagram URL\")\r\n//     .notRequired(),\r\n//   lkd: Yup.string()\r\n//     .matches(/^https?:\\/\\/(www\\.)?linkedin\\.com\\/.+/, \"Invalid LinkedIn URL\")\r\n//     .notRequired(),\r\n//   ytb: Yup.string()\r\n//     .matches(/^https?:\\/\\/(www\\.)?youtube\\.com\\/.+/, \"Invalid YouTube URL\")\r\n//     .notRequired(),\r\n//   institution_name: Yup.string().max(200).required(\"Institution name is required\"),\r\n//   bio: Yup.string()\r\n//     .max(350, \"Bio must be 350 characters or less\")\r\n//     .required(\"Bio is required\"),\r\n//   institution_address: Yup.string().max(1000).required(\"Institution Address is required\"),\r\n//   state: Yup.string().max(200).required(\"State is required\"),\r\n//   district: Yup.string().max(1000).required(\"District is required\"),\r\n//   pincode: Yup.string()\r\n//     .required(\"Pincode is Required\")\r\n//     .matches(/^[0-9]{6}$/, \"Pincode must be 6 digits\"),\r\n// });\r\n\r\n// const InstituteBasicDetails = () => {\r\n//   const { ErrorResponder } = useError();\r\n//   const { token } = useGlobalContext();\r\n//   const [details, fetchDetails] = useOutletContext();\r\n//   const [districts, setDistricts] = useState([]);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [decodedToken, setDecodedToken] = useState(null); // ✅ Store decoded token\r\n//   const { states } = useCurrentLocation();\r\n\r\n//   // ✅ Get token from context or localStorage\r\n//   const getToken = () => {\r\n//     return token || localStorage.getItem(\"token\");\r\n//   };\r\n\r\n//   // ✅ Decode token once\r\n//   // useEffect(() => {\r\n//   //   const tokenValue = getToken();\r\n//   //   if (tokenValue) {\r\n//   //     try {\r\n//   //       const decoded = jwtDecode(tokenValue);\r\n//   //       setDecodedToken(decoded);\r\n//   //     } catch (error) {\r\n//   //       console.error(\"Error decoding token:\", error);\r\n//   //     }\r\n//   //   }\r\n//   // }, [token]);\r\n\r\n//   const basicFormik = useFormik({\r\n//     initialValues: {\r\n//       title: details?.title || \"Mr.\",\r\n//       first_name: details?.first_name || \"\",\r\n//       middle_name: details?.middle_name || \"\",\r\n//       last_name: details?.last_name || \"\",\r\n//       contact: details?.contact || \"\",\r\n//       email: details?.email || \"\",\r\n//       fb: details?.fb || \"\",\r\n//       twitter: details?.twitter || \"\",\r\n//       insta: details?.insta || \"\",\r\n//       lkd: details?.lkd || \"\",\r\n//       ytb: details?.ytb || \"\",\r\n//       institution_name: details?.institution_name || \"\",\r\n//       bio: details?.bio || \"\",\r\n//       institution_address: details?.institution_address || \"\",\r\n//       state: details?.state || \"\",\r\n//       district: details?.district || \"\",\r\n//       pincode: details?.pincode || \"\",\r\n//     },\r\n//     enableReinitialize: true,\r\n//     validationSchema: additionalDetailsSchema,\r\n//     onSubmit: async (values) => {\r\n//       setIsLoading(true);\r\n//       Swal.fire({\r\n//         width: 300,\r\n//         title: \"Updating...\",\r\n//         didOpen: () => Swal.showLoading(),\r\n//         allowOutsideClick: false,\r\n//       });\r\n\r\n//       try {\r\n//         const formData = new FormData();\r\n//         Object.keys(values).forEach((key) => {\r\n//           formData.append(key, values[key] || \"\");\r\n//         });\r\n\r\n//         const currentToken = getToken();\r\n//         if (!currentToken) throw new Error(\"Authentication token not found\");\r\n\r\n//         const res = await apiAuth.put(\r\n//           `/institute/profile?update_type=basic`,\r\n//           formData,\r\n//           {\r\n//             headers: {\r\n//               Authorization: `Bearer ${currentToken}`,\r\n//               \"Content-Type\": \"multipart/form-data\",\r\n//             },\r\n//           }\r\n//         );\r\n\r\n//         if (res.status === 200) {\r\n//           Swal.fire({\r\n//             title: res.data.message || \"Profile updated successfully!\",\r\n//             icon: \"success\",\r\n//             width: 400,\r\n//           });\r\n//           fetchDetails && fetchDetails();\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Update error:\", error);\r\n//         ErrorResponder(error);\r\n//         Swal.fire({\r\n//           title: \"Update Failed\",\r\n//           text: error?.response?.data?.message || \"Something went wrong\",\r\n//           icon: \"error\",\r\n//           width: 400,\r\n//         });\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   // ✅ State and District handling\r\n//   const handleStateIndexChange = async (stateValue) => {\r\n//     if (stateValue && states?.length) {\r\n//       const stateIndex = states.findIndex(\r\n//         (state) => state?.state?.toLowerCase() === stateValue.toLowerCase()\r\n//       );\r\n//       if (stateIndex !== -1 && states[stateIndex]?.District) {\r\n//         setDistricts(states[stateIndex].District);\r\n//       } else {\r\n//         setDistricts([]);\r\n//       }\r\n//       return stateIndex;\r\n//     }\r\n//     setDistricts([]);\r\n//   };\r\n\r\n//   const handleStateChange = (event) => {\r\n//     basicFormik.handleChange(event);\r\n//     basicFormik.setFieldValue(\"district\", \"\");\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     handleStateIndexChange(basicFormik?.values?.state);\r\n//   }, [basicFormik?.values?.state, states]);\r\n\r\n//   return (\r\n//     <>\r\n//       <InstituteProfilePic />\r\n//       <form onSubmit={basicFormik.handleSubmit}>\r\n//         <div className=\"row row-cols-1 row-cols-lg-2 g-2 gy-4\">\r\n          \r\n//           {/* ✅ Display Decoded Token */}\r\n//           <div className=\"col\">\r\n//             <h6>Decoded Token</h6>\r\n//           </div>\r\n//           <div className=\"col\">\r\n//             <TextField\r\n//               fullWidth\r\n//               value={decodedToken ? JSON.stringify(decodedToken) : \"No Token Found\"}\r\n//               label=\"Decoded Token\"\r\n//               InputLabelProps={{ shrink: true }}\r\n//               multiline\r\n//               rows={3}\r\n//               disabled\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Rest of your form fields here */}\r\n//           {/* ... */}\r\n          \r\n//           <div className=\"col-12 col-lg-6\">\r\n//             <Button\r\n//               color=\"success\"\r\n//               variant=\"contained\"\r\n//               className=\"rounded\"\r\n//               size=\"large\"\r\n//               type=\"submit\"\r\n//               disabled={isLoading || !basicFormik.isValid}\r\n//             >\r\n//               {isLoading ? \"Updating...\" : \"Update Profile\"}\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default InstituteBasicDetails;\r\n"],"names":["InstituteProfilePic","ErrorResponder","useError","token","useGlobalContext","details","useOutletContext","profile","setProfile","React","_jsx","_Fragment","children","_jsxs","className","onSubmit","async","e","preventDefault","toast","loading","formData","FormData","append","res","apiAuth","put","headers","Authorization","status","dismiss","success","data","message","error","Avatar","alt","name","src","URL","createObjectURL","logo","sx","width","height","IconButton","color","size","component","hidden","accept","type","onChange","_e$target","_e$target$files$","_e$target2","target","files","value","Popup","InsertPhotoOutlined","useCurrentLocation","states","setStates","useState","districts","setDistricts","liveState","setLiveState","liveDistrict","setLiveDistrict","liveCountry","setLiveCountry","livePostalCode","setLivePostalcode","currentAddress","setCurrentAddress","findingLocation","setFindingLocation","coords","setCoords","useEffect","apiJson","get","_res$data","console","log","pop2","warning","title","fetchStates","fetchCoordinates","_window","_window$navigator","_window$navigator$geo","window","navigator","geolocation","getCurrentPosition","coordinates","Geocode","setApiKey","process","setLanguage","setRegion","setLocationType","enableDebug","fromLatLng","latitude","longitude","then","response","address","results","formatted_address","address_components","forEach","values","index","types","toLowerCase","replace","long_name","trim","additionalDetailsSchema","Yup","shape","max","required","first_name","last_name","email","contact","matches","fb","notRequired","twitter","insta","lkd","ytb","institution_name","bio","institution_address","state","pincode","InstituteBasicDetails","_decodedToken$data","_decodedToken$data2","_decodedToken$data3","_decodedToken$data4","_decodedToken$data5","_decodedToken$data6","_decodedToken$data7","_basicFormik$values2","_basicFormik$values3","_basicFormik$values3$","_basicFormik$values4","_basicFormik$values4$","_basicFormik$values5","_basicFormik$touched","_basicFormik$errors","_basicFormik$values6","_basicFormik$values7","_basicFormik$errors2","_basicFormik$touched2","_basicFormik$touched3","_basicFormik$errors3","fetchDetails","decodedToken","setDecodedToken","localStorage","getItem","tokendata","decoded","jwtDecode","removeItem","basicFormik","useFormik","initialValues","middle_name","about_institute","district","enableReinitialize","validationSchema","_ref","resetForm","Swal","didOpen","newBio","replaceAll","currentToken","icon","setFieldValue","_basicFormik$values","stateValue","length","_states$index","findIndex","_state$state","District","handleStateIndexChange","handleSubmit","id","label","handleChange","TextField","fullWidth","InputLabelProps","shrink","disabled","touched","Boolean","errors","helperText","multiline","rows","FormControl","map","i","FormHelperText","InputProps","startAdornment","InputAdornment","position","Facebook","Twitter","Instagram","LinkedIn","YouTube"],"sourceRoot":""}