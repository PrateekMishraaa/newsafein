{"version":3,"file":"static/js/6564.84a9a688.chunk.js","mappings":"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","sources":["pages/dashboard/components/institute/setting/InstituteAdditionalDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { apiAuth } from \"api\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport { InputAdornment } from \"@mui/material\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  LinkedIn,\r\n  Twitter,\r\n  YouTube,\r\n} from \"@mui/icons-material\";\r\nimport { LinkedinIcon } from \"react-share\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport useError from \"hooks/useError\";\r\nimport { SimpleBreadCrumb } from \"components/ui\";\r\n\r\nconst additionalDetailsSchema = new Yup.object({\r\n  fb: Yup.string()\r\n    .matches(\r\n      /(?:www.facebook.com|www.fb.com|facebook.com|fb.com)/,\r\n      \"facebook profile url must match www.facebook.com\"\r\n    )\r\n    .notRequired(),\r\n  twitter: Yup.string()\r\n    .matches(\r\n      /(?:twitter.com|www.twitter.com)/,\r\n      \"twitter profile url must match www.twitter.com\"\r\n    )\r\n    .notRequired(),\r\n  insta: Yup.string()\r\n    .matches(\r\n      /(?:instagram.com|www.instagram.com)/,\r\n      \"Instagram profile url must match www.instagram.com\"\r\n    )\r\n    .notRequired(),\r\n  lkd: Yup.string()\r\n    .matches(\r\n      /(?:linkedin.com|www.linkedin.com)/,\r\n      \"Linkedin profile url must match www.linkedin.com\"\r\n    )\r\n    .notRequired(),\r\n  ytb: Yup.string()\r\n    .matches(\r\n      /(?:youtube.com|www.youtube.com)/,\r\n      \"Youtube profile url must match www.youtube.com\"\r\n    )\r\n    .notRequired(),\r\n  institution_name: Yup.string().required(\"Institution name is required\"),\r\n  bio: Yup.string()\r\n    .max(250, \"Too long! ( max 250 characters )\")\r\n    .required(\"Bio is required\"),\r\n  institution_address: Yup.string().required(\"Institution Address is required\"),\r\n  state: Yup.string().max(200).required(\"State is required\"),\r\n  pincode: Yup.string()\r\n    .required(\"Pin code is Required\")\r\n    .matches(/^[0-9]{6}$/, \"Invalid Pin code\"),\r\n});\r\n\r\nconst InstituteAdditionalDetails = () => {\r\n  const { ErrorResponder } = useError();\r\n  const { token } = useGlobalContext();\r\n  const [details, fetchDetails] = useOutletContext();\r\n\r\n  // Additional Formik\r\n  const additionalFormik = useFormik({\r\n    initialValues: {\r\n      fb: details?.fb,\r\n      twitter: details?.twitter,\r\n      insta: details?.insta,\r\n      lkd: details?.lkd,\r\n      ytb: details?.ytb,\r\n      institution_name: details?.institution_name,\r\n      bio: details?.bio,\r\n      institution_address: details?.institution_address,\r\n      state: details?.state,\r\n      pincode: details?.pincode,\r\n    },\r\n    validationSchema: additionalDetailsSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      console.log(values, \"====>val\");\r\n      Swal.fire({\r\n        width: 300,\r\n        title: \"Loading...\",\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n      const formData = new FormData();\r\n      const newBio = values.bio.replaceAll(\"'\", \"’\");\r\n      formData.append(\"fb\", values.fb);\r\n      formData.append(\"twitter\", values.twitter);\r\n      formData.append(\"insta\", values.insta);\r\n      formData.append(\"lkd\", values.lkd);\r\n      formData.append(\"ytb\", values.ytb);\r\n      formData.append(\"institution_name\", values.institution_name);\r\n      // formData.append(\"bio\", values.bio);\r\n      formData.append(\"bio\", newBio);\r\n      formData.append(\"institution_address\", values.institution_address);\r\n      formData.append(\"state\", values.state);\r\n      formData.append(\"pincode\", values.pincode);\r\n      if (token) {\r\n        try {\r\n          const res = await apiAuth.put(\r\n            `/institute/profile?update_type=additional`,\r\n            formData,\r\n            {\r\n              headers: {\r\n                Authorization: token,\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            Swal.fire({\r\n              title: res.data.message,\r\n              icon: \"success\",\r\n              width: 400,\r\n            });\r\n            fetchDetails();\r\n          }\r\n        } catch (error) {\r\n          ErrorResponder(error);\r\n        }\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <form onSubmit={additionalFormik.handleSubmit}>\r\n        <div className=\"row gy-4\">\r\n          {/* Bio */}\r\n          <div className=\"col-12 col-lg-6\">\r\n            <h6>Bio</h6>\r\n          </div>\r\n          <div className=\"col-12 col-lg-6\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              label=\"Bio\"\r\n              multiline\r\n              rows={4}\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={additionalFormik.values.bio}\r\n              onChange={additionalFormik.handleChange}\r\n              error={\r\n                additionalFormik.touched.bio &&\r\n                Boolean(additionalFormik.errors.bio)\r\n              }\r\n              helperText={\r\n                additionalFormik.touched.bio && additionalFormik.errors.bio\r\n              }\r\n            />\r\n            {additionalFormik?.values?.bio?.length} Characters ({\" \"}\r\n            {350 - additionalFormik?.values?.bio?.length} left)\r\n          </div>\r\n          {/* Institute Name */}\r\n          <div className=\"col-12 col-lg-6\">\r\n            <h6>Institute Name</h6>\r\n          </div>\r\n          <div className=\"col-12 col-lg-6\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"institution_name\"\r\n              name=\"institution_name\"\r\n              label=\"Institute Name\"\r\n              multiline\r\n              rows={3}\r\n              size=\"large\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={additionalFormik.values.institution_name}\r\n              onChange={additionalFormik.handleChange}\r\n              error={\r\n                additionalFormik.touched.institution_name &&\r\n                Boolean(additionalFormik.errors.institution_name)\r\n              }\r\n              helperText={\r\n                additionalFormik.touched.institution_name &&\r\n                additionalFormik.errors.institution_name\r\n              }\r\n            />\r\n          </div>\r\n          {/* Institute Address */}\r\n          <div className=\"col-12 col-lg-6\">\r\n            <h6>Institute Address</h6>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-6\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"institution_address\"\r\n                  name=\"institution_address\"\r\n                  label=\"Institute Address\"\r\n                  multiline\r\n                  rows={3}\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={additionalFormik.values.institution_address}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.institution_address &&\r\n                    Boolean(additionalFormik.errors.institution_address)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.institution_address &&\r\n                    additionalFormik.errors.institution_address\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-lg-6\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"state\"\r\n                  name=\"state\"\r\n                  label=\"State\"\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={additionalFormik.values.state}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.state &&\r\n                    Boolean(additionalFormik.errors.state)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.state &&\r\n                    additionalFormik.errors.state\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-12 col-lg-6 mt-3\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"pincode\"\r\n                  name=\"pincode\"\r\n                  label=\"Pin Code\"\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={additionalFormik.values.pincode}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.pincode &&\r\n                    Boolean(additionalFormik.errors.pincode)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.pincode &&\r\n                    additionalFormik.errors.pincode\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Social Link */}\r\n          <div className=\"col-12 col-lg-6\">\r\n            <h5>Social Links</h5>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row row-cols-1 row-cols-lg-2 g-2\">\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"fb\"\r\n                  name=\"fb\"\r\n                  label=\"Facebook\"\r\n                  size=\"large\"\r\n                  type={\"url\"}\r\n                  value={additionalFormik.values.fb}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.fb &&\r\n                    Boolean(additionalFormik.errors.fb)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.fb && additionalFormik.errors.fb\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Facebook sx={{ color: \"blue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"twitter\"\r\n                  name=\"twitter\"\r\n                  label=\"Twitter\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={additionalFormik.values.twitter}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.twitter &&\r\n                    Boolean(additionalFormik.errors.twitter)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.twitter &&\r\n                    additionalFormik.errors.twitter\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Twitter sx={{ color: \"skyblue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"insta\"\r\n                  name=\"insta\"\r\n                  label=\"Instagram\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={additionalFormik.values.insta}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.insta &&\r\n                    Boolean(additionalFormik.errors.insta)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.insta &&\r\n                    additionalFormik.errors.insta\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Instagram sx={{ color: \"red\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"lkd\"\r\n                  name=\"lkd\"\r\n                  label=\"LinkedIn\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  value={additionalFormik.values.lkd}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.lkd &&\r\n                    Boolean(additionalFormik.errors.lkd)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.lkd && additionalFormik.errors.lkd\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <LinkedIn sx={{ color: \"blue\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"ytb\"\r\n                  name=\"ytb\"\r\n                  label=\"Youtube\"\r\n                  type={\"url\"}\r\n                  size=\"large\"\r\n                  InputLabelProps={{ shrink: true }}\r\n                  value={additionalFormik.values.ytb}\r\n                  onChange={additionalFormik.handleChange}\r\n                  error={\r\n                    additionalFormik.touched.ytb &&\r\n                    Boolean(additionalFormik.errors.ytb)\r\n                  }\r\n                  helperText={\r\n                    additionalFormik.touched.ytb && additionalFormik.errors.ytb\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <YouTube sx={{ color: \"red\" }} />{\" \"}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12 col-lg-6\">\r\n            <Button\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n              className=\"py-3\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstituteAdditionalDetails;\r\n"],"names":["additionalDetailsSchema","Yup","fb","matches","notRequired","twitter","insta","lkd","ytb","institution_name","required","bio","max","institution_address","state","pincode","InstituteAdditionalDetails","_additionalFormik$val","_additionalFormik$val2","_additionalFormik$val3","_additionalFormik$val4","ErrorResponder","useError","token","useGlobalContext","details","fetchDetails","useOutletContext","additionalFormik","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","async","values","_ref","resetForm","console","log","Swal","width","title","didOpen","formData","FormData","newBio","replaceAll","append","res","apiAuth","put","headers","Authorization","status","data","message","icon","error","_jsx","_Fragment","children","handleSubmit","_jsxs","className","TextField","fullWidth","id","name","label","multiline","rows","size","InputLabelProps","shrink","value","onChange","handleChange","touched","Boolean","errors","helperText","length","type","InputProps","startAdornment","InputAdornment","position","Facebook","sx","color","Twitter","Instagram","LinkedIn","YouTube","Button","variant"],"sourceRoot":""}