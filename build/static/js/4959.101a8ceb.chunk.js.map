{"version":3,"file":"static/js/4959.101a8ceb.chunk.js","mappings":"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","sources":["pages/Admin/pages/websitecontent/AddNews.js","utils/CKEditor.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { apiAuth } from 'api';\r\nimport MyCKEditor from 'utils/CKEditor';\r\n\r\nconst AddNews = () => {\r\n  let [newsContent, setNewsContent] = useState();\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      heading: \"\",\r\n      content: \"\",\r\n      img: \"\",\r\n      bgimg: \"\",\r\n      author: \"\",\r\n      publish_date: \"\",\r\n    },\r\n    onSubmit: async (values, action) => {\r\n      console.log(\"values: \", values, newsContent);\r\n      const data = { ...values, content: newsContent }\r\n      console.log(data)\r\n      try {\r\n        const res = await apiAuth.post('admin/news', data);\r\n        if (res.status == 200 || res?.success == 1) {\r\n          window.history.back();\r\n\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  })\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ font: [] }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ script: \"sub\" }, { script: \"super\" }],\r\n      [\"blockquote\", \"code-block\"],\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n      [\"clean\"],\r\n    ],\r\n  };\r\n  // chr(34)= \"\"\r\n  // chr(32)= space\r\n  //TODO: replace(chr(34) with chr(32) before sending data to database)\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(\"title:\" + title, \"heading\" + heading, \"content\" + content, \"img\" + img, \"bgImg\" + bgImg, \"author\" + author);\r\n  // }\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={Formik.handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label for=\"title\" className=\"form-label\">Title</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"title\" value={Formik.values.title} name='title' aria-describedby=\"title\" onChange={Formik.handleChange} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"heading\" className=\"form-label\">Description</label>\r\n            <input type=\"text\" className=\"form-control\" name='heading' value={Formik.values.heading} id=\"heading\" onChange={Formik.handleChange} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"img\" className=\"form-label\">Image</label>\r\n            <input type=\"file\" className=\"form-control  pt-3\" accept=\".png, .jpg, .jpeg\" name=\"files[]\" id=\"img\" onChange={(e) => {\r\n              if (e.target.files.length) {\r\n                Formik.setFieldValue(\"img\", e.target.files[0])\r\n              }\r\n            }} />\r\n          </div>\r\n          {/* <div className=\"mb-3\">\r\n            <label for=\"bgimg\" className=\"form-label\">Background Image</label>\r\n            <input type=\"file\" className=\"form-control pt-3\" name='bgimg' value={Formik.values.bgimg} id=\"bgimg\" onChange={Formik.handleChange} />\r\n          </div> */}\r\n          <div className=\"mb-3\">\r\n            <label for=\"author\" className=\"form-label\">Author</label>\r\n            <input type=\"text\" className=\"form-control\" name='author' value={Formik.values.author} id=\"author\" onChange={Formik.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label for=\"publishDate\" className=\"form-label\">Publish Date</label>\r\n            <input type=\"date\" className=\"form-control\" name='publish_date' value={Formik.values.publish_date} id=\"publishDate\" onChange={Formik.handleChange} />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label for=\"Content\" className=\"form-label\">Content</label>\r\n            <MyCKEditor content={newsContent} setContent={setNewsContent} />\r\n\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNews","import React from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nconst MyCKEditor = ({ content, setContent }) => {\r\n    const handleEditorChange = (event, editor) => {\r\n        const data = editor.getData();\r\n        setContent(data);\r\n    };\r\n    return (\r\n        <div>\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content ? content : \"\"}\r\n                onChange={handleEditorChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCKEditor;\r\n"],"names":["AddNews","newsContent","setNewsContent","useState","Formik","useFormik","initialValues","title","heading","content","img","bgimg","author","publish_date","onSubmit","async","values","action","console","log","data","_objectSpread","res","apiAuth","post","status","success","window","history","back","err","_jsx","_Fragment","children","_jsxs","handleSubmit","className","for","type","id","value","name","onChange","handleChange","accept","e","target","files","length","setFieldValue","MyCKEditor","setContent","_ref","CKEditor","editor","ClassicEditor","handleEditorChange","event","getData"],"sourceRoot":""}