{"version":3,"file":"static/js/4304.3fff60d3.chunk.js","mappings":"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","sources":["pages/dashboard/components/institute/component/BulkDataFormat.jsx","components/admin/compliance/ComplianceTable.jsx","components/admin/user/institute/InstituteDetail.jsx","components/admin/user/institute/CertificateForm.jsx","components/admin/user/institute/data/AdminInstituteStudents.jsx","components/admin/user/institute/data/AdminStudentRegistration.jsx","components/admin/user/institute/data/CertificateData.jsx","components/admin/user/institute/data/DoughnutInstitute.jsx","components/admin/user/institute/data/StudentBulkLoginAdmin.jsx","components/admin/user/institute/data/AdminInstituteGallery.jsx"],"sourcesContent":["/*\r\n    ==== Student Bulk Register Data Editer ====\r\n    - Edit and upload data. \r\n */\r\nimport {\r\n  Cancel,\r\n  CloseOutlined,\r\n  DoneAll,\r\n  RestartAlt,\r\n  Upload,\r\n  UploadFile,\r\n} from \"@mui/icons-material\";\r\nimport { Button, TextField, Tooltip } from \"@mui/material\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { pop2 } from \"utils/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as xlsx from \"xlsx\";\r\nimport { toast } from \"react-toastify\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment\";\r\nimport { IconButton } from \"@mui/joy\";\r\n// !json[0]?.First_Name && !json[0]?.Last_Name && !json[0]?.Contact && !json[0]?.Email\r\nfunction BulkDataFormat({ data, setFileData, setFile, upload }) {\r\n  const [dataList, setDataList] = useState(data);\r\n  const [update, setUpdate] = useState();\r\n  const [checkEmails, setCheckEmails] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editData, setEditData] = useState({\r\n    First_name: \"\",\r\n    Last_name: \"\",\r\n    Email: \"\",\r\n    Contact: \"\",\r\n    DOB: \"\",\r\n  });\r\n  /*\r\n   return already exists Emails.\r\n   */\r\n  useEffect(() => {\r\n    pop2.loading();\r\n    const emails = [];\r\n    dataList?.map(({ Email }) => {\r\n      emails.push(Email);\r\n    }); // List of uploaded Emails\r\n    apiJsonAuth\r\n      .post(\"institute/allEmails\", emails)\r\n      .then(({ data }) => {\r\n        setCheckEmails(data?.emails); // use in (validateRow) for Emails Validation.\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        pop2.error(\"Something Went Wrong!!\");\r\n      });\r\n\r\n    // Update File Object On Date Update\r\n    generateAsExcel(dataList);\r\n  }, [dataList, update]);\r\n\r\n  /*\r\n   ====checkDublicateEmai====\r\n   - count the each email count in the data.\r\n   - return count of an email which is passed. \r\n   */\r\n  function checkDublicateEmai(email, data) {\r\n    var count = -1;\r\n    data?.map(({ Email }) => {\r\n      if (email === Email) {\r\n        count += 1;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  /*\r\n ====checkDublicateContact====\r\n - count the each contact count in the data.\r\n - return count of an contact which is passed. \r\n */\r\n  function checkDublicateContact(contact, data) {\r\n    var count = -1;\r\n    data?.map(({ Contact }) => {\r\n      if (contact === Contact) {\r\n        count += 1;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  /* \r\n  =========deleteData=====\r\n  -- delete singe item (row) from the data\r\n   */\r\n  function deleteData(i) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, remove it!\",\r\n    }).then(({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        let tempdata = dataList;\r\n        delete tempdata[i];\r\n        setDataList(tempdata);\r\n        setUpdate(!update);\r\n        toast.success(\"Deleted Successfully.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n   ===generateAsExcel===\r\n   - conver json date to file object. \r\n   */\r\n  function generateAsExcel(data) {\r\n    try {\r\n      const worksheet = xlsx.utils.json_to_sheet(data);\r\n      const workbook = xlsx.utils.book_new();\r\n      xlsx.utils.book_append_sheet(workbook, worksheet, \"sheet1\");\r\n      var xlsblob = new Blob(\r\n        [\r\n          new Uint8Array(\r\n            xlsx.write(workbook, { bookType: \"xlsx\", type: \"array\" })\r\n          ),\r\n        ],\r\n        { type: \"application/octet-stream\" }\r\n      );\r\n      const file = new File([xlsblob], \"demo.xlsx\", { type: \"xlsx\" });\r\n      setFile(file); // update file\r\n      // }\r\n    } catch (err) {\r\n      console.log(\"Error:\", err);\r\n    }\r\n  }\r\n\r\n  /* \r\n  =====validateRow====\r\n  - validate fields for each row\r\n   */\r\n  function validateRow(item) {\r\n    if (checkEmails?.includes(item?.Email)) {\r\n      return { message: \"Emails Already Exists\" };\r\n    } else if (checkDublicateEmai(item?.Email, dataList)) {\r\n      return { message: \"Duplicate Email\" };\r\n    } else if (checkDublicateContact(item?.Contact, dataList)) {\r\n      return { message: \"Duplicate Contact\" };\r\n    } else if (!item?.First_name || !item?.Contact || !item?.Email) {\r\n      return { message: \"Data Missing\" };\r\n    } else if (String(item?.Contact).length != 10 || !Number(item?.Contact)) {\r\n      return { message: \"Incorrect Contact\" };\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /* \r\n  ====validateAndUpload====\r\n  - upload data when add the is validated.\r\n   */\r\n  function validateAndUpload() {\r\n    var check = true;\r\n    if (dataList.length) {\r\n      dataList?.map((item) => {\r\n        if (validateRow(item)) {\r\n          check = false;\r\n        }\r\n      }); /// validate each item before Upload.\r\n      if (check) {\r\n        upload();\r\n      } else {\r\n        toast.warning(\"Error In Data\");\r\n      }\r\n    } else {\r\n      toast.error(\"No Data Found!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-2\">\r\n        <Button\r\n          className=\"me-2 p-2 px-3\"\r\n          variant=\"outlined\"\r\n          color=\"error\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            setFileData();\r\n            setFile();\r\n          }}\r\n          startIcon={<Cancel />}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"p-2 px-3\"\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            validateAndUpload();\r\n          }}\r\n          startIcon={<UploadFile />}\r\n        >\r\n          Upload\r\n        </Button>\r\n      </div>\r\n      <table\r\n        className=\"table position-relative pb-0 mb-0\"\r\n        style={{ fontSize: \"15px\" }}\r\n      >\r\n        <thead className=\"bg-light-white2-grad\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First&nbsp;Name</th>\r\n            <th scope=\"col\">Last&nbsp;Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Contact</th>\r\n            <th scope=\"col\">DOB</th>\r\n            <th scope=\"col\">Error(If&nbsp;Any) </th>\r\n            <th scope=\"col\">Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {dataList?.map((item, i) => {\r\n            console.log(item, \"item===>\");\r\n            return (\r\n              <tr\r\n                key={i + 1}\r\n                title={validateRow(item)?.message}\r\n                className={validateRow(item) ? \"table-danger\" : \"\"}\r\n                onDoubleClick={() => {\r\n                  setEdit(i);\r\n                  setEditData(item);\r\n                }}\r\n              >\r\n                <th scope=\"row\">{i + 1}</th>\r\n                {edit === i ? (\r\n                  <>\r\n                    <td>\r\n                      <TextField\r\n                        defaultValue={editData?.First_name}\r\n                        onChange={(e) => {\r\n                          setEditData((prv) => ({\r\n                            ...prv,\r\n                            First_name: e.target.value,\r\n                          }));\r\n                        }}\r\n                        size=\"small\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        defaultValue={editData?.Last_name}\r\n                        onChange={(e) => {\r\n                          setEditData((prv) => ({\r\n                            ...prv,\r\n                            Last_name: e.target.value,\r\n                          }));\r\n                        }}\r\n                        size=\"small\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        type=\"email\"\r\n                        defaultValue={editData.Email}\r\n                        onChange={(e) => {\r\n                          setEditData((prv) => ({\r\n                            ...prv,\r\n                            Email: e.target.value,\r\n                          }));\r\n                        }}\r\n                        size=\"small\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        defaultValue={editData.Contact}\r\n                        onChange={(e) => {\r\n                          setEditData((prv) => ({\r\n                            ...prv,\r\n                            Contact: e.target.value,\r\n                          }));\r\n                        }}\r\n                        size=\"small\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <TextField\r\n                        defaultValue={moment(editData.DOB, \"DD-MM-YYYY\").format(\r\n                          \"DD-MM-YYYY\"\r\n                        )}\r\n                        onChange={(e) => {\r\n                          setEditData((prv) => ({\r\n                            ...prv,\r\n                            DOB: e.target.value,\r\n                          }));\r\n                        }}\r\n                        size=\"small\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <small>\r\n                        <Tooltip title=\"Update\">\r\n                          <DoneAll\r\n                            sx={{ color: \"blue\" }}\r\n                            onClick={() => {\r\n                              let tempdata = dataList;\r\n                              tempdata[i] = editData;\r\n                              setDataList(tempdata);\r\n                              setEdit(false);\r\n                              setEdit();\r\n                              setUpdate(!update);\r\n                            }}\r\n                          />\r\n                        </Tooltip>\r\n                      </small>\r\n                    </td>\r\n                    <td>\r\n                      <small>\r\n                        <Tooltip title=\"Back\">\r\n                          <RestartAlt\r\n                            sx={{ color: \"black\" }}\r\n                            onClick={() => {\r\n                              setEdit(false);\r\n                            }}\r\n                          />\r\n                        </Tooltip>\r\n                      </small>\r\n                    </td>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <td>{item?.First_name}</td>\r\n                    <td>{item?.Last_name}</td>\r\n                    <td>{item?.Email}</td>\r\n                    <td>{item?.Contact}</td>\r\n                    <td>\r\n                      {moment(item?.DOB, \"DD-MM-YYYY\").format(\"DD-MM-YYYY\")}\r\n                    </td>\r\n                    <td>{validateRow(item)?.message}</td>\r\n                    <td className=\"p-0\">\r\n                      <Tooltip title=\"Edit\">\r\n                        <IconButton\r\n                          className=\"m-2 text-success bg-success bg-opacity-25\"\r\n                          onClick={() => {\r\n                            setEdit(i);\r\n                            setEditData(item);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          <EditIcon />{\" \"}\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Delete\">\r\n                        <IconButton\r\n                          className=\"text-danger bg-danger bg-opacity-25\"\r\n                          onClick={() => {\r\n                            deleteData(i);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          <CloseOutlined />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </td>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BulkDataFormat;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ComplianceTable = ({ reload }) => {\r\n  const [compliances, setCompliances] = useState([]);\r\n\r\n  const fetchCompliances = () => {\r\n    apiJsonAuth(\"/admin/compliance\").then((response) => {\r\n      setCompliances(response.data.result);\r\n    });\r\n  };\r\n  const handleDelete = (id) => {\r\n    apiJsonAuth.delete(\"/admin/compliance/\" + id).then((res) => {\r\n      toast.dismiss();\r\n      toast.success(\"Deleted Successfully\");\r\n      fetchCompliances();\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchCompliances();\r\n  }, [reload]);\r\n  return (\r\n    <div className=\"py-3\">\r\n      <div className=\"table-responsive border rounded-3\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#ID</th>\r\n              <th colSpan={2}>Compliance Name</th>\r\n              <th>Created</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {compliances?.map((template) => (\r\n              <tr style={{ cursor: \"pointer\" }} key={template.id}>\r\n                <td>{template?.id}</td>\r\n                <td colSpan={2}>{template?.title}</td>\r\n                <td>{moment(template?.createdAt).calendar()}</td>\r\n                <td>\r\n                  <div className=\"d-flex\">\r\n                    <Tooltip title=\"Edit Template\" placement=\"top\">\r\n                      <Link to={\"/admin/compliance/category/\" + template?.id}>\r\n                        <IconButton color=\"warning\">\r\n                          <Edit />\r\n                        </IconButton>\r\n                      </Link>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Template\" placement=\"top\">\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDelete(template.id)}\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {DoughnutInstitute} from \".\";\r\n\r\nexport const InstituteDetail = ({ datas, dataStudent, dataDelegates, certificatesByInstitutes }) => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"charts row row-cols-1 row-cols-md-2 row-cols-lg-3 g-2 mb-3\">\r\n        <div className=\"col\">\r\n          <DoughnutInstitute Student={dataStudent?.length} allStudents={datas?.question1} StudentName={\"Students\"} allStudentsName={\"All Students\"} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <DoughnutInstitute Student={dataStudent?.length - dataDelegates?.length} allStudents={dataDelegates?.length} StudentName={\"Students\"} allStudentsName={\"Delegates \"} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <DoughnutInstitute Student={dataStudent?.length - certificatesByInstitutes?.length} allStudents={certificatesByInstitutes?.length} StudentName={\"Students\"} allStudentsName={\"Certificates\"} />\r\n        </div>\r\n      </div>\r\n      <div className=\"table-responsive institute-data rounded-3 border\">\r\n        <table className=\"table table-borderless table-striped table-lg\">\r\n          <tbody>\r\n            {Object.keys(datas).map((keyName, index) => {\r\n              const regex = /title|first_name|last_name|institution_name|institution_address|ytb|lkd|twitter|ig|state|pincode|email|contact/;\r\n              if (regex.test(keyName))\r\n                return (\r\n                  <tr key={index} className={`${!datas[keyName] ? \"d-none\" : \"\"}`}>\r\n                    <td scope=\"row\" className=\" fs-6 text-capitalize\">\r\n                      {keyName?.replace(\"_\", \" \")}\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"fs-6 line-clamp-blog\"> {datas[keyName]}</span>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { apiAuth, apiJsonAuth } from \"api\";\r\nimport { useFormik } from \"formik\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { Popup } from \"utils/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IconButton } from \"@mui/joy\";\r\nimport { ClassSharp, Delete, Edit } from \"@mui/icons-material\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport function CertificateForm({ id }) {\r\n  let [certificateData, setCertificateData] = useState();\r\n  let [CourseCertificates, setCourseCertificates] = useState([]);\r\n  let [openeditForm, setOpenEditForm] = useState(false);\r\n  let [certificate, setCertificate] = useState();\r\n  const [states, setStates] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  let [update, setUpdate] = useState(0);\r\n  const [showModal, setShowModal] = useState({\r\n    add: false,\r\n    edit: false,\r\n  });\r\n  const handleModal = (modal) => {\r\n    if (modal == \"add\") {\r\n      setShowModal({ ...showModal, add: !showModal.add });\r\n    } else {\r\n      setShowModal({ ...showModal, edit: !showModal.edit });\r\n    }\r\n  };\r\n  let [state, setState] = useState();\r\n  let { adminRoles } = useGlobalContext();\r\n\r\n  const getCertificatesById = async () => {\r\n    try {\r\n      const res = await apiJsonAuth.get(`admin/certificate/${id}`);\r\n      if (res.status == 200) {\r\n        setCourseCertificates(res?.data?.result);\r\n        setCertificateData(res?.data?.result[0]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      cert_img: \"\",\r\n      state: \"\",\r\n      courseId: \"\",\r\n    },\r\n    onSubmit: async (values, action) => {\r\n      try {\r\n        toast.loading();\r\n        const res = await apiAuth.post(`admin/certificate/${id}`, values);\r\n        if (res.status == 200 || res?.success == 1) {\r\n          Popup(\"success\", res.data.message, undefined, 1500);\r\n          getCertificatesById();\r\n          handleModal(\"add\");\r\n        }\r\n      } catch (err) {\r\n        Popup(\"error\", err?.response?.data?.message);\r\n        handleModal(\"add\");\r\n      }\r\n    },\r\n  });\r\n  const FormikEdit = useFormik({\r\n    initialValues: {\r\n      certificate_url: certificate,\r\n      state: state,\r\n    },\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, action) => {\r\n      Popup(\"loading\");\r\n      try {\r\n        const res = await apiAuth.put(`admin/certificate/${id}`, values);\r\n        if (res.status == 200 || res?.success == 1) {\r\n          Popup(\"success\", res.data.message, undefined, 1500);\r\n          getCertificatesById();\r\n          setOpenEditForm(false);\r\n        }\r\n      } catch (err) {\r\n        Popup(\"error\", err?.response?.data?.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  //======Delete certificate  handler======\r\n  // const handleDelete = async () => {\r\n  //   try {\r\n  //     const res = await apiAuth.delete(`admin/certificate/${id}`);\r\n  //     if (res) {\r\n  //       toast.dismiss();\r\n  //       toast.success(\"Deleted Successfully\");\r\n  //       getCertificatesById();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error, \"Certificate Delete====>\");\r\n  //   }\r\n  // };\r\n\r\n  const handleDeleteInsCert = async () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You wanted to delete this certificate?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Confirm\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          const res = await apiAuth.delete(`admin/certificate/${id}`);\r\n          if (res) {\r\n            toast.dismiss();\r\n            toast.success(\"Deleted Successfully\");\r\n            getCertificatesById();\r\n          }\r\n        } catch (error) {\r\n          console.log(error, \"Certificate Delete====>\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Fetch States and Courses\r\n  const fetchStatesCourses = async () => {\r\n    const states = await apiAuth.get(\"/v2/public/state\");\r\n    if (states.status === 200) {\r\n      setStates(states?.data?.states);\r\n    }\r\n    const courses = await apiJsonAuth.get(\"/course\");\r\n    if (courses?.status === 200) {\r\n      setCourses(courses?.data.courses);\r\n    }\r\n  };\r\n  // console.log({ states: states, courses: courses });\r\n\r\n  useEffect(() => {\r\n    getCertificatesById();\r\n    fetchStatesCourses();\r\n  }, [openeditForm]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"certificate\">\r\n        <div>\r\n          <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n            <h4>Certificate Table</h4>\r\n            <button className=\"btn\" onClick={() => handleModal(\"add\")}>\r\n              Add Certificate\r\n            </button>\r\n          </div>\r\n          {/* <img className=\"col-12\" src={certificateData?.certificate_url} height=\"300px\"></img> */}\r\n          <div className=\"table-responsive border rounded-3\">\r\n            <table class=\"table table-striped \">\r\n              <thead>\r\n                <th>certificate Image</th>\r\n                <th>State</th>\r\n                <th>Course</th>\r\n                <th>InstituteId</th>\r\n                <th>Created at</th>\r\n                <th>Updated at</th>\r\n                <th>Actions</th>\r\n              </thead>\r\n              <tbody>\r\n                {CourseCertificates?.map((courseCert, CertIndex) => (\r\n                  <tr>\r\n                    <td>\r\n                      <img\r\n                        src={courseCert?.certificate_url}\r\n                        alt=\"\"\r\n                        width={150}\r\n                        height={80}\r\n                        className=\"border bg-white\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    </td>\r\n                    <td>{courseCert?.state}</td>\r\n                    <td>{courseCert?.courseId}</td>\r\n                    <td>{courseCert?.instituteId}</td>\r\n                    <td>{courseCert?.createdAt}</td>\r\n                    <td>{courseCert?.updatedAt}</td>\r\n                    <td>\r\n                      {/* <IconButton color=\"success\" onClick={() => handleModal(\"edit\")}>\r\n                        <Edit />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        className=\"ms-2\"\r\n                        onClick={() => handleDeleteInsCert()}\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {/* Add Certificate Modal */}\r\n        <Modal show={showModal.add} onHide={() => handleModal(\"add\")}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Certificate Template</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={Formik.handleSubmit}>\r\n              <div className=\"mb-2\">\r\n                <label htmlFor=\"certificate\" className=\"form-label text-dark\">\r\n                  Certificate Image\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"cert_img\"\r\n                  className=\"form-control\"\r\n                  id=\"cert_img\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files.length) {\r\n                      Formik.setFieldValue(\"cert_img\", e.target.files[0]);\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label htmlFor=\"State\" className=\"form-label text-dark\">\r\n                  State\r\n                </label>\r\n                <select\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  className=\"form-select\"\r\n                  id=\"state\"\r\n                  value={Formik.values.state}\r\n                  onChange={Formik.handleChange}\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {states.map((state, stateIndex) => (\r\n                    <option key={stateIndex} value={state?.State}>\r\n                      {state?.State}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label htmlFor=\"courseId\" className=\"form-label text-dark\">\r\n                  Course\r\n                </label>\r\n                <select\r\n                  type=\"text\"\r\n                  name=\"courseId\"\r\n                  className=\"form-select\"\r\n                  id=\"courseId\"\r\n                  value={Formik.values.courseId}\r\n                  onChange={Formik.handleChange}\r\n                >\r\n                  <option value=\"\">Select Course</option>\r\n                  {courses.map((course, courseIndex) => (\r\n                    <option key={courseIndex} value={course?.id}>\r\n                      {course?.course_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn me-2\"\r\n                onClick={() => handleModal(\"add\")}\r\n              >\r\n                Close\r\n              </button>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n        {/* Edit Certificate Modal */}\r\n        <Modal show={showModal.edit} onHide={() => handleModal(\"edit\")}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Certificate Template</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={FormikEdit.handleSubmit}>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"certificate\" className=\"form-label\">\r\n                  Certificate\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  name=\"certificate_url\"\r\n                  className=\"form-control\"\r\n                  id=\"certificate\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files.length) {\r\n                      FormikEdit.setFieldValue(\r\n                        \"certificate_url\",\r\n                        e.target.files[0]\r\n                      );\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label htmlFor=\"State\" className=\"form-label text-dark\">\r\n                  State\r\n                </label>\r\n                <select\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  className=\"form-select\"\r\n                  id=\"state\"\r\n                  value={FormikEdit.values.state}\r\n                  onChange={FormikEdit.handleChange}\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {states.map((state, stateIndex) => (\r\n                    <option key={stateIndex} value={state?.State}>\r\n                      {state?.State}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-2\">\r\n                <label htmlFor=\"courseId\" className=\"form-label text-dark\">\r\n                  Course\r\n                </label>\r\n                <select\r\n                  type=\"text\"\r\n                  name=\"courseId\"\r\n                  className=\"form-select\"\r\n                  id=\"courseId\"\r\n                  value={FormikEdit.values.courseId}\r\n                  onChange={FormikEdit.handleChange}\r\n                >\r\n                  <option value=\"\">Select Course</option>\r\n                  {courses.map((course, courseIndex) => (\r\n                    <option key={courseIndex} value={course?.id}>\r\n                      {course?.course_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn me-2\"\r\n                onClick={() => handleModal()}\r\n              >\r\n                Close\r\n              </button>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AdminStudentRegistration, StudentBulkLoginAdmin } from \".\";\r\nimport { Button } from \"@mui/material\";\r\nimport { LocalFireDepartmentSharp } from \"@mui/icons-material\";\r\nimport useError from \"hooks/useError\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar } from \"@mui/joy\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const AdminInstituteStudents = () => {\r\n  let [datas, setData] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"student\");\r\n  let [limit, setLimit] = useState(10);\r\n  let [dataStudent, setDataStudent] = useState([]);\r\n  let [update, setUpdate] = useState(0);\r\n  let [searchTerm, setSearchTerm] = useState(\"\");\r\n  let { adminRoles } = useGlobalContext();\r\n  let [students, setStudents] = useState([]);\r\n  const { ErrorResponder } = useError();\r\n  let param = useParams();\r\n  let instituteId = param.id;\r\n  \r\n  const fetchStudents = async () => {\r\n    try {\r\n      const res = await apiJsonAuth.get(`/institute/data?type=students&instituteId=${instituteId}&search=${searchTerm}&role=${userRole}`, {});\r\n      if (res.status === 200) {\r\n        setStudents(res.data.result);\r\n      }\r\n    } catch (error) {\r\n      ErrorResponder(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, [userRole]);\r\n  return (\r\n    <div>\r\n      <div className=\"row row-cols-1 row-cols-lg-2 mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  fetchStudents();\r\n                }\r\n              }}\r\n              className=\"form-control\"\r\n              value={searchTerm}\r\n              label=\"Search Student Name Here....\"\r\n            />\r\n            <div className=\"d-flex\"></div>\r\n            {searchTerm.length ? (\r\n              <button\r\n                className=\"btn btn-outline-danger \"\r\n                onClick={() => {\r\n                  setSearchTerm(\"\");\r\n                  fetchStudents();\r\n                }}>\r\n                <i className=\"bi bi-trash\"></i> clear\r\n              </button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <button\r\n              className=\"btn btn-success border-success\"\r\n              sx={{ background: \"orange\", color: \"white\" }}\r\n              onClick={() => {\r\n                fetchStudents();\r\n              }}>\r\n              <i className=\"bi bi-search\"></i> Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"d-flex\">\r\n            <select value={userRole} onChange={(e) => setUserRole(e.target.value)} className=\"form-select d-inline-block me-2\">\r\n              <option>student</option>\r\n              <option>teacher</option>\r\n              <option>coordinator</option>\r\n            </select>\r\n            <AdminStudentRegistration hidden={!(adminRoles() === 1)} collegeId={instituteId} update={update} setUpdate={setUpdate} />\r\n            <StudentBulkLoginAdmin instituteId={datas?.instituteId} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"student-data table-responsive rounded-3 border\">\r\n        <table className=\"table\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Profile\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Student&nbsp;Name\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Guardian&nbsp;name\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Address\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Email\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Contact\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Resume\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                DOB\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Gender\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Facebook\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Twitter\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Instagram\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                LinkedIn\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Youtube\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Created&nbsp;At\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Updated&nbsp;At\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {(students.length ? students : dataStudent).map((data, index) => {\r\n              if (index < limit)\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <Avatar src={data?.profile} alt={data?.first_name}></Avatar>\r\n                    </td>\r\n                    <td>\r\n                      {data?.first_name} {data?.last_name}\r\n                    </td>\r\n                    <td>{data?.father_name}</td>\r\n                    <td>\r\n                      {data?.district} {data?.state} {data?.pincode}\r\n                    </td>\r\n                    <td>{data?.email}</td>\r\n                    <td>{data?.contact}</td>\r\n                    <td>{data?.resume}</td>\r\n                    <td>{data?.status}</td>\r\n                    <td>{moment(data?.dob).calendar()}</td>\r\n                    <td>{data?.gender}</td>\r\n                    <td>{data?.fb}</td>\r\n                    <td>{data?.twitter}</td>\r\n                    <td>{data?.insta}</td>\r\n                    <td>{data?.lkd}</td>\r\n                    <td>{data?.ytb}</td>\r\n                    <td>{data?.created_At}</td>\r\n                    <td>{data?.updated_At}</td>\r\n                  </tr>\r\n                );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex align-items-center p-2 mt-3\">\r\n          <span className=\"text-dark me-2\">\r\n            Showing {limit < dataStudent.length ? limit : dataStudent.length} of {dataStudent.length}\r\n          </span>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            className=\"me-2\"\r\n            onClick={() => {\r\n              setLimit(limit + 5);\r\n            }}>\r\n            Load More <LocalFireDepartmentSharp className=\"fs-6\" />\r\n          </Button>\r\n          <Button\r\n            className=\"me-2\"\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              setLimit(10);\r\n            }}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api, apiJsonAuth } from \"api\";\r\nimport useError from \"hooks/useError\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Box, Modal, Typography } from \"@mui/material\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport { CheckCircle } from \"@mui/icons-material\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport function AdminStudentRegistration({ collegeId, update, setUpdate }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const closeBtn = useRef();\r\n  const ErrorResponder = useError();\r\n  const { token } = useGlobalContext();\r\n  const [submitState, setSubmitState] = React.useState(false);\r\n  let [password, setPassword] = React.useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  const [copiedLink, setCopiedLink] = React.useState(false);\r\n\r\n  // console.log(update)\r\n\r\n  React.useEffect(() => {\r\n    clearTimeout();\r\n    setTimeout(() => {\r\n      setCopiedLink(false);\r\n    }, 2000);\r\n  }, [copiedLink]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      dob: \"2001-01-26\",\r\n      first_name: \"\",\r\n      middle_name: \"\",\r\n      last_name: \"\",\r\n      contact: \"\",\r\n      father_name: \"\",\r\n      gender: \"male\",\r\n      sendemail: false,\r\n    },\r\n    validationSchema: yup.object().shape({\r\n      email: yup.string().email().required(\"Email is required\"),\r\n      dob: yup.string().required(\"Pin code is Required\"),\r\n      first_name: yup.string().max(100).required(\"First Name is Required\"),\r\n      last_name: yup.string().max(100).required(\"Last Name is Required\"),\r\n      contact: yup\r\n        .string()\r\n        .required(\"Phone Number is Required\")\r\n        .matches(/^[0-9]{10}$/, \"Invalid Mobile Number\"),\r\n      father_name: yup.string().max(100).required(\"Father Name is Required\"),\r\n      gender: yup.string().required(\"Gender is required\"),\r\n    }),\r\n    onSubmit: async (values, { resetForm }) => {\r\n      if (token) {\r\n        try {\r\n          setSubmitState(true);\r\n          // console.log(values?.sendemail)\r\n          const res = await apiJsonAuth.post(\r\n            \"admin/addStudent\",\r\n            {\r\n              email: values?.email,\r\n              password: values?.password,\r\n              confirm_password: values?.confirm_password,\r\n              dob: values?.dob,\r\n              instituteId: collegeId,\r\n              first_name: values?.first_name,\r\n              last_name: values?.last_name,\r\n              contact: values?.contact,\r\n              father_name: values?.father_name,\r\n              gender: values?.gender,\r\n              sendemail: values?.sendemail,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: token,\r\n              },\r\n            }\r\n          );\r\n          if (res) {\r\n            setSubmitState(false);\r\n          }\r\n          // console.log(res?.data?.status)\r\n          switch (res?.data?.status) {\r\n            case \"success\":\r\n              setEmail(res?.data?.result?.username);\r\n              setPassword(res?.data?.result?.password);\r\n              handleOpen();\r\n              resetForm();\r\n\r\n              toast.dismiss();\r\n              toast.success(\"Student Added\");\r\n              closeBtn.current.click();\r\n              setUpdate(update + 1);\r\n              break;\r\n            case \"warning\":\r\n              toast.dismiss();\r\n              toast.warning(res?.data?.message);\r\n              break;\r\n            case \"error\":\r\n              toast.dismiss();\r\n              toast.error(res?.data?.message);\r\n              break;\r\n          }\r\n        } catch (err) {\r\n          setSubmitState(false);\r\n          ErrorResponder(err);\r\n        }\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"h-100\">\r\n        <button className=\"btn me-2 d-flex h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModalLong\">\r\n          Add&nbsp;Student\r\n        </button>\r\n        {/* <!-- Modal --> */}\r\n        <div className=\"modal fade\" id=\"exampleModalLong\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content w-100\" style={{ minWidth: \"100%\" }}>\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                  Student Register\r\n                </h5>\r\n                <button ref={closeBtn} type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n              </div>\r\n              <div className=\"modal-body  p-0\">\r\n                <div className=\"p-2 p-md-3 p-lg-4\">\r\n                  <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-12 col-lg-6\">\r\n                        <TextField fullWidth id=\"first_name\" name=\"first_name\" label=\"First Name\" size=\"large\" value={formik.values.first_name} onChange={formik.handleChange} error={formik.touched.first_name && Boolean(formik.errors.first_name)} helperText={formik.touched.first_name && formik.errors.first_name} />\r\n                      </div>\r\n                      <div className=\"col-12 col-lg-6\">\r\n                        <TextField fullWidth id=\"last_name\" name=\"last_name\" label=\"Last Name\" size=\"large\" value={formik.values.last_name} onChange={formik.handleChange} error={formik.touched.last_name && Boolean(formik.errors.last_name)} helperText={formik.touched.last_name && formik.errors.last_name} />\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <TextField fullWidth id=\"contact\" name=\"contact\" label=\"Mobile Number\" size=\"large\" value={formik.values.contact} onChange={formik.handleChange} error={formik.touched.contact && Boolean(formik.errors.contact)} helperText={formik.touched.contact && formik.errors.contact} />\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <TextField fullWidth id=\"email\" name=\"email\" label=\"Email Address\" size=\"large\" value={formik.values.email} onChange={formik.handleChange} error={formik.touched.email && Boolean(formik.errors.email)} helperText={formik.touched.email && formik.errors.email} />\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <TextField fullWidth id=\"dob\" name=\"dob\" type=\"date\" label=\"Date of Birth\" size=\"large\" max=\"2022-01-01\" min=\"2007-01-01\" value={formik.values.dob} onChange={formik.handleChange} error={formik.touched.dob && Boolean(formik.errors.dob)} helperText={formik.touched.dob && formik.errors.dob} />\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <FormControl>\r\n                          <FormLabel id=\"gender-label\">Gender</FormLabel>\r\n                          <RadioGroup aria-labelledby=\"gender-label\" defaultValue={formik.values.gender} id=\"gender\" name=\"gender\" onChange={formik.handleChange} row>\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                            <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <TextField fullWidth id=\"father_name\" name=\"father_name\" label=\"Father's Name\" size=\"large\" value={formik.values.father_name} onChange={formik.handleChange} error={formik.touched.father_name && Boolean(formik.errors.father_name)} helperText={formik.touched.father_name && formik.errors.father_name} />\r\n                      </div>\r\n                      <div className=\"col-12 form-check\">\r\n                        <input class=\"form-check-input\" onChange={formik.handleChange} type=\"checkbox\" value={formik.values.sendemail} id=\"sendemail\" />\r\n\r\n                        <label class=\"form-check-label\" htmlfor=\"semdemail\">\r\n                          Would you like to send a welcome mail on given email id.\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <Button type=\"submit\" color=\"warning\" variant=\"contained\" className={submitState ? \"py-3 bg-success\" : \"py-3\"} size=\"large\" fullWidth>\r\n                          {submitState ? (\r\n                            <div className=\"d-flex justify-content-around text-light\">\r\n                              {\" \"}\r\n                              <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"visually-hidden\">loading...</span>\r\n                              </div>\r\n                              <span className=\"text-light mx-3 text-capitalize\">Submitting...</span>{\" \"}\r\n                            </div>\r\n                          ) : (\r\n                            \"Submit\"\r\n                          )}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n            <Box sx={style}>\r\n              <Typography className=\"text-center\" id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                <strong> Registered Succesfully</strong>\r\n              </Typography>\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                <strong>Username : </strong>&nbsp;{email}\r\n              </Typography>\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                <strong>Password : </strong>&nbsp;{password}\r\n              </Typography>\r\n\r\n              <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                className=\"px-2 py-1 border-2 rounded-0 rounded-bottom mt-4\"\r\n                color={copiedLink ? \"success\" : \"warning\"}\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(password);\r\n                  setCopiedLink(true);\r\n                }}>\r\n                {!copiedLink ? <ContentCopyIcon /> : <CheckCircle />} <br />\r\n                {copiedLink ? <small>COPIED</small> : <small>COPY</small>}\r\n              </Button>\r\n              <p className=\"text-center mb-0\">\r\n                <strong>Copy The Password</strong>\r\n              </p>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CertificateForm } from \"..\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\n\r\nexport const CertificateData = ({ certificatesByInstitutes, idToSend }) => {\r\n  return (\r\n    <div>\r\n      {/* Certificates Data  */}\r\n      <div className=\"certificates-by-institutes-data table-responsive rounded-3 border mb-4\">\r\n        <table className=\"table table-borderless table-lg\">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Profile\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                StudentId\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Name\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Certificate Key\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Accredited By\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Endorsed By\r\n              </th>\r\n              <th scope=\"col\" className=\"p-3 px-2\">\r\n                Created At\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {certificatesByInstitutes?.map((value, index) => {\r\n              return (\r\n                <>\r\n                  <tr>\r\n                    <th className=\"p-3\" scope=\"row\">\r\n                      <Avatar src={value?.profile} sx={{ backgroundColor: \"orange\" }}>\r\n                        <FaUserCircle/>\r\n                      </Avatar>\r\n                    </th>\r\n                    <td>{value?.studentId}</td>\r\n                    <td>{value?.first_name + \" \" + value?.last_name}</td>\r\n                    <td scope=\"row\">{value?.certificate_key}</td>\r\n                    <td>{value?.accredited_by}</td>\r\n                    <td>{value?.endorsed_by}</td>\r\n                    <td>{value?.created_at}</td>\r\n                  </tr>\r\n                </>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <hr />\r\n      {/* Institute Specific Certificate*/}\r\n      <CertificateForm id={idToSend} />\r\n    </div>\r\n  );\r\n};\r\n","import { CChart } from \"@coreui/react-chartjs\";\r\nimport React from \"react\";\r\n\r\nexport function DoughnutInstitute({ Student, allStudents, StudentName, allStudentsName }) {\r\n  // console.log(\"Props\", Student, allStudents);\r\n  return (\r\n    <div className=\"border shadow-sm rounded-4 p-4 h-100\">\r\n      <div className=\"\">\r\n        <div className=\"d-flex justify-content-between text-secondary align-items-center\">\r\n          <div>\r\n            <h1 className=\"fs-2 text-secondary \">{allStudentsName}</h1>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"fw-bolder text-primary\">{allStudents ? allStudents : \"0\"}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <div style={{ width: \"250px\" }}>\r\n          <CChart\r\n            type={\"doughnut\"}\r\n            className=\"text-bolder h-100 w-100\"\r\n            data={{\r\n              labels: [allStudentsName, StudentName],\r\n              datasets: [\r\n                {\r\n                  backgroundColor: [\"#41B883\", \"#E46651\", \"#00D8FF\", \"#DD1B16\"],\r\n                  data: [allStudents, Student],\r\n                  weight: 100,\r\n                },\r\n              ],\r\n              hoverOffset: 2,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { FilePresentTwoTone } from \"@mui/icons-material\";\r\nimport { Button, Checkbox, FormControlLabel, Tooltip } from \"@mui/material\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport * as xlsx from \"xlsx\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport useError from \"hooks/useError\";\r\n// import { Suspense } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoaderSplash from \"layout/loader/LoaderSplash\";\r\nimport { Popup } from \"utils/Popup\";\r\nimport BulkDataFormat from \"pages/dashboard/components/institute/component/BulkDataFormat\";\r\n// import { fetchStudents } from \"pages/college/DashboardInstitute\";\r\n\r\nexport const StudentBulkLoginAdmin = ({ instituteId }) => {\r\n  const [fileName, setFileName] = React.useState();\r\n  const [file, setFile] = React.useState();\r\n  const [fileData, setFileData] = React.useState();\r\n  const [dataSaved, setDataSaved] = React.useState();\r\n  const [dataFailed, setDataFailed] = React.useState();\r\n  const [role, setRole] = React.useState(\"student\");\r\n  const [emailProcess, setEmailProcess] = React.useState(true);\r\n  const { token } = useGlobalContext();\r\n  const closeBtn = useRef();\r\n  const { ErrorResponder } = useError();\r\n  let [update, setUpdate] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(emailProcess);\r\n  }, [emailProcess]);\r\n  const setStudentData = async () => {\r\n    if (!instituteId) {\r\n      return toast.warning(\"Institute Id Not found!!\");\r\n    }\r\n    if (file && fileData && token) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file, file.originalname);\r\n        formData.append(\"role\", role);\r\n        formData.append(\"instituteId\", instituteId);\r\n        formData.append(\"emailProcess\", emailProcess);\r\n        const responce = await apiJsonAuth.post(\"institute/bulklogin-admin\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        // console.log(responce);\r\n        Popup(\"success\", responce?.data?.message);\r\n        if (responce.data.dataSaved) {\r\n          setDataSaved(responce?.data?.dataSaved);\r\n          setUpdate(update + 1);\r\n        }\r\n        if (responce.data.dataFailed) {\r\n          setDataFailed(responce?.data?.dataFailed);\r\n        }\r\n      } catch (error) {\r\n        ErrorResponder(error);\r\n      }\r\n    } else {\r\n      Popup(\"warning\", \"File Not Found!\");\r\n    }\r\n  };\r\n  const convertFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      let fileType = file?.name.split(\".\").slice(-1);\r\n      // console.log(fileType[0]);\r\n      if (file && (fileType[0] === \"csv\" || fileType[0] === \"xlsx\" || fileType[0] === \"xls\")) {\r\n        setFileName(file.name);\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onload = (e) => {\r\n          const data = e.target.result;\r\n          const workbook = xlsx.read(data, { type: \"buffer\", skiprows: 0 });\r\n          const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n          const json = xlsx.utils.sheet_to_json(worksheet);\r\n          if (json.length === 0) {\r\n            Popup(\"error\", \"Data Not Found!\");\r\n            setFile();\r\n          } else if (json.length > 1000) {\r\n            Popup(\"error\", \"Exceed Data Limit !!! \\n Data Limit : 1000\");\r\n            setFile();\r\n          } else if (!json[0]?.First_Name && !json[0]?.Contact && !json[0]?.Email) {\r\n            Popup(\"error\", \"File Format Incorrect\");\r\n            setFile();\r\n          } else {\r\n            setFileData(json);\r\n          }\r\n        };\r\n      } else {\r\n        Popup(\"error\", \"File Format is not Suported!!\");\r\n      }\r\n    }\r\n  };\r\n  function handleClose() {\r\n    setDataSaved();\r\n    setDataFailed();\r\n    setFileData();\r\n    setFileName();\r\n    setFile();\r\n  }\r\n\r\n  function downloadSavedData() {\r\n    let savelist = [];\r\n    dataSaved.map((data) => {\r\n      savelist.push({\r\n        ID: data?.id,\r\n        First_Name: data?.first_name,\r\n        Last_Name: data?.last_name,\r\n        Email: data?.email,\r\n        Password: data?.password,\r\n      });\r\n    });\r\n    downloadExcel(savelist);\r\n  }\r\n  const downloadExcel = (data) => {\r\n    if (data) {\r\n      const worksheet = xlsx.utils.json_to_sheet(data);\r\n      const workbook = xlsx.utils.book_new();\r\n      xlsx.utils.book_append_sheet(workbook, worksheet, \"sheet1\");\r\n      xlsx.writeFile(workbook, \"SampleData.xlsx\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <!-- Button trigger modal --> */}\r\n      <button className=\"btn me-2 h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn d-flex\">\r\n        Bulk&nbsp;Registration\r\n      </button>\r\n      {/* <!-- Modal --> */}\r\n      <div className=\"modal fade\" id=\"exampleModalLong\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content w-100\" style={{ minWidth: \"100%\" }}>\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                {role} Register\r\n              </h5>\r\n              <button ref={closeBtn} type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Bulk Upload Modal  */}\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-dialog-scrollable modal-fullscreen modal-dialog-centered modal-lg\">\r\n          <div className=\"modal-content rounded-4\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title font-weight-bold fs-5\" id=\"exampleModalLabel\">\r\n                {role} Bulk Register\r\n              </h1>\r\n              <button type=\"button\" onClick={handleClose} className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container\">\r\n                {!dataSaved && (\r\n                  <div>\r\n                    {!fileData ? (\r\n                      <div className=\"container mx-auto\">\r\n                        <div className=\"text-center item-center text-danger\">\r\n                          <span className=\"font-weight-bold text-decoration-underline\">NOTE</span>\r\n                          <br />\r\n                          <span className=\"lh-1\">\r\n                            1. Only the Provided Format is allowed for file upload <br /> 2. Data limit is 1000 Users per Upload.{\" \"}\r\n                          </span>{\" \"}\r\n                          <br />\r\n                          <Tooltip title=\"Use Provided file format to upload the student details\">\r\n                            <Button\r\n                              className=\"mt-2\"\r\n                              variant=\"outlined\"\r\n                              color=\"info\"\r\n                              href=\"https://yuvamanthan.s3.ap-south-1.amazonaws.com/uploads/Student+Registration+Format.xlsx\" ///\"https://yuvamanthan.s3.ap-south-1.amazonaws.com/static/TempletFile.xlsx\"\r\n                              target=\"_blank\">\r\n                              Template Sheet\r\n                            </Button>\r\n                          </Tooltip>\r\n                          <div className=\"d-flex justify-centent-center my-3\">\r\n                            <select value={role} onChange={(e) => setRole(e.target.value)} className=\"form-select text-center content-center fs-5 w-50 mx-auto\" aria-label=\"Default select example\">\r\n                              <option disabled>Select Type</option>\r\n                              <option value=\"student\">Student</option>\r\n                              <option value=\"teacher\">Teacher</option>\r\n                            </select>\r\n                          </div>\r\n                          <FormControlLabel control={<Checkbox defaultChecked={emailProcess} value={emailProcess} onChange={(e) => setEmailProcess(e.target.checked)} />} label=\"Send Email with Password\" />\r\n                        </div>\r\n\r\n                        <div className=\"border rounded-3 mt-4\" style={{ position: \"relative\", overflow: \"hidden\" }}>\r\n                          <input\r\n                            className=\"fade\"\r\n                            style={{\r\n                              minHeight: 240,\r\n                              width: \"100%\",\r\n                              zIndex: 200,\r\n                              position: \"relative\",\r\n                            }}\r\n                            type=\"file\"\r\n                            onClick={(e) => {\r\n                              setFileData();\r\n                              setFile();\r\n                              e.target.value = null;\r\n                            }}\r\n                            onChange={(e) => {\r\n                              setFile(e.target.files[0]);\r\n                              convertFile(e);\r\n                            }}\r\n                            id=\"fileData\"\r\n                          />\r\n                          {/* show Loading on file Uploda */}\r\n                          {file && <LoaderSplash />}\r\n                          <div\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 0,\r\n                              left: 0,\r\n                              zIndex: 100,\r\n                            }}\r\n                            className=\"w-100 h-100\">\r\n                            <div className=\"h-100 w-100 bg-light\">\r\n                              <div className=\"py-4 text-center\">\r\n                                <h4>Drag and drop or Click To Add File.</h4>\r\n                                <img src=\"/images/upload-cloud-folder.png\" alt=\"\" width={200} style={{ objectFit: \"contain\" }} />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* <div className=\"input-group-append item-center text-center\">\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"success\"\r\n                            className=\"rounded-3 mt-3 text-capitalize\"\r\n                            size=\"large\"\r\n                            type=\"button\"\r\n                            onClick={setStudentData}\r\n                          >\r\n                            <FileUploadTwoTone /> Upload Data\r\n                          </Button>\r\n                        </div> */}\r\n                      </div>\r\n                    ) : (\r\n                      <BulkDataFormat data={fileData} setFileData={setFileData} setFile={setFile} upload={setStudentData} />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div hidden={!dataSaved || !dataSaved} className=\"container text-center item-center m-2 p-2\">\r\n                <p className=\" text-decoration-underline lh-1\"> Download the Data in Excel File </p>\r\n                <p className=\"text-decoration-underline lh-1\" style={{ color: \"red\", fontSize: \"15px\" }}>\r\n                  {\" \"}\r\n                  (*Only Available once.){\" \"}\r\n                </p>\r\n                <Button hidden={!dataSaved?.length} className=\"rounded border mx-2\" color=\"success\" onClick={downloadSavedData}>\r\n                  Registered Data\r\n                </Button>\r\n                <Button\r\n                  hidden={!dataFailed?.length}\r\n                  className=\"rounded border mx-2\"\r\n                  onClick={() => {\r\n                    downloadExcel(dataFailed);\r\n                  }}>\r\n                  Unregistered Data\r\n                </Button>\r\n              </div>\r\n              {/* Table for Student Registered */}\r\n              {dataSaved && !!Object.keys(dataSaved).length && (\r\n                <div className=\"container mx-auto my-4 align-items-center text-center\">\r\n                  <h5 className=\"font-weight-bold text-center ts-f\">\r\n                    {role} Registered {Object.keys(dataSaved).length}{\" \"}\r\n                  </h5>\r\n                  <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Student ID</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Contact</th>\r\n                        <th>Email</th>\r\n                        <th>Password</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {dataSaved &&\r\n                        dataSaved.map(({ id, first_name, last_name, contact, email, password }) => {\r\n                          return (\r\n                            <tr>\r\n                              <td>{id}</td>\r\n                              <td>{first_name}</td>\r\n                              <td>{last_name} </td>\r\n                              <td>{contact}</td>\r\n                              <td>{email}</td>\r\n                              <td>{password}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n              {/* Table For Student Not Registered */}\r\n              {dataFailed && !!Object.keys(dataFailed).length && (\r\n                <div className=\"container mx-auto my-4 aline-cengter text-center\">\r\n                  <h5 className=\"font-weight-bold text-center\">Student Failed To Register</h5>\r\n                  <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Contact</th>\r\n                        <th>Email</th>\r\n                        <th>Reason</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {dataFailed &&\r\n                        dataFailed.map(({ First_Name, Last_Name, Contact, Email, Error }) => {\r\n                          return (\r\n                            <tr>\r\n                              <td>{First_Name}</td>\r\n                              <td>{Last_Name} </td>\r\n                              <td>{Contact}</td>\r\n                              <td>{Email}</td>\r\n                              <td className=\"text-danger font-weight-bold\">{Error}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { apiAuth, apiJsonAuth } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DeleteForever, EditTwoTone } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { pop2, Popup } from \"utils/Popup\";\r\nimport Swal from \"sweetalert2\";\r\nimport useError from \"hooks/useError\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport function AdminInstituteGallery() {\r\n  let [galleryData, setGalleryData] = useState();\r\n  const { ErrorResponder } = useError();\r\n  let [update, setupdate] = useState();\r\n  let [openAddForm, setOpenAddForm] = useState(false);\r\n  const { id } = useParams();\r\n  const { adminRoles } = useGlobalContext();\r\n  const getGalleryById = async () => {\r\n    // console.log(\"Fetching Resources Data \", id);\r\n    try {\r\n      const res = await apiAuth.get(`admin/institute-gallery/${id}`);\r\n      console.log(`admin/institute-gallery/${id}`);\r\n\r\n      if (res.status == 200) {\r\n        console.log(res?.data?.result);\r\n        setGalleryData(res?.data?.result);\r\n        // console.log(galleryData)\r\n      }\r\n    } catch (error) {\r\n      ErrorResponder(error);\r\n      // console.log(\"All Quotes Error: \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGalleryById();\r\n  }, [update]);\r\n\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      img: \"\",\r\n      alttext: \"\",\r\n    },\r\n    onSubmit: async function (values, actions) {\r\n      if (values.img) {\r\n        if (!values.alttext.length) {\r\n          values.alttext = values?.img?.name;\r\n        }\r\n        try {\r\n          const res = await apiAuth.post(`admin/institute-gallery/${id}`, values);\r\n          if (res.status == 200) {\r\n            actions.resetForm();\r\n          }\r\n          setupdate(update + 1);\r\n        } catch (err) {\r\n          ErrorResponder(err);\r\n        }\r\n      } else {\r\n        pop2.warning({ title: \"please fill all the fields\" });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n          <h4>Gallery</h4>\r\n          <button\r\n            hidden={!(adminRoles() === 1)}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              openAddForm ? setOpenAddForm(false) : setOpenAddForm(true);\r\n            }}>\r\n            Add Images\r\n          </button>\r\n        </div>\r\n        <div className=\"resources-data table-responsive rounded-3 border\">\r\n          <table className=\"table\">\r\n            <thead className=\"table-danger\">\r\n              <tr>\r\n                <th scope=\"col\">id</th>\r\n                <th scope=\"col\">image</th>\r\n                <th scope=\"col\">alttext</th>\r\n\r\n                <th hidden={adminRoles() === 3 || adminRoles() === 5} scope=\"col\">\r\n                  action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {galleryData?.map((data) => {\r\n                {\r\n                  /* console.log(data) */\r\n                }\r\n                return (\r\n                  <>\r\n                    <tr>\r\n                      <th scope=\"row\">{data?.id} </th>\r\n                      <td>\r\n                        {\" \"}\r\n                        <img src={data?.img} height=\"100px\" />{\" \"}\r\n                      </td>\r\n                      <td>{data?.alttext} </td>\r\n                      <td hidden={adminRoles() === 3 || adminRoles() === 5}>\r\n                        <IconButton\r\n                          sx={{ color: \"tomato\" }}\r\n                          onClick={async () => {\r\n                            // Updation(\"delete\", undefined,ele?.id);\r\n                            Swal.fire({\r\n                              title: \"Are you sure?\",\r\n                              text: \"You wanted to delete this Resouorce!\",\r\n                              icon: \"warning\",\r\n                              showCancelButton: true,\r\n                              confirmButtonColor: \"#3085d6\",\r\n                              cancelButtonColor: \"#d33\",\r\n                              confirmButtonText: \"Yes, delete it!\",\r\n                            }).then(async (result) => {\r\n                              if (result.isConfirmed) {\r\n                                try {\r\n                                  // console.log(data.id)\r\n                                  const res = await apiJsonAuth.delete(`admin/institute-gallery?id=${data?.id}`);\r\n                                  if (res?.status == 200) {\r\n                                    Swal.fire({\r\n                                      title: res.data.message,\r\n                                      icon: \"success\",\r\n                                    });\r\n                                    setupdate(update + 1);\r\n                                  }\r\n                                } catch (error) {\r\n                                  ErrorResponder(error);\r\n                                }\r\n                              }\r\n                            });\r\n                          }}>\r\n                          <DeleteForever fontSize=\"large\" />\r\n                        </IconButton>\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {/* Add Image Modal */}\r\n      <Modal show={openAddForm} onHide={() => setOpenAddForm(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"text-dark fs-5\">Add Image</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div hidden={!(adminRoles() === 1)}>\r\n            <form onSubmit={Formik.handleSubmit}>\r\n              <div class=\"mb-3\">\r\n                <label for=\"img\" class=\"form-label\">\r\n                  Image\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"img\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  className=\"form-control\"\r\n                  id=\"img\"\r\n                  onChange={(e) => {\r\n                    if (e.target.files.length) {\r\n                      Formik.setFieldValue(\"img\", e.target.files[0]);\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"alttext\" class=\"form-label\">\r\n                  AltText\r\n                </label>\r\n                <input type=\"text\" name=\"alttext\" className=\"form-control \" id=\"alttext\" value={Formik.values.alttext} onChange={Formik.handleChange} />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"],"names":["_ref","data","setFileData","setFile","upload","dataList","setDataList","useState","update","setUpdate","checkEmails","setCheckEmails","edit","setEdit","editData","setEditData","First_name","Last_name","Email","Contact","DOB","validateRow","item","includes","message","email","count","map","_ref4","checkDublicateEmai","contact","_ref5","checkDublicateContact","String","length","Number","useEffect","pop2","loading","emails","_ref2","push","apiJsonAuth","post","then","_ref3","catch","err","console","log","error","worksheet","xlsx","json_to_sheet","workbook","book_new","book_append_sheet","xlsblob","Blob","Uint8Array","bookType","type","file","File","generateAsExcel","_jsxs","children","className","_jsx","Button","variant","color","size","onClick","startIcon","Cancel","check","toast","warning","validateAndUpload","UploadFile","style","fontSize","scope","i","_validateRow","_validateRow2","title","onDoubleClick","_Fragment","TextField","defaultValue","onChange","e","prv","_objectSpread","target","value","moment","format","Tooltip","DoneAll","sx","tempdata","RestartAlt","IconButton","EditIcon","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","_ref6","isConfirmed","success","deleteData","CloseOutlined","ComplianceTable","reload","compliances","setCompliances","fetchCompliances","response","result","colSpan","template","cursor","id","createdAt","calendar","placement","Link","to","Edit","handleDelete","delete","res","dismiss","Delete","InstituteDetail","datas","dataStudent","dataDelegates","certificatesByInstitutes","DoughnutInstitute","Student","allStudents","question1","StudentName","allStudentsName","Object","keys","keyName","index","test","concat","replace","CertificateForm","certificateData","setCertificateData","CourseCertificates","setCourseCertificates","openeditForm","setOpenEditForm","certificate","setCertificate","states","setStates","courses","setCourses","showModal","setShowModal","add","handleModal","modal","state","setState","adminRoles","useGlobalContext","getCertificatesById","async","get","_res$data","_res$data2","status","Formik","useFormik","initialValues","cert_img","courseId","onSubmit","values","action","apiAuth","Popup","undefined","_err$response","_err$response$data","FormikEdit","certificate_url","enableReinitialize","put","_err$response2","_err$response2$data","_states$data","fetchStatesCourses","class","courseCert","CertIndex","src","alt","width","height","objectFit","instituteId","updatedAt","text","handleDeleteInsCert","Modal","show","onHide","Header","closeButton","Title","Body","handleSubmit","htmlFor","name","files","setFieldValue","handleChange","stateIndex","State","course","courseIndex","course_name","accept","AdminInstituteStudents","setData","userRole","setUserRole","limit","setLimit","setDataStudent","searchTerm","setSearchTerm","students","setStudents","ErrorResponder","useError","useParams","fetchStudents","onKeyDown","key","label","background","AdminStudentRegistration","hidden","collegeId","StudentBulkLoginAdmin","Avatar","profile","first_name","last_name","father_name","district","pincode","resume","dob","gender","fb","twitter","insta","lkd","ytb","created_At","updated_At","LocalFireDepartmentSharp","position","top","left","transform","bgcolor","border","boxShadow","p","open","setOpen","React","closeBtn","useRef","token","submitState","setSubmitState","password","setPassword","setEmail","copiedLink","setCopiedLink","clearTimeout","setTimeout","formik","middle_name","sendemail","validationSchema","yup","shape","required","max","matches","_res$data2$result","_res$data3","_res$data3$result","_res$data4","_res$data5","resetForm","confirm_password","headers","Authorization","username","current","click","tabIndex","role","minWidth","ref","fullWidth","touched","Boolean","errors","helperText","min","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","htmlfor","onClose","handleClose","Box","Typography","component","mt","navigator","clipboard","writeText","CheckCircle","ContentCopyIcon","CertificateData","idToSend","backgroundColor","FaUserCircle","studentId","certificate_key","accredited_by","endorsed_by","created_at","CChart","labels","datasets","weight","hoverOffset","fileName","setFileName","fileData","dataSaved","setDataSaved","dataFailed","setDataFailed","setRole","emailProcess","setEmailProcess","downloadExcel","BulkDataFormat","_responce$data","formData","FormData","append","originalname","responce","_responce$data2","_responce$data3","href","disabled","Checkbox","defaultChecked","checked","overflow","minHeight","zIndex","fileType","split","slice","reader","FileReader","readAsArrayBuffer","onload","_json$","_json$2","_json$3","skiprows","Sheets","SheetNames","json","sheet_to_json","First_Name","convertFile","LoaderSplash","savelist","ID","Last_Name","Password","Error","AdminInstituteGallery","galleryData","setGalleryData","setupdate","openAddForm","setOpenAddForm","getGalleryById","img","alttext","actions","_values$img","DeleteForever","for"],"sourceRoot":""}