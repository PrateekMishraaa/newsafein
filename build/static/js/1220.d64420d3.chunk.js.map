{"version":3,"file":"static/js/1220.d64420d3.chunk.js","mappings":"yTAWA,MA2FA,EA3FuBA,KACrB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,OACZ,YAAEC,EAAW,aAAEC,IAAiBC,EAAAA,EAAAA,OAC/BC,EAASC,GAAcC,EAAAA,SAAe,KACvC,eAAEC,IAAmBC,EAAAA,EAAAA,KAsC3B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAENC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,MAAA,QACEI,SA3CRC,eAA2BC,GAGzB,GAFAA,EAAEC,iBACFC,EAAAA,GAAMC,QAAQ,gBACH,OAAPd,QAAO,IAAPA,GAAAA,EAASe,MAAQf,EAAQe,KAAO,QAAS,CAC3C,MAAMC,EAAW,IAAIC,SAErB,GADAD,EAASE,OAAO,OAAQlB,GACpBL,EACF,IACE,MAAMwB,QAAYC,EAAAA,GAAQC,IAAI,2CAE5BL,EACA,CACEM,QAAS,CACPC,cAAe5B,KAIF,MAAfwB,EAAIK,SACN1B,IACAe,EAAAA,GAAMY,UACNZ,EAAAA,GAAMa,QAAQP,EAAIQ,KAAKC,SAE3B,CAAE,MAAOC,GACP1B,EAAe0B,EACjB,MAEAhB,EAAAA,GAAMY,SAEV,MAAWzB,EAAQe,MAAQ,SACzBF,EAAAA,GAAMY,UACNZ,EAAAA,GAAMiB,QAAQ,wBAEdjB,EAAAA,GAAMY,UACNZ,EAAAA,GAAMiB,QAAQ,uBAElB,EASQxB,UAAU,oDAAmDC,SAAA,EAE7DC,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,IAAI,GACJC,KAAK,aACL3B,UAAU,eACV4B,IAAKlC,EAAUmC,IAAIC,gBAAgBpC,GAAsB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaG,QAC3DqC,GAAI,CAAEC,MAAO,GAAIC,OAAQ,OAE3BlC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,MAACmC,EAAAA,GAAU,CACTC,MAAM,UACN,aAAW,iBACXC,UAAU,QAAOnC,SAAA,EAEjBC,EAAAA,EAAAA,KAAA,SACEmC,QAAM,EACNV,KAAK,UACLW,OAAO,oBACPC,KAAK,OACLC,SAAWnC,GAAMV,ECzD1B,SAAuB8C,GAC5B,GAAIA,EAAK,CACP,IAAIC,EAAY,KAFmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEdF,EAAIhC,KAC5B,IAAI,KAAEqC,GAAS,IAAIC,IAAJ,CAAeN,EAAK,CACjCO,QAASN,EACTtB,QAAU0B,IACR,IAAIG,EAAO,IAAItC,SAGf,OAFAsC,EAAKrC,OAAO,OAAQkC,EAAMA,EAAKnB,MACnBsB,EAAKC,IAAI,WAIzB,OAAOJ,CACT,CACF,CD2C4CK,CAAc9C,EAAE+C,OAAOC,MAAM,QAE3DnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAmB,QAEtBpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CACLC,WAAWtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAa,IACzBtB,MAAM,UACNuB,QAAQ,WACR1D,UAAU,iBACVS,KAAK,QACL8B,KAAK,SAAQtC,SACd,kC","sources":["pages/dashboard/components/student/EditProfile/EditProfilePic.jsx","hooks/useImgCompressor.jsx"],"sourcesContent":["import { apiAuth } from \"api\";\r\nimport React from \"react\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { InsertPhotoOutlined, UploadTwoTone } from \"@mui/icons-material\";\r\nimport useError from \"hooks/useError\";\r\nimport { imgCompressor } from \"hooks/useImgCompressor\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IconButton } from \"@mui/joy\";\r\n\r\nconst EditProfilePic = () => {\r\n  const { token } = useGlobalContext();\r\n  const { fullDetails, fetchDetails } = useOutletContext();\r\n  const [profile, setProfile] = React.useState(\"\");\r\n  const { ErrorResponder } = useError();\r\n  // Profile Photo upload\r\n  async function uploadPhoto(e) {\r\n    e.preventDefault();\r\n    toast.loading(\"Updating....\");\r\n    if (profile?.size && profile.size < 5169186) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", profile);\r\n      if (token) {\r\n        try {\r\n          const res = await apiAuth.put(\r\n            `/student/profile?update_type=profile_pic`,\r\n            formData,\r\n            {\r\n              headers: {\r\n                Authorization: token,\r\n              },\r\n            }\r\n          );\r\n          if (res.status === 200) {\r\n            fetchDetails();\r\n            toast.dismiss();\r\n            toast.success(res.data.message);\r\n          }\r\n        } catch (error) {\r\n          ErrorResponder(error);\r\n        }\r\n      } else {\r\n        toast.dismiss();\r\n      }\r\n    } else if (profile.size >= 5169186) {\r\n      toast.dismiss();\r\n      toast.warning(\"Max 5mb is allowed\");\r\n    } else {\r\n      toast.dismiss();\r\n      toast.warning(\"Image not selected!\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row row-cols-1 row-cols-lg-2 mb-3 g-2\">\r\n      <div className=\"col\">\r\n        <h6>Profile Picture</h6>\r\n      </div>\r\n      <div className=\"col\">\r\n        <form\r\n          onSubmit={uploadPhoto}\r\n          className=\"d-flex align-items-center justify-content-between\"\r\n        >\r\n          <Avatar\r\n            alt=\"\"\r\n            name=\"profilepic\"\r\n            className=\"rounded ms-0\"\r\n            src={profile ? URL.createObjectURL(profile) : fullDetails?.profile}\r\n            sx={{ width: 80, height: 80 }}\r\n          />\r\n          <div className=\"d-flex align-items-center justify-content-start\">\r\n            <IconButton\r\n              color=\"success\"\r\n              aria-label=\"upload picture\"\r\n              component=\"label\"\r\n            >\r\n              <input\r\n                hidden\r\n                name=\"profile\"\r\n                accept=\".png, .jpg, .jpeg\"\r\n                type=\"file\"\r\n                onChange={(e) => setProfile(imgCompressor(e.target.files[0]))}\r\n              />\r\n              <InsertPhotoOutlined />\r\n            </IconButton>\r\n            <Button\r\n              startIcon={<UploadTwoTone />}\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              className=\"ms-2 rounded-3\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n            >\r\n              Upload Profile Pic\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfilePic;\r\n","import Compressor from \"compressorjs\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction useImgCompressor(img, setImg, size = 20) {\r\n  const [state, setState] = useState();\r\n  useEffect(() => {\r\n    if (img && img !== state) {\r\n      let q = (size * 1000) / img.size;\r\n      new Compressor(img, {\r\n        quality: q,\r\n        success: (file) => {\r\n          let form = new FormData();\r\n          form.append(\"file\", file, file.name);\r\n          let Image = form.get(\"file\");\r\n          setImg(Image);\r\n          setState(Image);\r\n        },\r\n      });\r\n    }\r\n  }, [img]);\r\n\r\n  return state;\r\n}\r\n\r\nexport function imgCompressor(img, size = 20) {\r\n  if (img) {\r\n    let q = (size * 1000) / img.size;\r\n    var { file } = new Compressor(img, {\r\n      quality: q,\r\n      success: (file) => {\r\n        let form = new FormData();\r\n        form.append(\"file\", file, file.name);\r\n        var image = form.get(\"file\");\r\n        return image;\r\n      },\r\n    });\r\n    return file;\r\n  }\r\n}\r\n\r\nexport default useImgCompressor;\r\n"],"names":["EditProfilePic","token","useGlobalContext","fullDetails","fetchDetails","useOutletContext","profile","setProfile","React","ErrorResponder","useError","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","toast","loading","size","formData","FormData","append","res","apiAuth","put","headers","Authorization","status","dismiss","success","data","message","error","warning","Avatar","alt","name","src","URL","createObjectURL","sx","width","height","IconButton","color","component","hidden","accept","type","onChange","img","q","arguments","length","undefined","file","Compressor","quality","form","get","imgCompressor","target","files","InsertPhotoOutlined","Button","startIcon","UploadTwoTone","variant"],"sourceRoot":""}