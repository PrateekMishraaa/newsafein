{"version":3,"file":"static/js/2383.ad355546.chunk.js","mappings":"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","sources":["pages/courseplayer/components/player/VideoPlayer.jsx","pages/courseplayer/components/content/CourseSkeleton.jsx","pages/courseplayer/components/player/PdfPlayer.jsx","pages/courseplayer/components/content/QuizComponent.jsx","components/course/quiz/QuizResultSummary.jsx","pages/courseplayer/components/player/QuizPlayer.jsx","pages/courseplayer/components/CourseScreen.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst VideoPlayer = ({ content, postProgress }) => {\r\n    const [updatedVideoId, setUpdatedVideoId] = useState(\"\");\r\n\r\n    // Function to extract YouTube ID\r\n    function extractYouTubeID(input) {\r\n        // Check if input is already a valid video ID (11 characters)\r\n        const regexVideoID = /^[a-zA-Z0-9_-]{11}$/;\r\n\r\n        // Clean URL by removing query parameters\r\n        const cleanedInput = input.split(/[?&#]/)[0];\r\n\r\n        if (regexVideoID.test(cleanedInput)) {\r\n            return cleanedInput; // Return cleaned input if it's a valid ID\r\n        }\r\n\r\n        // Regex for standard and short YouTube URL formats\r\n        const regexStandard =\r\n            /(?:https?:\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/|user\\/[^\\s\\/]+\\/videos\\/|watch\\/videos\\/|shorts\\/)?([^\"&?\\/\\s]{11})/;\r\n        const regexShort = /(?:https?:\\/\\/)?(?:www\\.)?youtu\\.be\\/([^\"&?\\/\\s]{11})/;\r\n\r\n        if (regexStandard.test(input)) {\r\n            return input.match(regexStandard)[1]; // Extract ID from standard URL\r\n        } else if (regexShort.test(input)) {\r\n            return input.match(regexShort)[1]; // Extract ID from short URL\r\n        } else {\r\n            console.log(\"Invalid YouTube URL or ID\");\r\n            return null; // Return null for invalid input\r\n        }\r\n    }\r\n\r\n    // Update video ID when content.path changes\r\n    useEffect(() => {\r\n        if (content?.path) {\r\n            const videoId = extractYouTubeID(content?.path);\r\n            console.log(\"Extracted video ID:\", videoId); // Debugging log\r\n            setUpdatedVideoId(videoId);\r\n        }\r\n    }, [content?.path]);\r\n\r\n    // Event handler for when the video ends\r\n    const onEndHandler = () => {\r\n        postProgress(content?.id);\r\n    };\r\n\r\n    // Options for YouTube player\r\n    const opts = {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: true, // Set autoplay to false for testing\r\n        },\r\n    };\r\n\r\n    // Adding scroll event listener\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            console.log(\"Scroll event detected\");\r\n        };\r\n\r\n        // Add passive scroll event listener\r\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\r\n\r\n        // Cleanup function to remove the event listener\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []); // Empty dependency array ensures this runs only once when the component mounts\r\n\r\n    return (\r\n        <>\r\n            {updatedVideoId ? (\r\n                <Box\r\n                    className=\"theatre\"\r\n                    sx={{\r\n                        \"& .video-container\": {\r\n                            height: \"70vh\",\r\n                            width: \"100%\",\r\n                        },\r\n                    }}\r\n                >\r\n                    <YouTube\r\n                        videoId={updatedVideoId}\r\n                        opts={opts}\r\n                        className=\"video-container\"\r\n                        onEnd={onEndHandler}\r\n                    />\r\n                </Box>\r\n            ) : (\r\n                <p>Loading video...</p>\r\n            )}\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;","import { CircularProgress, Skeleton } from '@mui/material';\r\nimport React from 'react'\r\n\r\nconst CourseSkeleton = () => {\r\n    return (\r\n        <div className='p-relative'>\r\n            <Skeleton variant=\"rectangular\" className='w-100' style={{ height: \"550px\" }} />\r\n            <div className='p-absolute' style={{ top: \"50%\", left: \"50%\" }}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CourseSkeleton;","import React, { useEffect, useState } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"react-pdf/dist/esm/Page/TextLayer.css\";\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport CourseSkeleton from \"../content/CourseSkeleton\";\r\n// Plugins\r\n// const Skeleton = () => {\r\n//   return (\r\n//     <>\r\n//       <div className=\"d-flex align-items-center justify-content-center w-100 h-100 bg-success bg-opacity-25\">\r\n//         <div className=\"spinner-border text-primary\" role=\"status\">\r\n//           <span className=\"visually-hidden\">Loading...</span>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\nconst PdfPlayer = ({ content, postProgress }) => {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const hideSpinner = () => {\r\n    // setSpinner(false);\r\n  };\r\n  useEffect(() => {\r\n    // setSpinner(true);\r\n  }, [content]);\r\n  const onEndHandler = () => {\r\n    postProgress(content?.id);\r\n  };\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const pdfProxyUrl = process.env.REACT_APP_API_BASE_URL + \"v2/pdf?url=\";\r\n  /*To Prevent right click on screen*/\r\n  document.addEventListener(\"contextmenu\", (event) => {\r\n    event.preventDefault();\r\n  });\r\n\r\n  /*When document gets loaded successfully*/\r\n  function onDocumentLoadSuccess(pdfData) {\r\n    setNumPages(pdfData.numPages);\r\n    setPageNumber(1);\r\n    hideSpinner();\r\n    setShowButtons(true);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber((prevPageNumber) => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n  function handlePageRenderSuccess(page) {\r\n    setWidth(page.width);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"main container px-0\" style={{ width: width ? width : \"auto\", maxWidth: \"100%\", overflow: \"hidden\" }}>\r\n        <Document file={pdfProxyUrl + content.path} error={<CourseSkeleton />} onLoadSuccess={onDocumentLoadSuccess} loading={<CourseSkeleton />}>\r\n          <Page pageNumber={pageNumber} renderAnnotationLayer={false} error={<CourseSkeleton />} loading={<CourseSkeleton />} onRenderSuccess={handlePageRenderSuccess} />\r\n        </Document>\r\n        {showButtons && (\r\n          <div className=\"d-flex align-items-center justify-content-center p-2\">\r\n            <div className=\"buttonc input-group align-items-center justify-content-center\">\r\n              <button type=\"button\" className=\"btn rounded-3 me-1 btn-outline-success fw-semibold btn-sm pre\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n                Prev\r\n              </button>\r\n              {!(pageNumber >= numPages) ? (\r\n                <button type=\"button\" className=\"btn rounded-3 btn-outline-success fw-semibold btn-sm\" disabled={pageNumber >= numPages} onClick={nextPage}>\r\n                  Next\r\n                </button>\r\n              ) : (\r\n                <button type=\"button\" className=\"btn btn-success border border-success fw-semibold rounded-3 btn-sm\" onClick={onEndHandler}>\r\n                  Submit\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"pagec\">\r\n              <small className=\"fw-semibold\">\r\n                Page&nbsp;{pageNumber || (numPages ? 1 : \"--\")}&nbsp;of&nbsp;\r\n                {numPages || \"--\"}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfPlayer;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport { Button, Checkbox, FormControlLabel, FormGroup, Radio, RadioGroup, TextField } from \"@mui/material\";\r\nimport { toast } from \"react-hot-toast\";\r\nconst moment = require(\"moment\");\r\n\r\nfunction QuizComponent({ quizInfo, responseData, question, studentResult, setStudentResult, reload }) {\r\n  const [answer, setAnswer] = useState(localStorage.getItem(\"CurrectQuiz\") === null ? {} : JSON.parse(localStorage.getItem(\"CurrectQuiz\")));\r\n\r\n  // Move isValidJson function here to make it available\r\n  const isValidJson = (str) => {\r\n    try {\r\n      JSON.parse(str);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const uploadData = async (totalQuestions, totalAttemted, totalCorrected, result) => {\r\n    try {\r\n      toast.loading(\"Calculating Result..\");\r\n      const response = await apiJsonAuth.put(\"/course/quiz/\", {\r\n        quizId: responseData?.data?.id,\r\n        totalQuestions,\r\n        totalAttemted,\r\n        totalCorrected,\r\n        studentResult: result,\r\n        progress: JSON.stringify(answer),\r\n        date: moment().format(),\r\n      });\r\n      if (response.status === 200) {\r\n        toast.dismiss();\r\n        localStorage.removeItem(\"CurrectQuiz\");\r\n        setStudentResult({ ...studentResult, reattempt: true });\r\n        reload();\r\n      } else {\r\n        toast.dismiss();\r\n        toast.error(\"Something Went Wrong!!!!!\");\r\n      }\r\n    } catch (error) {\r\n      toast.dismiss();\r\n      console.error(error);\r\n      toast.error(\"Something Went Wrong!!!!!\");\r\n    }\r\n  };\r\n\r\n  const calResult = (ques, ans, passing_criteria) => {\r\n    ans = Object(ans);\r\n    const totalQuestions = ques.length;\r\n    const totalAttemted = Object.keys(ans).length;\r\n    let totalCorrected = 0;\r\n\r\n    ques.forEach((question) => {\r\n      const key = question.id;\r\n      let correctAnswer = question.ans;\r\n\r\n      // If correctAnswer is a JSON-encoded string, parse it\r\n      if (isValidJson(correctAnswer)) {\r\n        correctAnswer = JSON.parse(correctAnswer);\r\n      }\r\n\r\n      const userAnswer = ans[key] ? ans[key].toString().trim().toLowerCase() : null;\r\n      const formattedCorrectAnswer = correctAnswer ? correctAnswer.toString().trim().toLowerCase() : null;\r\n\r\n      console.log(\r\n        `Comparing: User Answer: ${JSON.stringify(userAnswer)}, Correct Answer: ${JSON.stringify(formattedCorrectAnswer)}`\r\n      );\r\n\r\n      // Compare both as strings after trimming and converting to lowercase\r\n      if (userAnswer === formattedCorrectAnswer) {\r\n        totalCorrected++;\r\n        console.log(`Match found for id: ${key}`, `Correct Answer: ${formattedCorrectAnswer}`);\r\n      } else {\r\n        console.log(`No match for id: ${key}`, `Correct Answer: ${formattedCorrectAnswer}`);\r\n      }\r\n    });\r\n\r\n    const result = (totalCorrected / totalQuestions) * 100 >= passing_criteria ? \"PASS\" : \"FAIL\";\r\n    return { totalQuestions, totalAttemted, totalCorrected, result };\r\n  };\r\n\r\n  const updateAns = (value, id, type) => {\r\n    let answerCopy = { ...answer };\r\n    let currentAnswer = answerCopy[id];\r\n\r\n    if (type === 3) {\r\n      const included = currentAnswer?.includes(value);\r\n      if (included) {\r\n        let answerIndex = currentAnswer.indexOf(value);\r\n        if (answerIndex > -1) {\r\n          currentAnswer.splice(answerIndex, 1);\r\n        }\r\n      } else {\r\n        answerCopy[id] ? answerCopy[id].push(value) : (answerCopy[id] = [value]);\r\n      }\r\n    } else {\r\n      answerCopy[id] = value;\r\n    }\r\n    setAnswer(answerCopy);\r\n    localStorage.setItem(\"CurrectQuiz\", JSON.stringify(answerCopy));\r\n  };\r\n\r\n  const handelSubmit = async (e) => {\r\n    try {\r\n      if (Object?.keys(answer)?.length < question.length) {\r\n        toast.error(\"Sorry you cannot submit, you should answer all questions first.\");\r\n        return;\r\n      }\r\n      const { totalQuestions, totalAttemted, totalCorrected, result } = calResult(question, answer, responseData.data.passing_criteria);\r\n      uploadData(totalQuestions, totalAttemted, totalCorrected, result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      <div className=\"bg-light border border-bottom container py-3\">\r\n        {quizInfo?.title ? <h5>{quizInfo?.title}</h5> : \"\"}\r\n        <p className=\"mb-0\">{quizInfo?.desc}</p>\r\n      </div>\r\n      <div>\r\n        <Form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n          }}>\r\n          {question?.map((ques, index) => {\r\n            switch (ques.type) {\r\n              case 1:\r\n                return (\r\n                  <Card className=\"container border-0\" key={index}>\r\n                    <Card.Header className=\"border-0 bg-white\">\r\n                      <div className=\"d-flex fw-semibold text-dark\">\r\n                        Q{index + 1}. <div dangerouslySetInnerHTML={{ __html: ques.ques }}></div>\r\n                      </div>\r\n                      {Boolean(ques?.image?.length) && isValidJson(ques?.image) && (\r\n                        <div className=\"row row-cols-1 row-cols-lg-2 g-2\">\r\n                          {JSON.parse(ques?.image).map((img, idx) => (\r\n                            <div className=\"col\" key={idx}>\r\n                              <img className=\"w-100\" src={img} alt={`image-${idx}`} />\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <h6>Options :</h6>\r\n                      <RadioGroup name=\"case-1-radio\" className=\"row row-cols-1 p-2 g-1\" onChange={(e) => updateAns(e.target.value, ques.id, ques.type)}>\r\n                        {isValidJson(ques?.options) &&\r\n                          JSON.parse(ques?.options).map((option, idx) => (\r\n                            <FormControlLabel\r\n                              key={idx}\r\n                              value={option}\r\n                              className=\"border border-1 rounded py-2\"\r\n                              control={\r\n                                <Radio\r\n                                  sx={{\r\n                                    \"& .MuiSvgIcon-root\": {\r\n                                      fontSize: 28,\r\n                                    },\r\n                                    \"&.Mui-checked\": {\r\n                                      color: \"green\",\r\n                                    },\r\n                                  }}\r\n                                />\r\n                              }\r\n                              label={<small className=\"text-dark text-capitalize me-2 d-block lh-sm\">{option}</small>}\r\n                            />\r\n                          ))}\r\n\r\n                      </RadioGroup>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              // Similar cases for type 3, 4, and 5...\r\n              default:\r\n                return null; // Handle default case if necessary\r\n            }\r\n          })}\r\n          <div className=\"text-center \">\r\n            <Button onClick={(e) => handelSubmit(e)} type=\"submit\" variant=\"contained\" className=\"text-capitalize py-2 px-4 rounded\" color=\"success\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizComponent;\r\n","import React from \"react\";\r\n\r\nexport const QuizResultSummary = ({ questions, response }) => {\r\n  console.log({ questions, response });\r\n  const Progress = Boolean(response) ? JSON.parse(response) : false;\r\n\r\n  // Function to handle displaying user response for each question\r\n  function returnStr(Progress, ques) {\r\n    try {\r\n      if (ques.type == 5) {\r\n        return <img src={Progress[ques?.id]} className=\"w-50\"></img>;\r\n      }\r\n      if (ques.type !== 3) {\r\n        let stringValue = String(Progress[ques?.id]);\r\n        return stringValue?.replaceAll('\"', \"\");\r\n      } else {\r\n        let ProgArr = Progress[ques?.id];\r\n        let ProgArrMap = ProgArr.map((pro, index) => (\r\n          <div className=\"d-inline-block me-2 border px-2 rounded bg-light mb-1\">\r\n            {pro}\r\n          </div>\r\n        ));\r\n        return ProgArrMap;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Function to handle displaying the list of options\r\n  function GiveOptions(Options, ques) {\r\n    try {\r\n      if (ques.type == 5) {\r\n        return \"\";\r\n      }\r\n      let OptArr = JSON.parse(Options);\r\n      let OptArrPrint = OptArr.map((optItem, optIndex) => {\r\n        return (\r\n          <li className={`option d-block me-2 p-1 ${ColorDecider(optItem, ques)}`}>\r\n            {optIndex + 1}.&nbsp;{optItem}\r\n          </li>\r\n        );\r\n      });\r\n      return (\r\n        <ul className=\"options ps-1\">\r\n          <b>Options :</b> {OptArrPrint}\r\n        </ul>\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // Function to display the correct answer\r\n  function CorrectAnswers(ans) {\r\n    try {\r\n      let result = ans.replaceAll('\"', \"\");\r\n      return result;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // Color the options - Only the correct answer will be green\r\n  function ColorDecider(opt, ques) {\r\n    try {\r\n      let classes = \"\";\r\n      if (Progress) {\r\n        const CorrectAnswer = ques?.ans?.replaceAll('\"', \"\").toLowerCase();\r\n        // Only color the correct option green\r\n        if (CorrectAnswer === opt.toLowerCase()) {\r\n          classes += \"text-success\"; // Correct option: green\r\n        }\r\n      }\r\n      return classes;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  // Color for user's answer (red if incorrect, green if correct)\r\n  function ColorDeciderForAnswer(Progress, ques) {\r\n    try {\r\n      let classes = \"\";\r\n      if (Progress) {\r\n        const SubmittedAnswer = Boolean(Progress[ques?.id])\r\n          ? Progress[ques?.id].replaceAll('\"', \"\").toLowerCase()\r\n          : \"\";\r\n        const CorrectAnswer = ques?.ans?.replaceAll('\"', \"\").toLowerCase();\r\n\r\n        // If the user's submitted answer matches the correct answer\r\n        if (SubmittedAnswer === CorrectAnswer) {\r\n          classes += \"text-success\"; // Correct answer: green\r\n        } else {\r\n          classes += \"text-danger\"; // Incorrect answer: red\r\n        }\r\n      }\r\n      return classes;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-3\">\r\n      <div className=\"ques-summary\">\r\n        {questions?.map((ques, quesIndex) => {\r\n          return (\r\n            <div key={quesIndex} className=\"ques-summary-list mb-2\">\r\n              <h6 className=\"mb-1 d-flex\">\r\n                <span>{`Q${quesIndex + 1}- `}</span>&nbsp;\r\n                <span dangerouslySetInnerHTML={{ __html: ques?.ques }}></span>\r\n              </h6>\r\n\r\n              {Boolean(ques?.image) && Boolean(JSON.parse(ques?.image).length) && (\r\n                <div className=\"row row-cols-1 row-cols-lg-2 g-2\">\r\n                  {JSON.parse(ques?.image).map((img, index) => (\r\n                    <div className=\"col\" key={index}>\r\n                      <img className=\"w-100\" src={img} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {Boolean(ques?.ans) && ques?.type < 3 && ques?.ans?.length && (\r\n                <div>\r\n                  <b>Correct Answer :</b> {CorrectAnswers(ques?.ans)}\r\n                </div>\r\n              )}\r\n\r\n              {Boolean(Progress[ques?.id]) && (\r\n                <div>\r\n                  <b>Your's Ans :</b>\r\n                  <span className={ColorDeciderForAnswer(Progress, ques)}>\r\n                    {returnStr(Progress, ques)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {Boolean(ques?.options) && GiveOptions(ques?.options, ques)}\r\n\r\n              {Boolean(ques?.desc) && (\r\n                <div className=\"border border-2 border-success p-2 bg-success bg-opacity-25 rounded mt-2\">\r\n                  {ques?.desc?.replaceAll('\"', \"\")}\r\n                </div>\r\n              )}\r\n\r\n              {quesIndex + 1 < questions.length && <hr />}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { apiJsonAuth } from \"api\";\r\nimport QuizComponent from \"../content/QuizComponent\";\r\nimport { QuizResultSummary } from \"components/course\";\r\n\r\nconst QuizPlayer = ({ content, activeContentId, postProgress, progress, fetchNextStop }) => {\r\n  const [quizInfo, setQuizInfo] = React.useState({});\r\n  const [responseData, setResponse] = React.useState({});\r\n  const [studentResult, setStudentResult] = React.useState({ reattempt: true });\r\n  const [question, setQuestion] = React.useState([]);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await apiJsonAuth.post(\"/course/quiz/\", {\r\n        quizId: content?.path,\r\n      });\r\n      console.log({ response: response?.data });\r\n      setResponse(response?.data);\r\n      setQuizInfo(response?.data?.data);\r\n      setQuestion(response?.data?.data?.question);\r\n\r\n      if (response?.data?.result) {\r\n        setStudentResult(response?.data?.result);\r\n\r\n        // Check if the result is \"PASS\" and update progress\r\n        if (response?.data?.result?.result === \"PASS\" && !progress?.includes(content?.id)) {\r\n          fetchNextStop(4);\r\n          postProgress(content?.id);\r\n        }\r\n      } else {\r\n        setStudentResult({ reattempt: true });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [content?.path]);\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-top justify-content-center\" style={{ height: 600, overflowY: \"auto\" }}>\r\n      <div className=\"w-100 p-2\">\r\n        {console.log({ question, result: Boolean(studentResult?.progress) && studentResult?.progress })}\r\n\r\n        {/* Check if the student has completed the quiz */}\r\n        {studentResult?.result ? (\r\n          <div>\r\n            <div className=\"container item-center px-3 mx-auto m-5\" style={{ maxWidth: \"550px\" }}>\r\n              {/* Success or Failure based on the result */}\r\n              {studentResult.result === \"FAIL\" ? (\r\n                <div className=\"text-center\">\r\n                  <img src=\"http://glcloud.in/uploads/Yuvamanthan/course/64f9b391abc92.jpg\" className=\"w-100 mx-auto d-block\" alt=\"\" style={{ maxWidth: 300 }} />\r\n                  <h4 className=\"mt-3 text-danger\">You Have to Retake This Activity</h4>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  {/* Success case when the quiz is passed */}\r\n                  <img src=\"http://glcloud.in/uploads/Yuvamanthan/course/64f9b367c31a3.jpg\" className=\"w-100 mx-auto d-block\" alt=\"\" style={{ maxWidth: 300 }} />\r\n                  <h4 className=\"mt-3 text-success\">You Have Successfully Completed This Activity</h4>\r\n                </div>\r\n              )}\r\n\r\n              {/* ReAttempt Button */}\r\n              <div className=\"container item-center text-center\">\r\n                {studentResult.result === \"FAIL\" && (\r\n                  <Button\r\n                    onClick={() => {\r\n                      setStudentResult({ reattempt: true });\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    color=\"error\"\r\n                    size=\"large\"\r\n                    className=\"mx-auto text-capitalize rounded-3 fw-semibold\">\r\n                    Reattempt\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Show summary for the quiz if passed */}\r\n            {studentResult.result === \"PASS\" && (\r\n              <div className=\"container border-top pt-4\">\r\n                <h5>Summary:</h5>\r\n                <QuizResultSummary questions={question} response={studentResult?.progress} /> {/* Pass directly without JSON.parse */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : studentResult?.reattempt ? (\r\n          <div className=\"container item-center py-4\" style={{ maxWidth: \"550px\" }}>\r\n            <div className=\"table-responsive rounded-4 border overflow-hidden mb-3\">\r\n              <table className=\"table w-100 table-borderless\">\r\n                <thead>\r\n                  <tr className=\"bg-light\">\r\n                    <td colSpan={2} className=\"text-center\">\r\n                      <h6>{quizInfo?.title}</h6>\r\n                      <p>{quizInfo?.desc}</p>\r\n                    </td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Duration</td>\r\n                    <td>{quizInfo?.quiz_duration} Min</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"3\">\r\n                      <div>\r\n                        <b>Note: You Must Attempt All Questions</b>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Begin Quiz Button */}\r\n            <div className=\"container item-center text-center\">\r\n              <Button\r\n                onClick={() => {\r\n                  setStudentResult({ reattempt: false });\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                className=\"mx-auto text-capitalize rounded\">\r\n                Let's Begin\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <QuizComponent\r\n            quizInfo={quizInfo}\r\n            responseData={responseData}\r\n            reload={fetchData}\r\n            question={question}\r\n            studentResult={studentResult}\r\n            setStudentResult={setStudentResult}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPlayer;\r\n","import { apiAuth } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport VideoPlayer from \"./player/VideoPlayer\";\r\nimport PdfPlayer from \"./player/PdfPlayer\";\r\nimport QuizPlayer from \"./player/QuizPlayer\";\r\nimport CourseSkeleton from \"./content/CourseSkeleton\";\r\n\r\nconst ViewComponentChanger = (data, progress, postProgress, activeContentId, setActiveContentId, fetchNextStop) => {\r\n  switch (data?.type) {\r\n    case 1:\r\n      return <VideoPlayer content={data} postProgress={postProgress} />;\r\n    case 2:\r\n      return <PdfPlayer content={data} postProgress={postProgress} />;\r\n    case 3:\r\n      return <QuizPlayer content={data} progress={progress} postProgress={postProgress} activeContentId={activeContentId} setActiveContentId={setActiveContentId} fetchNextStop={fetchNextStop} />;\r\n    default:\r\n      return <CourseSkeleton />;\r\n  }\r\n};\r\n\r\nconst CourseScreen = () => {\r\n  const { courseDetail, activeContentId, setActiveContentId, fetchNextContent, progress, postProgress, fetchNextStop } = useOutletContext();\r\n  const [content, setContent] = useState(null);\r\n  const fetchContent = async () => {\r\n    const res = await apiAuth.get(\"/v2/course/play/content-detail/\" + activeContentId);\r\n    if (res.data?.status === \"success\") {\r\n      setContent(res?.data?.result);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchContent();\r\n  }, [activeContentId]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"border-bottom\">{content ? ViewComponentChanger(content, progress, postProgress, activeContentId, setActiveContentId, fetchNextStop) : <CourseSkeleton />}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourseScreen;\r\n"],"names":["_ref","content","postProgress","updatedVideoId","setUpdatedVideoId","useState","useEffect","path","videoId","input","cleanedInput","split","test","regexStandard","regexShort","match","console","log","extractYouTubeID","handleScroll","window","addEventListener","passive","removeEventListener","_jsx","_Fragment","children","Box","className","sx","height","width","YouTube","opts","playerVars","autoplay","onEnd","onEndHandler","id","CourseSkeleton","_jsxs","Skeleton","variant","style","top","left","CircularProgress","color","showButtons","setShowButtons","pdfjs","workerSrc","concat","numPages","setNumPages","setWidth","pageNumber","setPageNumber","changePage","offset","prevPageNumber","document","event","preventDefault","maxWidth","overflow","Document","file","process","error","onLoadSuccess","pdfData","loading","Page","renderAnnotationLayer","onRenderSuccess","page","type","disabled","onClick","moment","require","quizInfo","responseData","question","studentResult","setStudentResult","reload","answer","setAnswer","localStorage","getItem","JSON","parse","isValidJson","str","handelSubmit","async","_Object$keys","Object","keys","length","toast","totalQuestions","totalAttemted","totalCorrected","result","calResult","ques","ans","passing_criteria","forEach","key","correctAnswer","userAnswer","toString","trim","toLowerCase","formattedCorrectAnswer","stringify","data","_responseData$data","apiJsonAuth","put","quizId","progress","date","format","status","dismiss","removeItem","_objectSpread","reattempt","uploadData","title","desc","Form","onSubmit","e","map","index","_ques$image","Card","Header","dangerouslySetInnerHTML","__html","Boolean","image","img","idx","src","alt","Body","RadioGroup","name","onChange","updateAns","value","answerCopy","currentAnswer","includes","answerIndex","indexOf","splice","push","setItem","target","options","option","FormControlLabel","control","Radio","fontSize","label","Button","QuizResultSummary","questions","response","Progress","returnStr","stringValue","String","replaceAll","pro","GiveOptions","Options","OptArrPrint","optItem","optIndex","ColorDecider","err","CorrectAnswers","opt","classes","_ques$ans","ColorDeciderForAnswer","_ques$ans2","SubmittedAnswer","quesIndex","_ques$ans3","_ques$desc","activeContentId","fetchNextStop","setQuizInfo","React","setResponse","setQuestion","fetchData","_response$data","_response$data2","_response$data2$data","_response$data3","post","_response$data4","_response$data5","_response$data5$resul","overflowY","size","colSpan","quiz_duration","QuizComponent","ViewComponentChanger","setActiveContentId","VideoPlayer","PdfPlayer","QuizPlayer","CourseScreen","courseDetail","fetchNextContent","useOutletContext","setContent","_res$data","res","apiAuth","get","_res$data2","fetchContent"],"sourceRoot":""}