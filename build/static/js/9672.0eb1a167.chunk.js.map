{"version":3,"file":"static/js/9672.0eb1a167.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","pages/Admin/pages/courses/AdminCoursesSectionVideo.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import {\r\n  ArrowBack,\r\n  DeleteForever,\r\n  Edit,\r\n\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  Switch,\r\n  TextField,\r\n\r\n} from \"@mui/material\";\r\n\r\nimport { apiAuth, apiJsonAuth } from \"api\";\r\nimport { useFormik } from \"formik\";\r\nimport { useGlobalContext } from \"global/context\";\r\nimport { pop2 } from \"utils/Popup\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction AdminCoursesSectionVideo() {\r\n  let [status, setStatus] = useState(\"active\");\r\n  let [videos, setVideos] = useState([]);\r\n  const [showContentAdd, setShowContentAdd] = useState(false);\r\n  const [showQuizAdd, setShowQuizAdd] = useState(false);\r\n  const [editContent, setEditContent] = useState(false);\r\n  const [selectedVideo, setSelectedVideo] = useState(null); // To hold the video to edit\r\n  const [open, setOpen] = useState(false); // Modal open state\r\n  const [newLink, setNewLink] = useState('');\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [videoToDelete, setVideoToDelete] = useState(null);\r\n\r\n\r\n  const [currentVideo, setCurrentVideo] = useState(null);\r\n  let [update, setUpdate] = useState(0);\r\n  let location = useLocation();\r\n  let navigate = useNavigate();\r\n  const { token } = useGlobalContext();\r\n  //   console.log(location.pathname.split(\"/\"));\r\n  let pathArr = location.pathname.split(\"/\");\r\n  //   console.log(pathArr[pathArr.length - 1]);\r\n  let id = pathArr[pathArr.length - 1];\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      courseId: id,\r\n      path: \"\",\r\n      type: \"1\",\r\n      status: \"\",\r\n      order: \"\",\r\n    },\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, action) => {\r\n      toast.loading(\"loading\");\r\n      const data = { ...values, status, sectionId: id };\r\n      try {\r\n        const res = await apiJsonAuth.post(\"admin/course/section/video\", data);\r\n        if (res.status === 200) {\r\n          toast.dismiss();\r\n          toast(\"Video Added Successfully\");\r\n          setVideos((prev) => [...prev, res.data.result]);\r\n          action.resetForm(); // Reset the form fields\r\n          setShowContentAdd(false); // Close the modal after successful submission\r\n        }\r\n      } catch (err) {\r\n        pop2.warning(\"Error: \" + err.message);\r\n      }\r\n    },\r\n  });\r\n\r\n\r\n  const getCoursesVideos = async () => {\r\n    try {\r\n      const res = await apiAuth.get(`admin/course/section/video?id=${id}`);\r\n      if (res.status === 200) {\r\n        setVideos(res.data.result);\r\n      }\r\n    } catch (err) {\r\n      pop2.warning(\"Error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoursesVideos();\r\n  }, [id]);\r\n\r\n\r\n  const handleEditClick = async (video) => {\r\n    console.log(\"Editing video ID:\", video.id); // Log the ID being used for fetching\r\n\r\n    try {\r\n      const res = await apiAuth.get(`admin/course/section/video/by/${video.id}`);\r\n\r\n      if (res.status === 200) {\r\n        const fetchedVideo = res.data.result; // Assuming the API sends the video details here.\r\n        setCurrentVideo(fetchedVideo);  // Set the video data in state\r\n        setStatus(fetchedVideo.status || \"active\");  // Set the status of the video\r\n        setEditContent(true);  // Show the edit modal\r\n      }\r\n    } catch (err) {\r\n      pop2.warning(\"Error fetching video details: \" + err.message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSaveClick = async (values) => {\r\n    try {\r\n      const res = await apiAuth.put(`admin/course/section/video/updated/${currentVideo.id}`, {\r\n        ...values,\r\n        status,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        pop2.success(\"Video updated successfully!\");\r\n\r\n        // Update the video list with the newly updated video data\r\n        setVideos((prevVideos) =>\r\n          prevVideos.map((video) =>\r\n            video.id === currentVideo.id ? { ...video, ...values, status } : video\r\n          )\r\n        );\r\n\r\n        setEditContent(false);  // Close the modal\r\n      }\r\n    } catch (err) {\r\n      pop2.warning(\"Error updating video: \" + err.message);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleDeleteClick = (videoId) => {\r\n\r\n    setVideoToDelete(videoId);\r\n    setShowDeleteConfirm(true);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n\r\n    if (videoToDelete) {\r\n\r\n      try {\r\n        const res = await apiAuth.delete(`admin/delete/course/section/video/${videoToDelete}`);\r\n        if (res.status === 200) {\r\n          pop2.success(\"Video deleted successfully!\");\r\n          setVideos((prevVideos) => prevVideos.filter((video) => video.id !== videoToDelete));\r\n        }\r\n      } catch (err) {\r\n        pop2.warning(\"Error deleting video: \" + err.message);\r\n      }\r\n      setShowDeleteConfirm(false);\r\n      setVideoToDelete(null);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const quizFormik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      quiz_duration: \"\",\r\n      level: \"Easy\",\r\n      passing_criteria: \"\",\r\n      sectionId: id,\r\n      desc: \"\",\r\n      order: \"\",\r\n      type: \"3\",\r\n      status: \"active\",\r\n    },\r\n    onSubmit: async (value, action) => {\r\n      toast.loading(\"Creating Quiz.\");\r\n      apiJsonAuth\r\n        .post(\"/course/quiz/create\", value, {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        })\r\n        .then(async (res) => {\r\n          toast.dismiss();\r\n          if (res.data.status === 200) {\r\n            value.path = res.data?.result?.id;\r\n            await apiJsonAuth\r\n              .post(\"admin/course/section/video\", value)\r\n              .catch((err) => {\r\n                console.log(err);\r\n                toast.warning(\"Something Went Wrong!\");\r\n              });\r\n            action.resetForm();\r\n            setUpdate(update + 1);\r\n            toast.success(\"Quiz is Created!\");\r\n            setShowQuizAdd(false)\r\n          } else {\r\n            console.log(res);\r\n            toast.warning(\"Something Went Wrong!\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast.dismiss();\r\n          console.error(err);\r\n        });\r\n    },\r\n  });\r\n\r\n  // const getCoursesVideos = async () => {\r\n  //   try {\r\n  //     const res = await apiAuth.get(\"admin/course/section/video?id=\" + id);\r\n  //     if (res.status === 200) {\r\n  //       // console.log(\"Data Fetched\")\r\n  //       setVideos(res?.data?.result);\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //     pop2.warning(\"Error\" + \" \" + err);\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   getCoursesVideos();\r\n  // }, [update]);\r\n  //   console.log(videos);\r\n  const contentTypeProvider = (type) => {\r\n    switch (type) {\r\n      case 1:\r\n        return \"vedio\";\r\n      case 2:\r\n        return \"pdf\";\r\n      case 3:\r\n        return \"quiz\";\r\n      default:\r\n        return \"invalid\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Button onClick={() => window.history.back()} startIcon={<ArrowBack />}>\r\n          Go Back\r\n        </Button>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h4>Section Content</h4>\r\n              <Button onClick={() => setShowQuizAdd(true)} variant=\"outlined\" color=\"primary\">\r\n                Add New Quiz\r\n              </Button>\r\n              <Button onClick={() => setShowContentAdd(true)} variant=\"outlined\" color=\"primary\">\r\n                Add New Content\r\n              </Button>\r\n            </div>\r\n            <div className=\"table-responsive border rounded mt-3\">\r\n              <table className=\"designed-table table table-borderless align-middle mb-0\">\r\n                <thead>\r\n                  <tr className=\"bg-light\">\r\n                    <th className=\"fw-semibold p-3\">Title</th>\r\n                    <th className=\"fw-semibold p-3\">Url</th>\r\n                    <th className=\"fw-semibold p-3\">Type</th>\r\n                    <th className=\"fw-semibold p-3\">Order</th>\r\n                    <th className=\"fw-semibold p-3\">Status</th>\r\n                    <th className=\"fw-semibold p-3\" style={{ width: 100 }}>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {videos.map((content) => (\r\n                    <tr className=\"border-bottom\" key={content.id}>\r\n                      <td className=\"p-2\">{content.title}</td>\r\n                      <td className=\"p-3 line-clamp\">\r\n                        {content.type === 3 ? <Link to={content.path}>Go to Quiz</Link> : content.path}\r\n                      </td>\r\n                      <td className=\"p-3\">{contentTypeProvider(content.type)}</td>\r\n                      <td className=\"p-3\">{content.order}</td>\r\n                      <td className=\"p-3\">\r\n                        <span className={`${content.status === 'active' ? 'bg-success' : 'bg-danger'} p-1 px-3 rounded-pill text-white`}>\r\n                          {content.status}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"success\"\r\n                          size=\"small\"\r\n                          startIcon={<Edit />}\r\n                          onClick={() => handleEditClick(content)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          className=\"mt-1\"\r\n                          fullWidth\r\n                          variant=\"outlined\"\r\n                          color=\"error\"\r\n                          size=\"small\"\r\n                          startIcon={<DeleteForever />}\r\n                          onClick={() => handleDeleteClick(content.id)}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              {/* Delete Confirmation Modal */}\r\n              <Modal show={showDeleteConfirm} onHide={() => setShowDeleteConfirm(false)}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm Deletion</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>Are you sure you want to delete this video?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"outlined\" color=\"error\" onClick={() => setShowDeleteConfirm(false)}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"success\" onClick={confirmDelete}>\r\n                    Confirm\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n\r\n              {/* Edit Modal */}\r\n              <Modal show={editContent} onHide={() => setEditContent(false)}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Edit Course Content</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      const values = {\r\n                        title: e.target.title.value,\r\n                        path: e.target.path.value,\r\n                        order: e.target.order.value,\r\n                        type: e.target.type.value,\r\n                      };\r\n                      handleSaveClick(values);\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                  >\r\n                    <div className=\"row row-cols-2 g-2\">\r\n                      <div className=\"col-12\">\r\n                        <TextField\r\n                          fullWidth\r\n                          id=\"title\"\r\n                          label=\"Title\"\r\n                          type=\"text\"\r\n                          name=\"title\"\r\n                          defaultValue={currentVideo?.title || \"\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <TextField\r\n                          fullWidth\r\n                          required\r\n                          id=\"path\"\r\n                          name=\"path\"\r\n                          label=\"Path\"\r\n                          type=\"text\"\r\n                          defaultValue={currentVideo?.path || \"\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <TextField\r\n                          id=\"order\"\r\n                          label=\"Order\"\r\n                          type=\"number\"\r\n                          name=\"order\"\r\n                          defaultValue={currentVideo?.order || \"\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label htmlFor=\"type\">Type</label>\r\n                        <select\r\n                          className=\"form-select py-2\"\r\n                          name=\"type\"\r\n                          id=\"type\"\r\n                          defaultValue={currentVideo?.type || \"1\"}\r\n                        >\r\n                          <option value=\"1\">Video</option>\r\n                          <option value=\"2\">PDF</option>\r\n                          <option value=\"3\">Quiz</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                      <div className=\"col\">\r\n                        <Switch\r\n                          checked={status === \"active\"}\r\n                          onChange={() => setStatus(status === \"active\" ? \"inactive\" : \"active\")}\r\n                        />\r\n                        <span>{status === \"active\" ? \"Active\" : \"Inactive\"}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end mt-3\">\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"success\">\r\n                        Save Changes\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </Modal.Body>\r\n              </Modal>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal show={showContentAdd} onHide={() => setShowContentAdd(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"\">Add Course Content</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={Formik.handleSubmit} autoComplete=\"off\">\r\n            <div className=\"row row-cols-2 g-2\">\r\n              <div className=\"col-12\">\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"title\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={Formik.values.title}\r\n                  onChange={Formik.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <input\r\n                  disabled\r\n                  id=\"courseId\"\r\n                  name=\"courseId\"\r\n                  type=\"hidden\"\r\n                  value={Formik?.courseId}\r\n                  onChange={Formik.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  fullWidth\r\n                  required\r\n                  id=\"path\"\r\n                  name=\"path\"\r\n                  label=\"Path\"\r\n                  type=\"text\"\r\n                  value={Formik.values.path}\r\n                  onChange={Formik.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <TextField\r\n                  id=\"order\"\r\n                  fullWidth\r\n                  name=\"order\"\r\n                  label=\"Order\"\r\n                  value={Formik.values.order}\r\n                  type=\"number\"\r\n                  onChange={Formik.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <span className=\"text-dark\">Content Type</span>\r\n                <select\r\n                  required\r\n                  name=\"type\"\r\n                  id=\"type\"\r\n                  value={Formik.values.type}\r\n                  onChange={Formik.handleChange}\r\n                  className=\"form-select py-2\"\r\n                >\r\n                  <option value=\"1\">\r\n                    Youutube Vedio Link</option>\r\n                  <option value=\"2\">Pdf Link</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div class=\"form-check form-switch p-0 ms-2\">\r\n                  <label\r\n                    class=\"form-check-label fs-6 text-dark\"\r\n                    htmlfor=\"status\"\r\n                  >\r\n                    Course Status\r\n                  </label>\r\n                  <div className=\"d-flex align-items-center justify-content-start\">\r\n                    <Switch\r\n                      color=\"success\"\r\n                      id=\"status\"\r\n                      className=\"text-start \"\r\n                      onClick={() => {\r\n                        setStatus(status === \"active\" ? \"inactive\" : \"active\");\r\n                      }}\r\n                      defaultChecked\r\n                    />\r\n                    <span\r\n                      className={`fs-6 text-center text-capitalize  bg-opacity-25 border rounded-pill px-3\r\n                        ${status === \"active\"\r\n                          ? \"text-success bg-success border-success\"\r\n                          : \"text-danger bg-danger border-danger\"\r\n                        } `}\r\n                    >\r\n                      {\" \"}\r\n                      {status}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"d-flex justify-content-end mt-3\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setShowContentAdd(false);\r\n                    Formik?.resetForm();\r\n                  }}\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  color=\"error\"\r\n                  variant=\"outlined\"\r\n                  className=\"py-2 px-4 rounded me-2\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"success\"\r\n                  variant=\"contained\"\r\n                  className=\"py-2 px-4 rounded\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Create Quiz Model */}\r\n      <Modal show={showQuizAdd} onHide={() => setShowQuizAdd(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"\">Add Course Content</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={quizFormik.handleSubmit} autoComplete=\"off\">\r\n            <div className=\"container\">\r\n              <TextField\r\n                className=\"my-2\"\r\n                required\r\n                size=\"small\"\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                fullWidth\r\n                value={quizFormik.values.title}\r\n                onChange={quizFormik.handleChange}\r\n              />\r\n              <TextField\r\n                className=\"my-2\"\r\n                maxRows={3}\r\n                multiline\r\n                size=\"small\"\r\n                label=\"Descriptions\"\r\n                name=\"desc\"\r\n                fullWidth\r\n                value={quizFormik.values.desc}\r\n                onChange={quizFormik.handleChange}\r\n              />\r\n              <TextField\r\n                type=\"number\"\r\n                className=\"my-2 px-1 w-50\"\r\n                size=\"small\"\r\n                label=\"Duration (Min)\"\r\n                required\r\n                name=\"quiz_duration\"\r\n                value={quizFormik.values.quiz_duration}\r\n                onChange={quizFormik.handleChange}\r\n              />\r\n              <TextField\r\n                type=\"number\"\r\n                className=\"my-2 px-1 w-50\"\r\n                size=\"small\"\r\n                label=\"Passing Criteria (%)\"\r\n                required\r\n                name=\"passing_criteria\"\r\n                value={quizFormik.values.passing_criteria}\r\n                onChange={quizFormik.handleChange}\r\n              />\r\n              <TextField\r\n                type=\"number\"\r\n                className=\"my-2 px-1 w-50\"\r\n                size=\"small\"\r\n                label=\"Order\"\r\n                required\r\n                name=\"order\"\r\n                value={quizFormik.values.order}\r\n                onChange={quizFormik.handleChange}\r\n              />\r\n              <select\r\n                name=\"level\"\r\n                className=\"text-dark px-1 w-25 p-2 my-2 border-1 rounded-2 border-secondary\"\r\n                value={quizFormik.values.level}\r\n                onChange={quizFormik.handleChange}\r\n                defaultValue=\"\"\r\n              >\r\n                <option>Easy</option>\r\n                <option>Medium</option>\r\n                <option>Hard</option>\r\n              </select>\r\n              <div className=\"w-25 px-2 d-inline-block py-1\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  class=\"btn-check p-0 m-0\"\r\n                  id=\"btn-check-outlined\"\r\n                  autocomplete=\"off\"\r\n                  name=\"status\"\r\n                  checked={quizFormik.values.status === \"active\"}\r\n                  onChange={() => {\r\n                    quizFormik.setFieldValue(\r\n                      \"status\",\r\n                      quizFormik.values.status === \"active\"\r\n                        ? \"inactive\"\r\n                        : \"active\"\r\n                    );\r\n                  }}\r\n                />\r\n                <label\r\n                  class=\"btn px-3 py-1 m-1 btn-outline-success\"\r\n                  for=\"btn-check-outlined\"\r\n                >\r\n                  Active\r\n                </label>\r\n              </div>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"px-4 w-25 mx-2 p-2\"\r\n                variant=\"outlined\"\r\n              >\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminCoursesSectionVideo;\r\n"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","concat","capitalize","size","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","variants","style","marginLeft","marginRight","switchClasses","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","_ref","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","_ref2","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","value","main","light","map","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","boxShadow","shadows","React","inProps","ref","useDefaultProps","className","sx","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","status","setStatus","useState","videos","setVideos","showContentAdd","setShowContentAdd","showQuizAdd","setShowQuizAdd","editContent","setEditContent","selectedVideo","setSelectedVideo","open","setOpen","newLink","setNewLink","showDeleteConfirm","setShowDeleteConfirm","videoToDelete","setVideoToDelete","currentVideo","setCurrentVideo","update","setUpdate","location","useLocation","useNavigate","token","useGlobalContext","pathArr","pathname","split","id","length","Formik","useFormik","initialValues","title","courseId","path","order","enableReinitialize","onSubmit","async","values","toast","loading","data","_objectSpread","sectionId","res","apiJsonAuth","post","dismiss","prev","result","resetForm","err","pop2","warning","message","useEffect","apiAuth","get","getCoursesVideos","quizFormik","quiz_duration","level","passing_criteria","desc","headers","Authorization","then","_res$data","_res$data$result","catch","console","log","success","error","contentTypeProvider","_Fragment","Button","onClick","window","history","back","startIcon","ArrowBack","variant","content","Link","to","fullWidth","Edit","video","fetchedVideo","handleEditClick","DeleteForever","handleDeleteClick","videoId","Modal","show","onHide","Header","closeButton","Title","Body","Footer","delete","prevVideos","e","preventDefault","put","handleSaveClick","target","autoComplete","TextField","label","defaultValue","required","htmlFor","onChange","handleSubmit","handleChange","class","htmlfor","defaultChecked","maxRows","multiline","autocomplete","setFieldValue","for"],"sourceRoot":""}